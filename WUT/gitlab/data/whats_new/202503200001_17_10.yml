- name: Duo Code Review available in beta
  description: |
    Code review is an essential activity of software development. It ensures that contributions to a project maintain and improve code quality and security, and is an avenue of mentorship and feedback for engineers. It's also one of the most time-consuming activities in the software development process. Duo Code Review is the next evolution of the code review process. Duo Code Review can accelerate your development process. When it performs an initial review on your merge request, it can help identify potential bugs and suggest further improvements - some of which you can apply directly from your browser. Use it to iterate on and improve your changes before you add another human to the loop.
  stage: create
  self-managed: true
  gitlab-com: true
  available_in: [Ultimate]
  documentation_link: https://docs.gitlab.com/user/project/merge_requests/duo_in_merge_requests/#have-gitlab-duo-review-your-code
  image_url: https://img.youtube.com/vi/FlHqfMMfbzQ/hqdefault.jpg
  published_at: 2025-03-20
  release: 17.10
- name: Root Cause Analysis available on Gitlab Duo Self-Hosted
  description: |
    You can now use [GitLab Duo Root Cause Analysis](https://about.gitlab.com/blog/2024/06/06/developing-gitlab-duo-blending-ai-and-root-cause-analysis-to-fix-ci-cd/) on GitLab Duo Self-Hosted. This feature is in beta for GitLab Self-Managed instances using GitLab Duo Self-Hosted, with support for Mistral, Anthropic, and OpenAI GPT model families. With Root Cause Analysis on GitLab Duo Self-Hosted, you can troubleshoot failed jobs in CI/CD pipelines faster without compromising data sovereignty. Root Cause Analysis analyzes the failed job log, quickly determines the root cause of the job failure, and suggests a fix for you.
  stage: ai-powered
  self-managed: true
  gitlab-com: false
  available_in: [Ultimate]
  documentation_link: https://docs.gitlab.com/administration/gitlab_duo_self_hosted/#supported-gitlab-duo-features
  image_url: https://about.gitlab.com/images/17_10/RCA_beta_17.10_min.png
  published_at: 2025-03-20
  release: 17.10
- name: GitLab Query Language Views Beta
  description: |
    Tracking and understanding work in progress across GitLab previously required navigating multiple locations, reducing team efficiency and consuming valuable time. This release introduces GitLab Query Language (GLQL) Views Beta so you can create dynamic, real-time work tracking directly in your existing workflows. GLQL Views embed live data queries in Markdown code blocks throughout Wiki pages, epic descriptions, issue comments, and merge requests. Previously available as an experiment, GLQL Views now enter beta with support for sophisticated filtering using logical expressions and operators across key fields, including assignee, author, label, and milestone. You can customize your view's presentation as tables or lists, control which fields appear, and set result limits to create focused, actionable insights for your team. Teams can now maintain context while accessing the information they need, creating shared understanding, and improving collaboration â€” all without leaving their current workflow.
  stage: plan
  self-managed: true
  gitlab-com: true
  available_in: [Free, Premium, Ultimate]
  documentation_link: https://docs.gitlab.com/user/glql/#glql-views
  image_url: https://img.youtube.com/vi/CML0hefVwSA/hqdefault.jpg
  published_at: 2025-03-20
  release: 17.10
- name: Enhanced markdown experience
  description: |
    GitLab Flavored Markdown has been enhanced with several powerful improvements:

      - **Improved math and image handling**:
        - Disable [math rendering](https://docs.gitlab.com/user/markdown/#math-equations) limits in your group or self-hosted instance to handle more complex mathematical expressions.
        - Control [image dimensions](https://docs.gitlab.com/user/markdown/#change-image-or-video-dimensions) precisely using pixel values or percentages to better manage content layout.
      - **Enhanced editor experience**:
        - Continue lists automatically when pressing Enter/Return.
        - Shift text left or right using keyboard shortcuts.
        - Create clear term-definition pairs using description list syntax.
        - Adjust video widths flexibly.
      - **Better content organization**:
        - Navigate content more easily with auto-expanding [summary quick views](https://docs.gitlab.com/user/markdown/#show-item-summary) (add `+s` to URLs).
        - See referenced [issue titles](https://docs.gitlab.com/user/markdown/#show-item-title) render automatically (add `+` to URLs).
        - Organize content modularly using [`include` syntax](https://docs.gitlab.com/user/markdown/#includes).
        - Create visually distinct callouts and warnings using [alert boxes](https://docs.gitlab.com/user/markdown/#alerts).
      These improvements make GitLab Flavored Markdown more powerful for teams creating and maintaining documentation while offering greater flexibility in how content is presented and organized.
  stage: plan
  self-managed: true
  gitlab-com: true
  available_in: [Free, Premium, Ultimate]
  documentation_link: https://docs.gitlab.com/user/markdown/
  image_url: https://about.gitlab.com/images/17_10/enhanced_markdown_experience.png
  published_at: 2025-03-20
  release: 17.10
- name: New visualization of DevOps performance with DORA metrics across projects
  description: |
    We are excited to introduce the **Projects by DORA metric** panel, a new addition to the [Value Streams Dashboard](https://www.youtube.com/watch?v=EA9Sbks27g4). This table lists all projects in the top-level group, with breakdown into the [four DORA metrics](https://about.gitlab.com/solutions/value-stream-management/dora/#overview). Managers can use this table to identify high, medium, and low-performing projects. This information can also help make data-driven decisions, allocate resources effectively, and focus on initiatives that enhance software delivery speed, stability, and reliability. The [DORA metrics](https://docs.gitlab.com/user/analytics/dora_metrics/) are available out-of-the-box in GitLab, and now together with the [**DORA Performers score** panel](https://about.gitlab.com/blog/2024/01/18/inside-dora-performers-score-in-gitlab-value-streams-dashboard/) executives have a complete view into their organization's DevOps health top to bottom.
  stage: plan
  self-managed: true
  gitlab-com: true
  available_in: [Ultimate]
  documentation_link: https://docs.gitlab.com/user/analytics/value_streams_dashboard/#projects-by-dora-metric
  image_url: https://about.gitlab.com/images/17_10/17.7_vsd_dora_table2.png
  published_at: 2025-03-20
  release: 17.10
- name: Redesigned issues interface now in Beta
  description: |
    Issues now share a common framework with epics and tasks, featuring real-time updates and workflow improvements:
    * **Drawer view:** Open items from lists or boards in a drawer for quick viewing without leaving your current context. A button at the top lets you expand to full page view.
    * **Change type:** Convert types between epics, issues, and tasks using the "Change type" action (replaces "Promote to epic")
    * **Start date:** Issues now support start dates, aligning their functionality with epics and tasks.
    * **Ancestry:** The complete hierarchy is above the title and the Parent field in the sidebar. To manage relationships, use the new commands `/set_parent`, `/remove_parent`, `/set_child`, and `/remove_child`.
    * **Controls:** All actions are now accessible from the top menu (vertical ellipsis), which remains visible in the sticky header when scrolling.
    * **Development:** All development items (merge requests, branches, and feature flags) related to an issue or task are now consolidated in a single, convenient list.
    * **Layout:** UI improvements create a more seamless experience between issues, epics, tasks, and merge requests, helping you navigate your workflow more efficiently.
    * **Linked items:** Create relationships between tasks, issues, and epics with improved linking options. Drag and drop to change link types and toggle the visibility of labels and closed items.
  stage: plan
  self-managed: true
  gitlab-com: true
  available_in: [Free, Premium, Ultimate]
  documentation_link: https://docs.gitlab.com/user/project/issues/issue_work_items/
  image_url: https://about.gitlab.com/images/17_10/focused-drawer-new-issues.png
  published_at: 2025-03-20
  release: 17.10
- name: Change the severity of a vulnerability
  description: |
    When triaging vulnerabilities, you need the flexibility to adjust severity levels based on your organization's unique security context and risk tolerance. Until now, you had to rely on the default severity levels assigned by security scanners, which might not accurately reflect the risk level for your specific environment. Now you can manually change the severity of specific vulnerability occurrences to better align with your organization's security needs. This allows you to:
    - Adjust the severity level of any vulnerability to **Critical**, **High**, **Medium**, **Low**, **Info**, or **Unknown**.
    - Change multiple vulnerabilities' severity at once from the vulnerability report.
    - Easily identify which vulnerabilities have custom severity levels through visual indicators.
    All severity changes are tracked in the vulnerability history and audit events and can only be overridden by your team members who have at least the Maintainer role for the project, or a custom role with the `admin_vulnerability` permission. This feature gives security teams more flexibility and control over vulnerability prioritization.
  stage: security_risk_management
  self-managed: true
  gitlab-com: true
  available_in: [Ultimate]
  documentation_link: https://docs.gitlab.com/user/application_security/vulnerability_report/#change-or-override-vulnerability-severity
  image_url: https://about.gitlab.com/images/17_10/severity-override.png
  published_at: 2025-03-20
  release: 17.10
