# frozen_string_literal: true

# Security::VulnerabilityElasticIdentifierNamesFinder
#
# Used to filter Vulnerability records for Vulnerabilities API from vulnerabilities elasticsearch index
#
# Arguments:
#   see in ee/app/finders/security/vulnerability_elastic_base_finder.rb

module Security
  class VulnerabilityElasticIdentifierNamesFinder < VulnerabilityElasticBaseFinder # rubocop:disable Search/NamespacedClass -- Keeping this in the Security namespace as it is used specifically by security classes
    def execute
      options = search_params.merge(
        {
          partial_identifier_name: params[:partial_identifier_name],
          search_identifier_names: true
        })

      query = ::Search::Elastic::VulnerabilityQueryBuilder.build(query: nil, options: options)
      Gitlab::Search::Client.execute_search(query: query, options: es_search_options) do |es_response|
        aggregations = ::Search::Elastic::ResponseMapper.new(es_response).aggregations
        parsed_aggregations = Gitlab::Search::AggregationParser.call(aggregations).first

        parsed_aggregations.buckets.pluck(:key) # rubocop:disable CodeReuse/ActiveRecord,Database/AvoidUsingPluckWithoutLimit -- not an active record object
      end
    end
  end
end
