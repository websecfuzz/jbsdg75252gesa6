# frozen_string_literal: true

module Projects
  module Security
    class VulnerabilityReportController < Projects::ApplicationController
      include GovernUsageProjectTracking

      before_action do
        authorize_read_vulnerability!
        push_frontend_feature_flag(:vulnerability_report_filtered_search_v2, @project, type: :wip)
        push_frontend_feature_flag(:hide_vulnerability_severity_override, @project.root_ancestor, type: :ops)
        push_frontend_feature_flag(:existing_jira_issue_attachment_from_vulnerability_bulk_action, @project, type: :wip)
        push_frontend_feature_flag(:vulnerability_report_type_scanner_filter, @project, type: :beta)
        push_frontend_ability(ability: :resolve_vulnerability_with_ai, resource: @project, user: current_user)
        push_frontend_ability(ability: :access_advanced_vulnerability_management, resource: @project,
          user: current_user)
      end

      feature_category :vulnerability_management
      urgency :low
      track_govern_activity 'security_vulnerability_report', :index
      track_internal_event :index, name: 'visit_vulnerability_report', category: name

      alias_method :vulnerable, :project
    end
  end
end
