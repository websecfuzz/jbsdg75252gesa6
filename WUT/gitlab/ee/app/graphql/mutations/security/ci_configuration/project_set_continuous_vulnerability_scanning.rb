# frozen_string_literal: true

module Mutations
  module Security
    module CiConfiguration
      class ProjectSetContinuousVulnerabilityScanning < BaseMutation
        graphql_name 'ProjectSetContinuousVulnerabilityScanning'

        include FindsProject

        description <<~DESC
          Enable/disable Continuous Vulnerability Scanning for the given project.
        DESC

        argument :project_path, GraphQL::Types::ID,
          required: true,
          description: 'Full path of the project.'

        argument :enable, GraphQL::Types::Boolean,
          required: true,
          description: 'Desired status for Continuous Vulnerability Scanning feature.'

        field :continuous_vulnerability_scanning_enabled, GraphQL::Types::Boolean,
          null: false,
          description: 'Whether feature is enabled.'

        authorize :enable_continuous_vulnerability_scans

        def resolve(project_path:, enable:)
          project = authorized_find!(project_path)

          enabled = ::Security::Configuration::ProjectSetContinuousVulnerabilityScanningService
            .execute(project: project, enable: enable)

          { continuous_vulnerability_scanning_enabled: enabled, errors: [] }
        end
      end
    end
  end
end
