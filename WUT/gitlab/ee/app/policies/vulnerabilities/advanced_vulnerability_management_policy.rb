# frozen_string_literal: true

module Vulnerabilities
  module AdvancedVulnerabilityManagementPolicy
    extend ActiveSupport::Concern

    included do
      condition(:can_access_vulnerability_es_features) do
        security_access_granted? &&
          vulnerability_indexing_enabled? &&
          advanced_vulnerability_management_enabled? &&
          vulnerability_backfill_migration_completed?
      end

      rule { can_access_vulnerability_es_features }.enable :access_advanced_vulnerability_management

      private

      def security_access_granted?
        can?(:read_security_resource)
      end

      def vulnerability_indexing_enabled?
        ::Search::Elastic::VulnerabilityIndexingHelper.vulnerability_indexing_allowed?
      end

      def advanced_vulnerability_management_enabled?
        ::Feature.enabled?(:advanced_vulnerability_management, @subject) ||
          ::Feature.enabled?(:advanced_vulnerability_management, @user)
      end

      def vulnerability_backfill_migration_completed?
        ::Elastic::DataMigrationService.migration_has_finished?(:re_introduce_backfill_vulnerabilities)
      end
    end
  end
end
