# frozen_string_literal: true

module VulnerabilityExternalIssueLinks
  class DestroyService < BaseService
    def initialize(vulnerability_external_issue_link)
      @vulnerability_external_issue_link = vulnerability_external_issue_link
    end

    def execute
      vulnerability_external_issue_link.destroy
      publish_event if vulnerability_external_issue_link.destroyed?
      vulnerability_external_issue_link
    end

    private

    attr_reader :vulnerability_external_issue_link

    def publish_event
      event = Vulnerabilities::LinkToExternalIssueTrackerRemoved.new(data: {
        vulnerability_id: vulnerability_external_issue_link.vulnerability_id
      }).tap do |e|
        e.project = vulnerability_external_issue_link.vulnerability.project
      end

      Gitlab::EventStore.publish(event)
    end
  end
end
