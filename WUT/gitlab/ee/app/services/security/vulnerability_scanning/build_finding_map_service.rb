# frozen_string_literal: true

module Security
  module VulnerabilityScanning
    class BuildFindingMapService
      include Gitlab::Utils::StrongMemoize

      def self.execute(...)
        new(...).execute
      end

      def initialize(advisory:, affected_component:, source:, pipeline:, project:, purl_type:, scanner:)
        @advisory = advisory
        @affected_component = affected_component
        @source = source
        @pipeline = pipeline
        @project = project
        @purl_type = purl_type
        @scanner = scanner
      end

      def execute
        return if finding.nil?

        VulnerabilityScanning::FindingMap.new(pipeline: pipeline, report_finding: finding, purl_type: purl_type)
      rescue StandardError => error
        process_unrecoverable_error(error, project.id)
        nil
      end

      private

      attr_reader :advisory, :affected_component, :source, :pipeline, :project, :purl_type, :scanner

      def finding
        builder = ::Gitlab::VulnerabilityScanning::FindingBuilder.for_purl_type!(purl_type)
        builder.new(
          project: project,
          pipeline: pipeline,
          scanner: scanner,
          sbom_source: source,
          advisory: advisory,
          affected_component: affected_component
        ).finding
      rescue ::Gitlab::VulnerabilityScanning::FindingBuilder::Error => error
        process_recoverable_error(error, project.id)
        nil
      end
      strong_memoize_attr :finding

      def process_error(error, project_id, message)
        ::Gitlab::ErrorTracking.track_exception(
          error,
          message: message,
          project_id: project_id,
          advisory_xid: advisory.xid,
          source_xid: advisory.source_xid
        )
      end

      def process_recoverable_error(error, project_id)
        process_error(error, project_id, 'Skipping building finding for an affected component')
      end

      def process_unrecoverable_error(error, project_id)
        process_error(error, project_id, 'Continuous vulnerability scanning failed to build finding')
      end
    end
  end
end
