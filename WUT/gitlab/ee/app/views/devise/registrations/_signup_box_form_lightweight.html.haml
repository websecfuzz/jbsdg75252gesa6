- form_resource_name = "new_#{resource_name}"
- button_class = local_assigns[:button_class]

= gitlab_ui_form_for(resource, as: form_resource_name, url: url,
  html: { class: 'gl-show-field-errors js-arkose-labs-form', aria: { live: 'assertive' }},
  data: { testid: 'signup-form' }) do |f|
  .devise-errors
    = render 'devise/shared/error_messages', resource: resource
  - if Gitlab::CurrentSettings.invisible_captcha_enabled
    = invisible_captcha nonce: true, autocomplete: SecureRandom.alphanumeric(12)
  - if @invite_email.present?
    .form-group
      = f.label :email, _('Email'), class: 'gl-block'
      .gl-font-bold{ 'data-testid': 'invite-email' }
        = @invite_email
      = f.hidden_field :email, value: @invite_email
      = hidden_field_tag :invite_email, @invite_email

  .username.form-group
    = f.label :username, _('Username')
    = f.text_field :username,
      class: 'form-control gl-form-input middle js-block-emoji js-validate-length js-validate-username js-track-error',
      data: signup_username_data_attributes.merge(track_action_for_errors: preregistration_tracking_label),
      pattern: Gitlab::PathRegex::NAMESPACE_FORMAT_REGEX_JS,
      required: true,
      title: _('Please create a username with only alphanumeric characters.')
    %p.validation-error.gl-text-danger.gl-field-error-ignore.gl-mt-2.field-validation.hide
      = _('Username is already taken.')
    %p.validation-success.gl-text-success.gl-field-error-ignore.gl-mt-2.field-validation.hide
      = _('Username is available.')
    %p.validation-pending.gl-field-error-ignore.gl-mt-2.field-validation.hide
      = _('Checking username availabilityâ€¦')
  - unless @invite_email.present?
    .form-group
      = f.label :email, _('Company email')
      = f.email_field :email,
        class: 'form-control gl-form-input middle js-validate-email js-track-error',
        data: { testid: 'new-user-email-field', track_action_for_errors: preregistration_tracking_label },
        required: true,
        title: _('Please provide a valid email address.')
      %p.validation-warning.gl-field-error-ignore.gl-text-danger.hide
        = _('Email address without top-level domain. Make sure that you have entered the correct email address.')
      -# This is used for providing entry to Jihu on email verification
      = render_if_exists 'devise/shared/signup_email_additional_info'
  .form-group.gl-mb-0
    = render 'devise/registrations/password_input', form: f, form_resource_name: form_resource_name
  -# This is used for providing entry to Jihu phone verification
  = render_if_exists 'devise/shared/phone_verification', form: f

  .form-group.gl-mt-6.gl-mb-0
    - if arkose_labs_enabled?(user: nil)
      = render_if_exists 'devise/registrations/arkose_labs'
    - elsif show_recaptcha_sign_up?
      = recaptcha_tags nonce: content_security_policy_nonce

  .form-group.gl-mb-0.gl-py-6
    = render_if_exists 'devise/registrations/opt_in_to_email', f: f

  = render Pajamas::ButtonComponent.new(type: :submit, variant: :confirm, block: true,
    button_options: { class: "#{button_class}",
      data: { testid: 'new-user-register-button', track_action: 'register', track_label: preregistration_tracking_label }}) do
    = button_text
