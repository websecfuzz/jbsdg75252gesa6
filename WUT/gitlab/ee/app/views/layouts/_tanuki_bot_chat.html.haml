- return unless ::Gitlab::Llm::TanukiBot.enabled_for?(user: current_user, container: nil)
- resource_id = Gitlab::Llm::TanukiBot.resource_id
- project_id = Gitlab::Llm::TanukiBot.project_id
- root_namespace_id = Gitlab::Llm::TanukiBot.root_namespace_id
- chat_title = ::Ai::AmazonQ.enabled? ? s_('GitLab Duo Chat with Amazon Q') : s_('GitLab Duo Chat')
- is_agentic_available = Feature.enabled?(:duo_workflow_workhorse, current_user) && project_id.present? && current_user.can?(:access_duo_agentic_chat, @project)

- if Feature.enabled?(:duo_workflow_workhorse, current_user) && project_id.present?
  #js-duo-agentic-chat-app{ data: { project_id: project_id, resource_id: resource_id } }

#js-tanuki-bot-chat-app{ data: { user_id: current_user.to_global_id, resource_id: resource_id, project_id: project_id, root_namespace_id: root_namespace_id, chat_title: chat_title, agentic_available: is_agentic_available.to_s } }
