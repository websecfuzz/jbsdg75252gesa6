#import "ee/security_dashboard/graphql/fragments/vulnerability_severities_count.fragment.graphql"

query vulnerabilitySeveritiesCount(
  $fullPath: ID = ""
  $projectId: [ID!]
  $severity: [VulnerabilitySeverity!]
  $reportType: [VulnerabilityReportType!]
  $scanner: [String!]
  $state: [VulnerabilityState!]
  $scannerId: [VulnerabilitiesScannerID!]
  $hasIssues: Boolean
  $hasResolution: Boolean
  $hasMergeRequest: Boolean
  $hasRemediations: Boolean
  $hasAiResolution: Boolean
  $clusterAgentId: [ClustersAgentID!]
  $image: [String!]
  $isGroup: Boolean = false
  $isProject: Boolean = false
  $isInstance: Boolean = false
  $capped: Boolean = false
  $dismissalReason: [VulnerabilityDismissalReason!]
  $owaspTopTen: [VulnerabilityOwaspTop10!]
  $owaspTopTen2021: [VulnerabilityOwasp2021Top10!]
  $identifierName: String
) {
  instance: instanceSecurityDashboard @include(if: $isInstance) {
    vulnerabilitySeveritiesCount(
      projectId: $projectId
      severity: $severity
      reportType: $reportType
      scanner: $scanner
      state: $state
      scannerId: $scannerId
      hasIssues: $hasIssues
      hasResolution: $hasResolution
      hasMergeRequest: $hasMergeRequest
      hasRemediations: $hasRemediations
      hasAiResolution: $hasAiResolution
      dismissalReason: $dismissalReason
      owaspTopTen: $owaspTopTen
      owaspTopTen2021: $owaspTopTen2021
      capped: $capped
    ) {
      ...VulnerabilitySeveritiesCount
    }
  }
  group(fullPath: $fullPath) @include(if: $isGroup) {
    id
    vulnerabilitySeveritiesCount(
      projectId: $projectId
      severity: $severity
      reportType: $reportType
      scanner: $scanner
      state: $state
      scannerId: $scannerId
      hasIssues: $hasIssues
      hasResolution: $hasResolution
      hasMergeRequest: $hasMergeRequest
      hasRemediations: $hasRemediations
      hasAiResolution: $hasAiResolution
      dismissalReason: $dismissalReason
      identifierName: $identifierName
      owaspTopTen: $owaspTopTen
      owaspTopTen2021: $owaspTopTen2021
      capped: $capped
    ) {
      ...VulnerabilitySeveritiesCount
    }
  }
  project(fullPath: $fullPath) @include(if: $isProject) {
    id
    vulnerabilitySeveritiesCount(
      severity: $severity
      reportType: $reportType
      scanner: $scanner
      state: $state
      scannerId: $scannerId
      hasIssues: $hasIssues
      hasResolution: $hasResolution
      hasMergeRequest: $hasMergeRequest
      hasRemediations: $hasRemediations
      hasAiResolution: $hasAiResolution
      clusterAgentId: $clusterAgentId
      image: $image
      dismissalReason: $dismissalReason
      owaspTopTen: $owaspTopTen
      owaspTopTen2021: $owaspTopTen2021
      capped: $capped
      identifierName: $identifierName
    ) {
      ...VulnerabilitySeveritiesCount
    }
  }
}
