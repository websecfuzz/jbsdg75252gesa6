# frozen_string_literal: true

module EE
  module Gitlab
    module BackgroundMigration
      module BackfillHasVulnerabilityResolutionCwe78Cwe89
        extend ActiveSupport::Concern
        extend ::Gitlab::Utils::Override

        prepended do
          operation_name :backfill_has_vulnerability_resolution_cwe78_cwe89
          feature_category :vulnerability_management
        end

        ADDITIONAL_CWES = %w[CWE-78 CWE-89].freeze

        override :perform
        def perform
          each_sub_batch do |sub_batch|
            connection.execute(update_sql(sub_batch))
          end
        end

        private

        def update_sql(sub_batch)
          <<~SQL
            UPDATE
              vulnerability_reads
            SET
              has_vulnerability_resolution = TRUE
            FROM
              vulnerability_occurrences vo
              JOIN vulnerability_occurrence_identifiers voi ON vo.id = voi.occurrence_id
              JOIN vulnerability_identifiers vi ON voi.identifier_id = vi.id
            WHERE
              vulnerability_reads.vulnerability_id = vo.vulnerability_id
              AND LOWER(vi.external_type) = 'cwe'
              AND vi.name IN (#{quoted_additional_cwes})
              AND vulnerability_reads.has_vulnerability_resolution IS DISTINCT FROM TRUE
              AND vulnerability_reads.report_type = 0
              AND vulnerability_reads.id IN (#{sub_batch.select(:id).to_sql});
          SQL
        end

        def quoted_additional_cwes
          ADDITIONAL_CWES.map { |cwe| connection.quote(cwe) }.join(', ')
        end

        def connection
          ::SecApplicationRecord.connection
        end
      end
    end
  end
end
