# frozen_string_literal: true

RSpec.shared_examples 'vulnerability filterable' do |filter_key|
  describe '#validate_filters' do
    context 'for owasp_top_10' do
      context 'when filters are valid' do
        where(:filter_value) { %w[none A1_2017] }

        with_them do
          let(filter_key) { { owasp_top_ten: [filter_value] } }

          it 'does not raise any error' do
            is_expected.not_to be_instance_of(::Gitlab::Graphql::Errors::ArgumentError)
          end
        end
      end

      context 'when owasp_top_ten includes "none" and other values' do
        let(filter_key) { { owasp_top_ten: %w[none A1_2017] } }

        it 'raises an ArgumentError' do
          error_msg = "Incompatible argument: owasp_top_ten. " \
            "'NONE' wildcard cannot be combined with other OWASP top 10 values."

          expect_graphql_error_to_be_created(Gitlab::Graphql::Errors::ArgumentError, s_(error_msg)) do
            subject
          end
        end
      end
    end

    context 'with reachability' do
      using RSpec::Parameterized::TableSyntax

      let(filter_key) { { reachability: 'IN_USE' } }

      where(:feature_flag_enabled, :migration_finished) do
        false | true
        true  | false
        false | false
      end

      with_them do
        before do
          stub_feature_flags(reachability_es_filter: feature_flag_enabled)
          allow(::Elastic::DataMigrationService).to receive(:migration_has_finished?).and_return(migration_finished)
        end

        it 'raises an ArgumentError' do
          expect_graphql_error_to_be_created(Gitlab::Graphql::Errors::ArgumentError) do
            subject
          end
        end
      end
    end
  end
end

RSpec.shared_examples 'raises ES errors' do
  let(:error_msg) { "Feature is supported only on Gitlab.com and Dedicated with ES" }

  it 'raises an error' do
    expect_graphql_error_to_be_created(Gitlab::Graphql::Errors::ArgumentError, s_(error_msg)) do
      resolved
    end
  end
end

RSpec.shared_examples 'validates owasp_top_ten_2021 filter' do |filter_key|
  let(filter_key) { { owasp_top_ten_2021: %w[none A1_2021] } }

  it 'raises an ArgumentError' do
    error_msg = "Incompatible argument: owasp_top_ten_2021. " \
      "'NONE' wildcard cannot be combined with other OWASP top 10 values."

    expect_graphql_error_to_be_created(Gitlab::Graphql::Errors::ArgumentError, s_(error_msg)) do
      resolved
    end
  end
end
