import { SEVERITY_LEVELS_KEYS, REPORT_TYPES_DEFAULT_KEYS } from 'ee/security_dashboard/constants';
import { humanizeRules } from 'ee/security_orchestration/components/policy_drawer/vulnerability_management/utils';

describe('humanizeRules', () => {
  it('returns empty array if no rules are passed in', () => {
    expect(humanizeRules()).toMatchObject([]);
  });

  it('lists scanners and severity levels when not all scanners and severity levels are selected', () => {
    const rules = [
      {
        type: 'no_longer_detected',
        severity_levels: ['high', 'medium'],
        scanners: ['sast', 'dependency_scanning', 'container_scanning'],
      },
      {
        type: 'no_longer_detected',
        severity_levels: ['low'],
        scanners: ['dast'],
      },
    ];

    expect(humanizeRules(rules)).toMatchObject([
      'SAST, Dependency Scanning, and Container Scanning of High and Medium severity levels',
      'DAST of Low severity level',
    ]);
  });

  it('contains "All scanners" and "all severity levels" when `scanners` and `severity_levels` are an empty array', () => {
    const rules = [
      {
        type: 'no_longer_detected',
        severity_levels: [],
        scanners: [],
      },
    ];
    expect(humanizeRules(rules)).toMatchObject(['All scanners of all severity levels']);
  });

  it('contains "All scanners" and "all severity levels" when `scanners` and `severity_levels` contain all possible values', () => {
    const rules = [
      {
        type: 'no_longer_detected',
        severity_levels: SEVERITY_LEVELS_KEYS,
        scanners: REPORT_TYPES_DEFAULT_KEYS,
      },
    ];
    expect(humanizeRules(rules)).toMatchObject(['All scanners of all severity levels']);
  });
});
