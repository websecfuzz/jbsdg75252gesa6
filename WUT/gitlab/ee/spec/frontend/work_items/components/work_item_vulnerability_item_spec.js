import { GlLink } from '@gitlab/ui';
import { shallowMountExtended } from 'helpers/vue_test_utils_helper';
import WorkItemVulnerabilityItem from 'ee/work_items/components/work_item_vulnerability_item.vue';
import VulnerabilityListStatus from 'ee/security_dashboard/components/shared/vulnerability_report/vulnerability_list_status.vue';
import SeverityBadge from 'ee/vue_shared/security_reports/components/severity_badge.vue';

describe('WorkItemVulnerabilityItem component', () => {
  let wrapper;

  const mockVulnerability = {
    id: 'gid://gitlab/Vulnerability/1',
    state: 'DETECTED',
    severity: 'CRITICAL',
    name: 'Test name',
    webUrl: '/vulnerabilities/1',
  };

  const createComponent = () => {
    wrapper = shallowMountExtended(WorkItemVulnerabilityItem, {
      propsData: {
        item: mockVulnerability,
      },
    });
  };

  beforeEach(createComponent);

  it('shows a vulnerability list status component', () => {
    expect(wrapper.findComponent(VulnerabilityListStatus).props('state')).toBe(
      mockVulnerability.state,
    );
  });

  it('shows a severity badge', () => {
    expect(wrapper.findComponent(SeverityBadge).props('severity')).toBe(mockVulnerability.severity);
  });

  it('shows the vulnerability name with a link to its url', () => {
    const link = wrapper.findComponent(GlLink);
    expect(link.props('href')).toBe(mockVulnerability.webUrl);
    expect(link.text()).toBe(mockVulnerability.name);
  });
});
