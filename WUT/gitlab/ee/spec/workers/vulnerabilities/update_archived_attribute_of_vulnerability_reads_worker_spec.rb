# frozen_string_literal: true

require 'spec_helper'

RSpec.describe Vulnerabilities::UpdateArchivedAttributeOfVulnerabilityReadsWorker, feature_category: :vulnerability_management do
  describe '#perform' do
    let(:project_id) { Time.now.to_i }

    subject(:run_worker) { described_class.new.perform(project_id) }

    before do
      allow(Vulnerabilities::UpdateArchivedOfVulnerabilityReadsService).to receive(:execute)
    end

    it 'calls the `Vulnerabilities::UpdateArchivedOfVulnerabilityReadsService`' do
      run_worker

      expect(Vulnerabilities::UpdateArchivedOfVulnerabilityReadsService).to have_received(:execute).with(project_id)
    end

    context 'when the service class raises `FailedToObtainLockError`' do
      let(:error) { Gitlab::ExclusiveLeaseHelpers::FailedToObtainLockError.new }

      before do
        allow(Vulnerabilities::UpdateArchivedOfVulnerabilityReadsService).to receive(:execute).and_raise(error)
        allow(described_class).to receive(:perform_in)
      end

      it 'reschedules the job to run in 5 minutes' do
        run_worker

        expect(described_class).to have_received(:perform_in).with(5.minutes, project_id)
      end
    end
  end

  include_examples 'an idempotent worker' do
    let_it_be(:project) { create(:project) }

    let(:job_args) { project.id }
  end
end
