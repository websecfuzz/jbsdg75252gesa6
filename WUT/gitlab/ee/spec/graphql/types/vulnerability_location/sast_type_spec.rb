# frozen_string_literal: true

require 'spec_helper'

RSpec.describe GitlabSchema.types['VulnerabilityLocationSast'] do
  it do
    expect(described_class).to have_graphql_fields(
      :end_line,
      :file,
      :start_line,
      :vulnerable_class,
      :vulnerable_method,
      :blob_path
    )
  end

  describe '.authorization_scopes' do
    it 'includes :ai_workflows' do
      expect(described_class.authorization_scopes).to include(:ai_workflows)
    end
  end

  describe 'field scopes' do
    it 'includes :ai_workflows at the type level' do
      expect(described_class.authorization.permitted_scopes).to include(:ai_workflows)
    end

    it 'includes :ai_workflows for file at the field level' do
      expect(described_class.fields['file'].instance_variable_get(:@scopes)).to include(:ai_workflows)
    end

    it 'includes :ai_workflows for end_line at the field level' do
      expect(described_class.fields['endLine'].instance_variable_get(:@scopes)).to include(:ai_workflows)
    end

    it 'includes :ai_workflows for start_line at the field level' do
      expect(described_class.fields['startLine'].instance_variable_get(:@scopes)).to include(:ai_workflows)
    end
  end
end
