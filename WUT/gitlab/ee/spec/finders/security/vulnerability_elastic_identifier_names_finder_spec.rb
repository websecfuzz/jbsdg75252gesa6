# frozen_string_literal: true

require 'spec_helper'

RSpec.describe Security::VulnerabilityElasticIdentifierNamesFinder, :elastic_delete_by_query, :sidekiq_inline, feature_category: :vulnerability_management do
  let_it_be_with_reload(:project) { create(:project) }

  let(:params) { {} }
  let(:vulnerable) { project }

  subject(:execute) { described_class.new(vulnerable, params).execute }

  before do
    stub_ee_application_setting(elasticsearch_search: true, elasticsearch_indexing: true)
  end

  describe '#execute' do
    let_it_be(:vulnerability_read_1) do
      create(:vulnerability_read, identifier_names: ['CWE-23'], project: project)
    end

    let_it_be(:vulnerability_read_2) do
      create(:vulnerability_read, identifier_names: ['CWE-25'], project: project)
    end

    let_it_be(:vulnerability_read_3) do
      create(:vulnerability_read, identifier_names: %w[CWE-24 test], project: project)
    end

    let_it_be(:vulnerability_read_4) do
      create(:vulnerability_read, identifier_names: ['CWE-26'], project: project)
    end

    let(:params) { { partial_identifier_name: "CWE" } }

    before do
      Elastic::ProcessBookkeepingService.track!(
        vulnerability_read_1, vulnerability_read_2, vulnerability_read_3, vulnerability_read_4
      )
      ensure_elasticsearch_index!
    end

    it "fetches unique identifer names" do
      is_expected.to match_array(%w[CWE-23 CWE-25 CWE-24 CWE-26])
    end

    it_behaves_like 'a vulnerability elastic finder'
  end
end
