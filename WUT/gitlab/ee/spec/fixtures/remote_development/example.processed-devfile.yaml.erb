---
schemaVersion: 2.2.0
metadata: {}
components:
  - name: tooling-container
    attributes:
      gl/inject-editor: true
    container:
      image: quay.io/mloriedo/universal-developer-image:ubi8-dw-demo
      args:
        - |
          <%= indent_yaml_literal(MAIN_COMPONENT_UPDATER_CONTAINER_ARGS, 10) %>
      command:
        - "/bin/sh"
        - "-c"
      volumeMounts:
        - name: gl-workspace-data
          path: /projects
      env:
        - name: GL_TOOLS_DIR
          value: "/projects/.gl-tools"
        - name: GL_VSCODE_LOG_LEVEL
          value: "info"
        - name: GL_VSCODE_PORT
          value: "<%= WORKSPACE_EDITOR_PORT %>"
        - name: GL_SSH_PORT
          value: "<%= WORKSPACE_SSH_PORT %>"
        - name: GL_VSCODE_ENABLE_MARKETPLACE
          value: "false"
      endpoints:
        - name: editor-server
          targetPort: <%= WORKSPACE_EDITOR_PORT %>
          exposure: public
          secure: true
          protocol: https
        - name: ssh-server
          targetPort: <%= WORKSPACE_SSH_PORT %>
          exposure: internal
          secure: true
      dedicatedPod: false
      mountSources: true
  - name: database-container
    container:
      image: mysql
      volumeMounts:
        - name: gl-workspace-data
          path: /projects
      env:
        - name: MYSQL_ROOT_PASSWORD
          value: "my-secret-pw"
      dedicatedPod: false
      mountSources: true
  - name: gl-tools-injector
    container:
      image: <%= WORKSPACE_TOOLS_IMAGE %>
      volumeMounts:
        - name: gl-workspace-data
          path: /projects
      env:
        - name: GL_TOOLS_DIR
          value: "/projects/.gl-tools"
      memoryLimit: 512Mi
      memoryRequest: 256Mi
      cpuLimit: 500m
      cpuRequest: 100m
  - name: gl-workspace-data
    volume:
      size: 50Gi
commands:
  - id: user-defined-command
    exec:
      component: tooling-container
      commandLine: echo 'user-defined postStart command'
      hotReloadCapable: false
  - id: gl-tools-injector-command
    apply:
      component: gl-tools-injector
  - id: gl-clone-project-command
    exec:
      commandLine: |
        <%=
          script = INTERNAL_POSTSTART_COMMAND_CLONE_PROJECT_SCRIPT
          indent_yaml_literal(script, 8)
        %>
      component: tooling-container
      label: <%= INTERNAL_BLOCKING_COMMAND_LABEL %>
  - id: gl-clone-unshallow-command
    exec:
      commandLine: |
        <%=
          script = INTERNAL_POSTSTART_COMMAND_CLONE_UNSHALLOW_SCRIPT
          indent_yaml_literal(script, 8)
        %>
      component: tooling-container
      label: <%= INTERNAL_BLOCKING_COMMAND_LABEL %>
  - id: gl-start-sshd-command
    exec:
      commandLine: |
        <%= indent_yaml_literal(INTERNAL_POSTSTART_COMMAND_START_SSHD_SCRIPT, 8) %>
      component: tooling-container
      label: <%= INTERNAL_BLOCKING_COMMAND_LABEL %>
  - id: gl-init-tools-command
    exec:
      commandLine: |
        <%= indent_yaml_literal(INTERNAL_POSTSTART_COMMAND_START_VSCODE_SCRIPT, 8) %>
      component: tooling-container
      label: <%= INTERNAL_BLOCKING_COMMAND_LABEL %>
  - id: gl-sleep-until-container-is-running-command
    exec:
      commandLine: |
        <%=
          script = format(
            INTERNAL_POSTSTART_COMMAND_SLEEP_UNTIL_WORKSPACE_IS_RUNNING_SCRIPT,
            workspace_reconciled_actual_state_file_path: WORKSPACE_RECONCILED_ACTUAL_STATE_FILE_PATH
          )
          indent_yaml_literal(script, 8)
        %>
      component: tooling-container
      label: <%= INTERNAL_COMMAND_LABEL %>
events:
  preStart:
    - gl-tools-injector-command
  postStart:
    - gl-clone-project-command
    - gl-clone-unshallow-command
    - gl-start-sshd-command
    - gl-init-tools-command
    - gl-sleep-until-container-is-running-command
    - user-defined-command
variables: {}
