{
  "data": {
    "id": 762022,
    "group_id": 9970,
    "author_id": 1149402,
    "assignee_id": null,
    "iid": 9997,
    "updated_by_id": 3796140,
    "last_edited_by_id": 480804,
    "lock_version": 13,
    "start_date": "2023-03-18",
    "end_date": "2023-11-10",
    "last_edited_at": "2023-05-11 07:45:45 UTC",
    "created_at": "2023-03-03 09:40:31 UTC",
    "updated_at": "2023-09-09 18:15:12 UTC",
    "title": "AI Integration Strategy",
    "description": "Over the last months/year, we have seen a global shift with the constant improvements made in the field of large AI models, enabling them to provide capabilities for multiple use cases. There is a vast amount of competition both in the AI as a Service (OpenAI, cloud services, etc.) and the open source model side, which should give us multiple options to choose from for integration.\n\nThe proposal is to focus on \"prompt engineering\" rather than \"model engineering\". By having a strong and competitive global base system (external or self-run) in place that **all development teams/groups** can use and incorporate to extend capabilities, we can stay timely and strategically competitive in this field. In a classic GitLab iteration fashion, the focus should be on searching for small iterations to begin with and extending further in larger use cases, rather than starting with the most complex. We can externalize feasibility and usefulness checkd  with small experiments before incorporating them into the actual product. Again, the value proposition of one DevSecOps platform should come as an advantage, as we would be able to provide any AI system with a 360-degree view of data.\n\n## Increase productivity and time to results for our users\n\nAI is the new super shiny topic and there is a trend to inject AI to everything. We should focus on creating especially value by increasing productivity and time to results for our users so they can focus on the most important topics. Any AI enhance proposal should be checked on this is really useful and could be used something on a daily basis saving a lot of time vs. \"looks shiny and great for marketing\". \n\nWith tools nowadays it should be easy to validate ideas in days before fully integrating into the product.\n\n## Current Projects\n\n* [Code Suggestions](https://about.gitlab.com/direction/modelops/ai_assisted/code_suggestions/)\n* [ModelOps Topics](https://about.gitlab.com/direction/modelops/ai_assisted/)\n* Added Support for GitLab to [codereview.gpt](https://github.com/sturdy-dev/codereview.gpt)\n\n## Done Experiments\n\n* [Tanuki Stan](https://gitlab.com/gitlab-org/ml-ops/tanuki-stan)\n* [Natural language Queries for Analytics](gitlab-org/gitlab#393881)\n* [AI Assist Experiment](https://www.youtube.com/watch?v=URi0teihIGE) + [Repo](https://gitlab.com/a_akgun/gitlab-rapid-machine-learning-prototypes/-/tree/main)\n* [Ask the Tanuki about documentation and handbook content](https://gitlab.com/gitlab-org/gitlab/-/issues/402255)\n* [Spamcheck Product Spam Detection](https://gitlab.com/gitlab-org/gl-security/security-engineering/security-automation/spam/spamcheck)\n\n## Information Gathering\n\n### Dev + Analytics\n\n* [Implementation Map](https://gitlab.com/gitlab-org/gitlab/-/issues/402649)\n* [Possible Use Cases](gitlab-org/gitlab#393884)\n* [Examples/Infos/Competition Use Cases](gitlab-org/gitlab#393883)\n\n## Effort classification\n\nTo help with prioritzation and decision making for \"low hanging\" fruits, trying to classify potential integrations into 3 different buckets. By this we are able to classify early ideas, for a next experimentation level and then a potential go-to-production.\n\n### 1. Ad-hoc Task\n\nA task that is given to an API and an immediate result is returned. E.g. Summarize text content, explain specific part of code, etc. Especially if existing API's can be used and no further model only a good prompt is needed which can be formed in experimentation phase.\n\nExamples:\n* Summarize content, write content, explain, translate, improve code, etc. by OpenAI API (https://platform.openai.com/examples)\n* Use [Prophet](https://facebook.github.io/prophet/) for forecasting data in charts\n\n### 2. Pre-Analysing + Knowledge Base \n\nIf pre-transformation needs to be done and results need to be stored implementation becomes more complex. E.g. Indexing of all issues, code files to be able to answer questions. \n\nExamples\n* Vector Index of Content (Issues, MR, Code?) for different tasks like answering questions, classification, clustering, etc.\n\n### 3. Custom ML\n\nVery specific tasks and workflows that even need implementation of own models and continous improvement.\n\n----\n\nBoth 1 and 2 types are classic work items in product development and should be handled like that. Experimentation can be done in work spikes. We need to define a sign off procedure regarding production go live.",
    "start_date_sourcing_milestone_id": null,
    "due_date_sourcing_milestone_id": null,
    "start_date_fixed": null,
    "due_date_fixed": null,
    "start_date_is_fixed": false,
    "due_date_is_fixed": false,
    "closed_by_id": null,
    "closed_at": null,
    "parent_id": null,
    "relative_position": null,
    "state_id": 1,
    "start_date_sourcing_epic_id": 785858,
    "due_date_sourcing_epic_id": 818139,
    "external_key": null,
    "confidential": false,
    "color": "#217645",
    "total_opened_issue_weight": 50,
    "total_closed_issue_weight": 76,
    "total_opened_issue_count": 270,
    "total_closed_issue_count": 306
  },
  "author": {
    "id": 1149402,
    "username": "timzallmann",
    "name": "Tim Zallmann"
  },
  "labels": [
    {
      "id": 30251403,
      "title": "AI-Priority",
      "color": "#9400d3",
      "project_id": null,
      "created_at": "2023-05-11 19:53:00 UTC",
      "updated_at": "2023-05-11 19:53:00 UTC",
      "template": false,
      "description": "",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 30402137,
      "title": "Copilot-X-Compete",
      "color": "#9400d3",
      "project_id": null,
      "created_at": "2023-05-24 18:43:40 UTC",
      "updated_at": "2023-05-24 18:43:40 UTC",
      "template": false,
      "description": null,
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 13934960,
      "title": "Development Department",
      "color": "#F0AD4E",
      "project_id": null,
      "created_at": "2020-02-21 07:12:38 UTC",
      "updated_at": "2020-02-21 07:12:38 UTC",
      "template": false,
      "description": null,
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 29780827,
      "title": "wg-ai-integration",
      "color": "#330066",
      "project_id": null,
      "created_at": "2023-03-31 13:29:22 UTC",
      "updated_at": "2023-03-31 13:29:22 UTC",
      "template": false,
      "description": null,
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    }
  ],
  "start_date_sourcing_milestone": null,
  "due_date_sourcing_milestone": null,
  "notes": [
    {
      "note": "Some thoughts:\n\n- We should look at our own models (such as code suggestions) and surrounding components (such as model registry, data extractor, etc) that Mon’s team has built / is building, in addition to looking at open source and commercial options.\n- Individual engineering teams (and their stable counterparts) know their parts of the product better than other teams. We should leverage them as they evaluate AI on where it can best fit in that part of the product and also doing prototype integrations with them.\n- Prototypes should not get to customer production use until AI PM approves it (@nkhalwadekar and/or @tmccaslin )\n  \nThere are many factors to consider with AI including:\n- Cost of hosting/licensing solutions - they can be very expensive depending on how they are implemented and for what use cases and number of active users\n- When using commercial solutions, we can’t productionize until not only the cost is taken into account, but also our terms of service (which stipulates which 3rd parties we send customer data to)\n- Quality of the models - in general and for our  use cases.  Example would be generating code suggestions for Ruby on Rails in general (which are getting from open source) and generating code suggestions for GitLab CI YML files (which we building our own model for)\n- Are the models trained on data that causes licensing or legal issues?  \n- Who is taking liability if the model’s recommendations are problematic?\n- Models can introduce security issues (such as code suggestions recommending passwords that are leaked because the model was trained on them) \n- Models can have bias that produce non-inclusive and ethically problematic output \n- Models can output data that harms privacy (names, phone numbers, email addresses, etc).",
      "noteable_type": "Epic",
      "author_id": 4708570,
      "created_at": "2023-03-09 16:35:47 UTC",
      "updated_at": "2023-03-30 06:21:25 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": 4708570,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "38c467c1a8117486b16b4c6a7484933312d88c2d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-03-13 16:23:31 UTC",
      "internal": false,
      "id": 1307817630,
      "namespace_id": null
    },
    {
      "note": "Setting up a working group to coordinate across teams on this - https://gitlab.com/gitlab-com/www-gitlab-com/-/merge_requests/121574",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-03-17 09:54:41 UTC",
      "updated_at": "2023-03-30 06:22:23 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c6cee8627f6b877803f70d63c6c9528ea9691a70",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1318270357,
      "namespace_id": null
    },
    {
      "note": "I don't know how to say this other than just saying it... anything that we do with the expectation that might find its way into the product _must_ be centered around the user, their goals (i.e. what Job are they hiring GitLab to help them achieve), and their needs. If any experiment dreamed up can't point towards a specific user and the Job it will help fulfill then you have to seriously ask yourself if it's worth spending effort on.\n\nWe're going to add such content bullets to the issue template that @mray2020 alluded to above but until then, as I'm getting the feeling patience isn't of the essence, everyone needs to keep this in mind as they \"explore + brainstorm what things we might or should solve\".\n\ncc/ @katiemacoy @nkhalwadekar @tmccaslin",
      "noteable_type": "Epic",
      "author_id": 5291762,
      "created_at": "2023-03-14 22:54:48 UTC",
      "updated_at": "2023-03-30 06:22:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b3603529d6b9ad34271a272fb09ef43c27d1ac7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1314291876,
      "namespace_id": null
    },
    {
      "note": "@mray2020 This was created without the knowledge of the AI strategy in parallel to give all groups access to competitive AI tooling asap for creating \"infrastructure\" to go from experimentation -> validation -> production.\n\nI think the rapid prototyping is a good first step but we should have a clear path and work in parallel to be able to get such use cases into production following up on that. We should take the discussion into Epics/Issues rather then google docs to help collaboration and transparency especially across multiple groups and stages.\n\nTotally agree but that not all of them are ML but that is where the exploration should start to brainstorm topics that need to be solved which might be done by ML, automation or something else. \n\nThe goals of the integration strategy in my opinion are:\n* MLOps\n  * Get a general alignment and path forward what AI \"systems\" (providers + models + etc) are available to groups and work on getting them production ready with additional knowhow/consultancy. \n  * Get internal encapsulation API ready (Rails) so at a later point systems below can be exchanged\n  * Knowledge Sharing with teams on all the learnings\n  * Get ready to run those systems on a production level as so far the usage is minimal, provide timeline when each of the topics is ready for primetime\n  * Fine tune internal toolings\n* At the same time have all stages/groups work on \n  * exploration+brainstorming what are things we might or should solve. \n  * Categorise them by tools (different kinds of AI, automation, etc.) and methods how they could be done\n  * Start external exploration + experiments for example with the knowledge that MLOps has choosen OpenaAI for this type of work\n  * Validation with a mini prototype\n  * Work with MLOps on topics like possible costs\n  * Decision by product + eng team to get them ready for production\n  * Development Team of that Group implements the feature if greenlighted",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-03-14 09:39:32 UTC",
      "updated_at": "2023-03-14 09:39:32 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b3603529d6b9ad34271a272fb09ef43c27d1ac7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1312890886,
      "namespace_id": null
    },
    {
      "note": "@timzallmann , we should be perhaps adding all the work done by the ModelOps team as well which includes\n features ( Suggested Reviewer)  as well as models ( Code Suggestions and More)? WDYT? \n\nThis is the core of the ModelOps Group of using Machine Learning in Workflow Automation and AI Assisted @tmccaslin can speak more about it .\n\nWe have several LLM models , NL as well as PL that our team is actively tuning and working on \n\nWe actively also evaluate pre-trained models ( LLama , Alphacode , Code-gen , Codex , Davinci to name few)  to understand how to tune for various use cases, and also prompt engineering. \n\nPrompt engineering is a sub-class of NLP and still needs specific skill set and in ModelOps we have engineers who specialise only on prompt engineering beyond just prompt collection , but engineering of using patterned NLP techniques , some includes ( structured  , sucessive and many more specialization and techniques) \n\nHappy to have a sync chat as well on this on the specific use-cases ? \n\n cc @tmccaslin , @wayne",
      "noteable_type": "Epic",
      "author_id": 5749302,
      "created_at": "2023-03-07 09:53:28 UTC",
      "updated_at": "2023-03-07 10:34:26 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": 5749302,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a509dceffec8a60742e4768964b1a105e4494ccf",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-03-07 10:34:26 UTC",
      "internal": false,
      "id": 1303602306,
      "namespace_id": null
    },
    {
      "note": "Absolutely! Just added it to the top description",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-03-06 13:50:25 UTC",
      "updated_at": "2023-03-06 13:50:25 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "d1048995dd55ed767d6496c4969ac989bb76a0ba",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1302332443,
      "namespace_id": null
    },
    {
      "note": "@timzallmann I wonder if [tanuki-stan](https://gitlab.com/gitlab-org/ml-ops/tanuki-stan) could be considered a done experiment? It's been running successfully for more than a year and has done a lot to help ease the burden of triaging issues by automatically applying labels.",
      "noteable_type": "Epic",
      "author_id": 655908,
      "created_at": "2023-03-05 22:53:40 UTC",
      "updated_at": "2023-03-06 13:50:25 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "d1048995dd55ed767d6496c4969ac989bb76a0ba",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1301461018,
      "namespace_id": null
    },
    {
      "note": "@mray2020 Added links to the description on Code Suggestions and ModelOps in general. Let me know if ther are better SSOT's",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-03-07 11:00:42 UTC",
      "updated_at": "2023-03-08 00:45:46 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a509dceffec8a60742e4768964b1a105e4494ccf",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1303719017,
      "namespace_id": null
    },
    {
      "note": "@mray2020 Thanks for the summary of current activities apart from Suggested reviewers and AI Assisted as I am very well aware about those 2 but to have a wider understanding. \n\nThis Epic and sub issues is for exploring an updated strategic focus to give all teams/groups asap access to AI services (whatever they are self hosted or bought services) in the sense of AI as a commodity then a speciality done by a specific section for everyone (where this section might be the ones giving knowhow and providing consultancy to teams). With a focus of rather using something built rather then self building to have competitive tools at hand for each team with a quick time to market. For this we need to make a decision what to use company wide to enable teams to get started.",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-03-07 10:28:29 UTC",
      "updated_at": "2023-03-09 08:53:56 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a509dceffec8a60742e4768964b1a105e4494ccf",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1303666189,
      "namespace_id": null
    },
    {
      "note": "Not sure if there is an issue yet, but previously @a_akgun was prototyping this sort of thing. [Slack thread](https://gitlab.slack.com/archives/C02PF508L/p1678450219905939) https://www.youtube.com/watch?v=XW3bjaTexag",
      "noteable_type": "Epic",
      "author_id": 4234774,
      "created_at": "2023-04-20 00:22:54 UTC",
      "updated_at": "2023-04-20 00:22:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bbc0f816f93f01699a47ec5986626bdc5eade3ff",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1359638125,
      "namespace_id": null
    },
    {
      "note": "Please consider adding an issue https://gitlab.com/gitlab-org/gitlab/-/issues/?sort=created_date&state=opened&label_name%5B%5D=wg-ai-integration&label_name%5B%5D=experiment%20idea&first_page_size=20",
      "noteable_type": "Epic",
      "author_id": 4234774,
      "created_at": "2023-04-20 00:27:41 UTC",
      "updated_at": "2023-04-20 00:27:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bbc0f816f93f01699a47ec5986626bdc5eade3ff",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1359640444,
      "namespace_id": null
    },
    {
      "note": "Thanks, @timzallmann , for clarifying. Is this inspired by the [AI Strategy](https://docs.google.com/document/d/1sjQ7OclmP76td5P-FTwjbJn2mg5y6DjDiAgQLdjslXI/edit#heading=h.mhxax8msgkdv)? Product has now iterated on the request in this doc and is moving forward with the [Rapid Prototyping for ML strategy](https://docs.google.com/document/d/1y-g4DfxKgBRg7vJCGCIGIKL-XWtajyNQSXYldYWgAt4/edit). Instead of having an alternative strategy as detailed in this issue , can we align and contribute to the existing prototyping strategy and then update the issue/epics as needed?\n\n@tmccaslin  will be sharing more details this coming week on the Prototype Strategy. \n\nLooking at the use-cases, many of the use cases are not Generative AI and some are not ML use-cases, as they seem to be  primarily automation . In this issue it looks the proposal is  currently focused on the supply (Open AI LLM) and trying to validate demand? Is it accurate for me to say that is the overall strategy and have we validated if that aligns with our overall product strategy and how? Can you clarify the goals and success of this integration strategy and individual prototypes further . \n\nIn my experience, ML prototyping is not new to ML . Rapid Experimentation is a part of the ML environment. To do that we need to understand the success of the prototype and value behind it.  Simple questions as stated below can add further value. What we are doing here may not be a prototype. My reading of it is that this is exploring technology for an art of possibility. \n \nFurther our team also will be creating a template for it and will be sharing more details which would include the following questions and more.\n\n1.Primary objective of the prototype\n\n2.Secondary Objective\n\n3.Success Metrics ( List of Metrics )\n\n4.How does this predictive application aid with decision making and human judgment for the task ?\n\n5.Video/Demo/ Code Repo\n\n6.Should this be a viable feature and why ?\n\n7.Work estimate and skill sets needed to build a viable feature\n\n8.Data Limitation\n\n9.Legal Limitation\n\n10.Ethics Limitation\n\n11.Cost Aspects (of commercial licensed systems and/or hosting costs for GCP)\n\n12. Ability to implement for self hosted customers (both internet connected and air-gapped)\n\n13.Ability to install for self hosted customers\n\n\nWe will be creating an API that can be used on endeavors like this: See : https://gitlab.com/gitlab-org/modelops/team-tasks/-/issues/15#note_1306881600 for more details. As mentioned above , @tmccaslin will be sharing more this coming week\n\n\nLet me know your thoughts.  I would be happy to discuss on a Zoom call as well if you would like.\n\ncc @wayne , @hbenson , @tmccaslin, @jmandell",
      "noteable_type": "Epic",
      "author_id": 5749302,
      "created_at": "2023-03-14 08:57:27 UTC",
      "updated_at": "2023-03-22 02:52:07 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b3603529d6b9ad34271a272fb09ef43c27d1ac7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1312805451,
      "namespace_id": null
    },
    {
      "note": "Thanks Phil ! Opened https://gitlab.com/gitlab-org/gitlab/-/issues/408147",
      "noteable_type": "Epic",
      "author_id": 2535118,
      "created_at": "2023-04-20 00:35:47 UTC",
      "updated_at": "2023-04-20 00:35:47 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bbc0f816f93f01699a47ec5986626bdc5eade3ff",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1359643522,
      "namespace_id": null
    },
    {
      "note": "@mray2020 would you spell out the acronyms in your message above please?",
      "noteable_type": "Epic",
      "author_id": 4554599,
      "created_at": "2023-03-07 16:20:03 UTC",
      "updated_at": "2023-03-07 16:20:03 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a509dceffec8a60742e4768964b1a105e4494ccf",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1304259068,
      "namespace_id": null
    },
    {
      "note": "@m_gill \n\n- NL - Natural Language\n- PL - Programing Lanaguage\n- NLP - Natural Language processing \n- LLM - Large langue model",
      "noteable_type": "Epic",
      "author_id": 5329074,
      "created_at": "2023-03-07 17:10:15 UTC",
      "updated_at": "2023-03-07 17:10:15 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a509dceffec8a60742e4768964b1a105e4494ccf",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1304332863,
      "namespace_id": null
    },
    {
      "note": "Building against OpenAI would be a good first iteration, but it also ties us to their API.\n\nCame across [this list of ChatGPT alternatives](https://github.com/nichtdax/awesome-totally-open-chatgpt). OpenAI have a headstart and plenty of funding, but there will soon be a choice of similar products, some of which will be FOSS.",
      "noteable_type": "Epic",
      "author_id": 4391348,
      "created_at": "2023-03-21 13:43:00 UTC",
      "updated_at": "2023-03-21 13:43:00 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "38a9d888eabf41101297b999589f2554213f5e8f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1322409037,
      "namespace_id": null
    },
    {
      "note": "@timzallmann Your point that we want to consume APIs as a first iteration rather than train our own models makes a lot of sense. We also have relatively small amounts of training data if we look at Issues only.\n\nAs some point though, we may also want to develop an internal training program for engineers who would like to transition to ML. We already have:\n- Some of the best engineers in the world, who _could_ cross-train\n- Our O'Reilly subscription has a _lot_ of ML/AI training materials, more is available at low-cost elsewhere (Coursera, etc)\n- An easy path from Ruby to Python, for BE engineers\n\nTo make a training program happen, we would need to invest a bit of leadership from some experienced ML engineers, and time allocated out of deliverable time.",
      "noteable_type": "Epic",
      "author_id": 4391348,
      "created_at": "2023-03-21 13:50:58 UTC",
      "updated_at": "2023-03-21 14:47:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": 4391348,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fa1dfa5bea7784d97120f23d7732354ead2d5adb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-03-21 13:55:23 UTC",
      "internal": false,
      "id": 1322423581,
      "namespace_id": null
    },
    {
      "note": "I :100: agree with the first 3 points: we need to enable every engineering team to play and prototype with shallow AI to build short internal demos.\n\nI also :100: agree with all the concerns: all these points must be considered before shipping as part of the product. Ideally that overhead only impacts successful demos and use cases we have agreed to integrate into the product.\n\nTo enable the creation of demos by every engineering team, I'd suggest to add the ability to [gitlabsandbox.cloud](https://gitlabsandbox.cloud) to provision experimental OpenAI API keys with a limited budget or to define some other well defined process.",
      "noteable_type": "Epic",
      "author_id": 10539876,
      "created_at": "2023-03-21 14:33:51 UTC",
      "updated_at": "2023-03-21 14:33:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "38c467c1a8117486b16b4c6a7484933312d88c2d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1322520502,
      "namespace_id": null
    },
    {
      "note": "My 2 cents is that prompt engineering is quite different from general AI/ML techniques and thus a relatively new field. Its low complexity to end users is what makes it so appealing to begin with. I believe the main challenge to cover use cases successfully is to be creative in the way we leverage the technology and workaround its current limitations.\n\nTraining would be essential if we were to build our own models, but in the context of prompt engineering I'd like to believe that anyone interested can pretty much just start and build demos. The main blocker I see is that we are not issuing API keys. Relates to https://gitlab.com/groups/gitlab-org/-/epics/9997#note_1322520502",
      "noteable_type": "Epic",
      "author_id": 10539876,
      "created_at": "2023-03-21 14:47:27 UTC",
      "updated_at": "2023-03-21 15:45:17 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": 10539876,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fa1dfa5bea7784d97120f23d7732354ead2d5adb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2023-03-21 14:48:59 UTC",
      "internal": false,
      "id": 1322547688,
      "namespace_id": null
    },
    {
      "note": "Thank you @dbolkensteyn I agree with this, esp. for a MVC. \n\nLonger term picture, we may want to embrace ML more directly, even for prompt engineering, so we better understand the technologies we are using and also our customer's needs.",
      "noteable_type": "Epic",
      "author_id": 4391348,
      "created_at": "2023-03-21 15:47:08 UTC",
      "updated_at": "2023-03-21 15:47:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fa1dfa5bea7784d97120f23d7732354ead2d5adb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1322659000,
      "namespace_id": null
    },
    {
      "note": "@timzallmann, @mray2020 and I discussed at length last night a way to help achieve what you're speaking about with `give all teams/groups asap access to AI services`. I'd like to align with your plans and see how we can unite our efforts. We want to help all of GitLab leverage AI, but we also want to make sure we are doing it responsibly as AI/ML systems, especially when built by other companies in opaque systems we don't control, can produce very wild outputs.",
      "noteable_type": "Epic",
      "author_id": 5329074,
      "created_at": "2023-03-07 17:17:15 UTC",
      "updated_at": "2023-03-07 17:49:07 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a509dceffec8a60742e4768964b1a105e4494ccf",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1304341462,
      "namespace_id": null
    },
    {
      "note": "@timzallmann, I was talking with @sarahwaldner about the recent buzz of [ChatGPT plugins](https://openai.com/blog/chatgpt-plugins) and [ChatGPT Code Interpreter plugin](https://openai.com/blog/chatgpt-plugins#code-interpreter). Though there're issues, like dependency and data privacy, to be figured out, perhaps there could be some lightweight experiments that can be built as first iteration, like a GitLab plugin for our public repos or Handbook. It can also be some Hackathon projects.\n\ncc: @joshlambert",
      "noteable_type": "Epic",
      "author_id": 4888751,
      "created_at": "2023-03-27 19:25:03 UTC",
      "updated_at": "2023-03-27 21:15:56 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "e60d9d57417a99bfab8129f42e15b32e3db3ffc6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1330127563,
      "namespace_id": null
    },
    {
      "note": "@changzhengliu @sarahwaldner - sounds good to me! We have https://gitlab.com/gitlab-org/gitlab/-/issues/386992 which can be used or converted to an epic, which I think covers most of the current examples like Bloop.\n\nOnly item I'd like to ensure we do is to continue to ship Zoekt https://gitlab.com/groups/gitlab-org/-/epics/9404, unless we feel like our analysis of it's value has changed. At the time, we felt that we would still need a 100% accurate and reliable search engine, and that most AI/ML tools would not provide fully reliable and repeatable results at this time.\n\nAssuming that still holds true, shipping that would then allow us to focus a large chunk of the team on building out ML-based features which is likely the future.",
      "noteable_type": "Epic",
      "author_id": 926632,
      "created_at": "2023-03-27 21:15:52 UTC",
      "updated_at": "2023-03-27 21:15:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "e60d9d57417a99bfab8129f42e15b32e3db3ffc6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1330261778,
      "namespace_id": null
    },
    {
      "note": "@timzallmann ,\n\nI believe a year from now the rate of new code that is being generated due to AI will lead to the following:\n\n- a need for a place to store all of that Code (GitLab)\n- an easy method for seamlessly navigating from the code generated from AI to be imported by a click of a button to open up code in the Web IDE\n-  ChatGPT and other AI generating code quickly at a much higher rate than \n- AI generated code can be reverse engineered to create requirements and store them in our requirements feature...\n\nUltimately, I like the idea of receiving a large amount of code and reverse engineering it into the different categories in our product.  My thoughts are that at some point engineers will use AI to generate a baseline code base that they will build on top of.",
      "noteable_type": "Epic",
      "author_id": 4124757,
      "created_at": "2023-03-28 00:56:53 UTC",
      "updated_at": "2023-03-28 00:56:53 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3916951f857eeccb31f65585e0ca1d6f0d7aa389",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1330381884,
      "namespace_id": null
    },
    {
      "note": "@joshlambert \n\n> Only item I'd like to ensure we do is to continue to ship Zoekt https://gitlab.com/groups/gitlab-org/-/epics/9404\n\nYes absolutely. The planned hackathon is just one day. The source code team also has a bunch of critical stuff to burn down too.",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-03-27 22:21:52 UTC",
      "updated_at": "2023-03-28 00:59:30 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "e60d9d57417a99bfab8129f42e15b32e3db3ffc6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1330313705,
      "namespace_id": null
    },
    {
      "note": "@dbolkensteyn , We are working on ML prototyping and building an API for easy access not just to open AI but all the models within ModelOps. https://gitlab.com/gitlab-org/modelops/team-tasks/-/issues/15#note_1320238697\n\nFor Prompt Engineering , there is various level and based on the use case one will need a good understanding of NLP . We are working also on a framework for rapid ML Prototyping and moving that to production",
      "noteable_type": "Epic",
      "author_id": 5749302,
      "created_at": "2023-03-28 04:50:43 UTC",
      "updated_at": "2023-03-28 18:47:25 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fa1dfa5bea7784d97120f23d7732354ead2d5adb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1330516662,
      "namespace_id": null
    },
    {
      "note": "Thanks @changzhengliu!\n\n@andr3 I would love for us to include the Global Search team in our hackathon on the Source Code team? I think that our respective groups would work really well together given the parallels between our domains of expertise.",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-03-27 19:48:26 UTC",
      "updated_at": "2023-03-28 22:17:06 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "e60d9d57417a99bfab8129f42e15b32e3db3ffc6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1330153410,
      "namespace_id": null
    },
    {
      "note": "Thank you so much @tlinz",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-03-31 18:45:01 UTC",
      "updated_at": "2023-03-31 20:35:40 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bbe9e8e0b0f3acdb0d38f7bd49a9a09f45705ca9",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1337373486,
      "namespace_id": null
    },
    {
      "note": "@jmandell Have you taken a look at the issues of the epic? Cause that is exactly what we are doing together with Product in a great collaboration so far - https://gitlab.com/gitlab-org/gitlab/-/issues/393884\n\nAlso the Epic itself states exactly that user centric approach to seperate hype to impactfulness for users - https://gitlab.com/groups/gitlab-org/-/epics/9997#increase-productivity-and-time-to-results-for-our-users\n\nThis is really about getting powerful tools to the individual teams as soon as possible. So far the ML topics have been driven forward on specific certain projects with mixed results by a specific team but we need to enable all teams to integrate AI capabilities into their area in a timely manner as time to market is a vital part on this.",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-03-15 08:01:48 UTC",
      "updated_at": "2023-03-15 08:01:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b3603529d6b9ad34271a272fb09ef43c27d1ac7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1314634137,
      "namespace_id": null
    },
    {
      "note": "Hi @mle, @andr3, @timzallmann and @sarahwaldner,\n\nI have created the first feature iteration after having aligned with @mle this morning and @andr3 this afternoon and after having taking @timzallmann's [feedback](https://gitlab.com/gitlab-org/gitlab/-/issues/402649#note_1336757871) into account: https://gitlab.com/gitlab-org/gitlab/-/issues/403718+. \n\nI have also created two dependencies:\n- https://gitlab.com/gitlab-org/gitlab/-/issues/403727+ as part of https://gitlab.com/groups/gitlab-org/-/epics/10221+\n- https://gitlab.com/gitlab-org/gitlab/-/issues/403728+ as part of https://gitlab.com/groups/gitlab-org/-/epics/10219+\n\nIt may seem overkill to have three issues for this very simple iteration, but I want to make sure that @mle and @jmandell feel empowered to think this UI not just for this SCM feature but many AI features to come as explained in each of these two epics. So, that we create an aligned experience across all AI features in GitLab. \n\n@mle please create simple UI for this first iteration in your Monday morning. This is a higher priority than the other work. There is no need to make this perfect, we are aiming at being fast. Ideally, @andr3's team can start working on this when the sun comes around to them on Monday. @andr3 and I have already discussed what can be sacrificed from our current plan for %15.11.  \n\nI will be out of office on Monday and Tuesday. Please, DM me via slack if you have any questions. I will try to check regularly.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-03-31 16:12:51 UTC",
      "updated_at": "2023-03-31 18:45:01 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bbe9e8e0b0f3acdb0d38f7bd49a9a09f45705ca9",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1337164157,
      "namespace_id": null
    },
    {
      "note": "@timzallmann Can you please review all related Issue to ensure they are marked confidential, per SAFE guidelines? Thank you.",
      "noteable_type": "Epic",
      "author_id": 4303163,
      "created_at": "2023-04-10 18:13:44 UTC",
      "updated_at": "2023-04-19 16:47:36 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "ec1977036345a2b16e66ffc3554118f5e04f93ad",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1347185561,
      "namespace_id": null
    },
    {
      "note": "> @andr3 I would love for us to include the Global Search team in our hackathon on the Source Code team? I think that our respective groups would work really well together given the parallels between our domains of expertise.\n\n@sarahwaldner absolutely agreed! Thanks for bringing it up.\n\n@joshlambert @changzhengliu FWIW the \"hackathon of rapid prototypes\" we have thought out is a very informal effort to allow our engineers to play with some of the ideas floating around during one day so our teams can level-up together at the same time. Also, in doing so, we aim to plant some seeds to empower future developments that will actually make it into the product by making our teams more familiar with the topic and how to integrate these concepts into our areas of GitLab in a more consistent way. It's not aimed at covering full feature development for shipping to production.\n\nWe have started a rough draft issue for the hackathon here: https://gitlab.com/gitlab-org/create-stage/-/issues/13138 (We'll probably use this issue to iterate on the draft but will move it to a global project for more inclusivity.) Feel free to drop your feedback or suggestions there. Thanks!",
      "noteable_type": "Epic",
      "author_id": 853414,
      "created_at": "2023-03-28 22:33:46 UTC",
      "updated_at": "2023-03-29 18:02:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": 853414,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "e60d9d57417a99bfab8129f42e15b32e3db3ffc6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2023-03-28 22:34:13 UTC",
      "internal": false,
      "id": 1332128275,
      "namespace_id": null
    },
    {
      "note": "Per today's discussion (https://docs.google.com/document/d/19jVbWVYUPW3m7d2SzsXa2zXIAW7pSb2tdQ-AXWzT_DE/edit#bookmark=id.vmtuyskyof5o) I believe we can make this Epic public.  Can you confirm and then, if appropriate, do so @timzallmann or @hbenson or @tmccaslin ?",
      "noteable_type": "Epic",
      "author_id": 4708570,
      "created_at": "2023-04-19 16:47:36 UTC",
      "updated_at": "2023-04-19 16:47:36 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "ec1977036345a2b16e66ffc3554118f5e04f93ad",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1359210752,
      "namespace_id": null
    },
    {
      "note": "Is there an issue about converting natural text to a complete `mermaidjs` code block ? Personally, this will be a big productivity booster for me :)",
      "noteable_type": "Epic",
      "author_id": 2535118,
      "created_at": "2023-04-19 21:32:54 UTC",
      "updated_at": "2023-04-20 00:22:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bbc0f816f93f01699a47ec5986626bdc5eade3ff",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1359492684,
      "namespace_id": null
    },
    {
      "note": "hi @timzallmann thanks for pointing this out, I'm very happy to see it and hear that users are in the foreground. The only thing I think that's missing is some specifics as it sounds a little more on the general side, though it's great to see the focus on users and providing them with value to be sure! I'd personally like to see more specific details about how we should do this all with a focus on our user's jobs and needs. These are meant to be written in a way that should foster this type of innovative thought as they are technology agnostic. Allowing us to envision how such solutions as AI might help them achieve these goals.\n\nI think we're both on the same page here, so I don't mean to bemoan the point too much. I think I'd just like to see things like our Jobs referenced a little more explicitly to really help drive that home. Jobs will likely end up being a component of the template that the ~\"group::ai assisted\" team is working on now so I think we'll be in good shape.",
      "noteable_type": "Epic",
      "author_id": 5291762,
      "created_at": "2023-03-15 21:44:52 UTC",
      "updated_at": "2023-03-15 21:44:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b3603529d6b9ad34271a272fb09ef43c27d1ac7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1316037592,
      "namespace_id": null
    },
    {
      "note": "Mermaidjs generation was straightforward, but feel free to ping me in case :slight_smile:",
      "noteable_type": "Epic",
      "author_id": 4409816,
      "created_at": "2023-04-24 06:10:45 UTC",
      "updated_at": "2023-04-24 06:10:45 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 762022,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bbc0f816f93f01699a47ec5986626bdc5eade3ff",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1363741298,
      "namespace_id": null
    }
  ],
  "note_authors": [
    {
      "id": 4708570,
      "username": "wayne",
      "name": "Wayne Haber"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 5291762,
      "username": "jmandell",
      "name": "Justin Mandell"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 5749302,
      "username": "mray2020",
      "name": "Mon Ray"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 655908,
      "username": "mlapierre",
      "name": "Mark Lapierre"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 4234774,
      "username": "pcalder",
      "name": "Phil Calder"
    },
    {
      "id": 4234774,
      "username": "pcalder",
      "name": "Phil Calder"
    },
    {
      "id": 5749302,
      "username": "mray2020",
      "name": "Mon Ray"
    },
    {
      "id": 2535118,
      "username": "tkuah",
      "name": "Thong Kuah"
    },
    {
      "id": 4554599,
      "username": "m_gill",
      "name": "Michelle Gill"
    },
    {
      "id": 5329074,
      "username": "tmccaslin",
      "name": "Taylor McCaslin"
    },
    {
      "id": 4391348,
      "username": "sean_carroll",
      "name": "Sean Carroll"
    },
    {
      "id": 4391348,
      "username": "sean_carroll",
      "name": "Sean Carroll"
    },
    {
      "id": 10539876,
      "username": "dbolkensteyn",
      "name": "Dinesh Bolkensteyn"
    },
    {
      "id": 10539876,
      "username": "dbolkensteyn",
      "name": "Dinesh Bolkensteyn"
    },
    {
      "id": 4391348,
      "username": "sean_carroll",
      "name": "Sean Carroll"
    },
    {
      "id": 5329074,
      "username": "tmccaslin",
      "name": "Taylor McCaslin"
    },
    {
      "id": 4888751,
      "username": "changzhengliu",
      "name": "Changzheng Liu"
    },
    {
      "id": 926632,
      "username": "joshlambert",
      "name": "Joshua Lambert"
    },
    {
      "id": 4124757,
      "username": "dsatcher",
      "name": "Darva Satcher"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 5749302,
      "username": "mray2020",
      "name": "Mon Ray"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 4303163,
      "username": "rnalen",
      "name": "Robert Nalen"
    },
    {
      "id": 853414,
      "username": "andr3",
      "name": "André Luís"
    },
    {
      "id": 4708570,
      "username": "wayne",
      "name": "Wayne Haber"
    },
    {
      "id": 2535118,
      "username": "tkuah",
      "name": "Thong Kuah"
    },
    {
      "id": 5291762,
      "username": "jmandell",
      "name": "Justin Mandell"
    },
    {
      "id": 4409816,
      "username": "a_akgun",
      "name": "Alper Akgun"
    }
  ],
  "namespace_hierarchy": [
    {
      "id": 9970,
      "name": "GitLab.org",
      "path": "gitlab-org",
      "type": "Group"
    }
  ]
}
