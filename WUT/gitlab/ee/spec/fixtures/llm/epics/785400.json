{
  "data": {
    "id": 785400,
    "group_id": 9970,
    "author_id": 10822493,
    "assignee_id": null,
    "iid": 10219,
    "updated_by_id": 10822493,
    "last_edited_by_id": 1646689,
    "lock_version": 38,
    "start_date": "2023-03-18",
    "end_date": "2023-11-10",
    "last_edited_at": "2023-08-10 21:52:45 UTC",
    "created_at": "2023-03-31 10:36:15 UTC",
    "updated_at": "2023-10-23 16:33:18 UTC",
    "title": "GitLab Duo Chat",
    "description": "## Vision: enable users to solve all DevSecOps tasks via an AI chat, so they can work faster, more efficiently and with less context switching\n\nOur vision is to enable users to work on all their DevSecOps tasks via an AI chat called GitLab Duo Chat. Duo chat would have access to everything the user has access to, so it can get the context when answering to user questions. Duo is backed by a large language model and tools that allow it to process large amounts of data quickly and thereby accelerate how users can solve tasks. \n\nIt will help developers understand unknown code and code bases more quickly; suggest tests; or refactor code. Security professionals will be supported in understanding and fixing vulnerabilities faster. Product managers can weed though comments automatically to summarize them or extract unmet needs and generate feature definitions based on these findings. ...\n\nDuo will consider the chat history in its answers. History is even preserved across different touch points so users can ask follow-up questions even if they switch for example from the GitLab UI to their IDE. The history will contain the data previously collected via tools, so follow-up questions can drill deeper into the subject matter. \n\nThe chat will be available in the GitLab Web UI, in its WebIDE, and via Extensions in popular desktop IDEs. \n\n### Evidence\n[Today developers already use AI heavily for writing code (83% of developers) and Debugging and getting help (49%)](https://survey.stackoverflow.co/2023/#developer-tools-ai-tool). [54% use copilot for development](https://survey.stackoverflow.co/2023/#most-popular-technologies-ai-dev). [70+% of Copilot users want to use it again next year](https://survey.stackoverflow.co/2023/#section-worked-with-vs-want-to-work-with-ai-developer-tools). However, beyond coding, there is a [huge interest to use AI for Documenting code (50%), Learning about a codebase (49%), Testing code (55%), Project planning (39%), Committing and reviewing code (50%), Deployment and monitoring (45%)](https://survey.stackoverflow.co/2023/#developer-tools-ai-tool-interested)\n\n## Architecture and technical implementations\n\n### Connections\n\nAs we want to offer the chat experience both in our Web Application as in our IDE plugins we need to target especially that the main work is happening in the Rails Chat implimentation and have couple of thin clients.\n\n![image](/uploads/729ed32700c8bf86e07b789067957af7/image.png)\n\n### Technical Parts\n\n![image](/uploads/66ca445581cdf29720432b94be06043c/image.png)\n\n#### 1. Switch Agent\n\nWe need to understand in the first step how what the input of the user is about (question/task/etc.) to then have a specific tool gather an answer. This will be done by using an LLM by providing a specialized prompt \n with descriptions of the tools available, examples and the question. The agent will then give us the name of the preferred tool to solve the whole task or parts of it. Agents are capable of combining tools also to answer questions. The tools are then queried for giving answers. \n\nAdditional Explanations\n\n* https://python.langchain.com/en/latest/modules/agents/getting_started.html\n*  https://huggingface.co/docs/transformers/transformers_agents#whats-happening-here-what-are-tools-and-what-are-agents\n\n#### 2. Available Tools for context\n\nThe switch agent is provided a set of tools that is available per individual page, each tool has a description (e.g. \"useful for when you need to answer questions how to use gitlab the product and its features\"). \n\n##### Local Context\n\nFor each page in GitLab we want to provide a tool specific for the page's context (e.g. Code File, Issue, Epic, ...). \n\nTo start with the MVC we will target to build a universal data reader tool, which gets all properties of a current's object and will try to answer any question just by that. \n\nAs a next step we then can replace per specific page this universal context tool with one customized to the specific page to not only provide information but also task execution suggestion (e.g. \"Set the current milestone\")\n\n##### Universe Context\n\nWhile a user is on a specific page they still want to interact with the current project or namespace to ask questions about the project, issues, epics, CI/CD, monitoring etc.. \n\n##### Personal Context\n\nA user might also want to ask about their personal todo's, issues, etc.\n\n##### GitLab Documentation Context\n\nThe current GitLab Chat (formerly known as Ask Tanuki) will be available to help users find specific information or help on a feature.\n\n##### General coding + info questions\n\nThe chat should also be able to help on any unrelated code, project management, UX or other DevSecOps related questions.\n\n#### 3. Chat Tools\n\nIt's crucial to realize that we're not directly creating a specific code-related feature. Instead, we're building a tool that lets the LLM access code and other details. This tool helps address user questions or tasks. For instance, we're not making a feature called \"Explain the code.\" Instead, we're developing a tool that handles anything about code. This tool provides code snippets, actions, and more. The LLM then uses this code to provide explanations. Additionally, the tool can enhance prompts behind the scenes for specific tasks, giving more detailed instructions about what's needed.\n\n##### Universal Object access tool\n\nFor our MVC we start with a tooling that gets the keys of all attributes and is then able to access all values to fulfill a task. e.g. Summarize the description, the LLM is going to determine to look for a description or something similar and will then be able to fulfill the specific task on that description.\n\n##### VectorQARetrieval Tool\n\nWe are using Embeddings for our current documentation and in the future on Issues, Epics, Code, etc. to do different large content tasks like Semantic search. So we should abstract a tool to access and retrieve any kind of documents/objects based on Embeddings. \n\n### Other parts\n\n#### System prompt\n\nWe need to provide a general system prompt so the chat model knows what we are expecting and what it should discuss and what not.\n\n#### Example Questions/Tasks\n\nWe should be able to have an easy way for each product group to provide for the chat examples what a user can ask on the current page for example. So when the users opens a chat they get a better understanding what might be possible. We can also investigate if we can do automated examples in a second step.\n\n-----\n\n### MVC\n\n[GitLab Chat MVC](https://gitlab.com/groups/gitlab-org/-/epics/10220)\n\n### Proposal\n\nMany of the feature ideas proposed in https://gitlab.com/gitlab-org/gitlab/-/issues/402649 that we want to realize will require an interaction with an AI. Instead of every feature implementing its own interaction and having a disjointed experience for the user there should be a small number of interaction concepts for the whole of GitLab. \n\n#### Target Initial User Journey\nPlease note that this user journey only reflects three use cases right now - ask doc questions, explain this code, and write tests. We will include more later, but we want to get mocks created for these to get feedback.\n\n1. Sarah opens the chat window from clicking the item in the sidebar\n2. Sarah asks \"How do I to protect a branch\"\n3. Chat responds with an explanation and a link to our docs\n4. Sarah asks another question about controlling who can merge on a protected branch\n5. Chat responds again with another explanation and another link to our docs\n6. Sarah gives feedback that the response was helpful and closes the chat\n7. Sarah is in the Web IDE. She is typing code and accepts a suggestions that the chat bot makes, but has a question about it.\n8. She highlights the block of code, clicks a button to launch the chat, and is presented with three options:\n   - [Explain this code](https://gitlab.com/groups/gitlab-org/-/epics/10218+)\n   - Write Tests for this code\n   - Refactor my code\n8. Sarah selects the quick action \"explain this code\"\n9. Chat responds with an explanation\n10. Sarah clicks another option “Write tests for this code block”\n11. Chat responds with some tests\n12. Sarah copies it and puts it in her code \n13. Sarah closes the chat window\n14. Sarah comes back and wants to see the tests that she previously asked about, so she goes to the list of saved conversations and clicks on the one that was about writing test cases\n\n#### Longer term goals\n\nWe will include the following abilities in the chat bot:\n\n1. Explain this vulnerability\n2. Resolve this vulnerability\n3. Create an issue or a merge request\n\n### Intended users\n\n**ALL** personas as described in https://about.gitlab.com/handbook/product/personas/\n\n### Available Tier\n\n ~\"GitLab Ultimate\" \n\n### What we know/Background\n\n* Interactions with LLMs are particularly strong when used interactively with follow-up questions (e.g. as demonstrated by https://martinfowler.com/articles/2023-chatgpt-xu-hao.html)\n* LLM can _understand_ context across multiple questions and answers\n* Existing LLM chat experiences from different providers keep all history of the communication in threads. This maybe something to consider as well, although a quick internal survey showed that out of 144 respondents only 44 ever went back to their chat history older than three days.\n* An endless chat, may feel more like a friend that knows you, than anonymous one-answer-at-a-time answering machine. We can also use the history of chat to know at which experience level the answer needs to be formulate. E.g. junior developer may ask to have answers elaborated further many times, then we can change the prompt to AI to come up with a more elaborate answer from the get go for this user. \n* There a limit to the length of an input \n* We might use other AI tools and mix them. These other AIs may not lend themselves to interactive dialog and might have different limits and possibilities. We would have to deal with that. \n* We have to deal with:\n   * Service not available / very slow\n   * User reached quota\n\n\n\n### Legal and privacy requirements\n* Legal and privacy requirements are being discussed [here](https://gitlab.com/gitlab-com/legal-and-compliance/-/issues/1461) and will be added to this issue once these have been finalized.\n* [This conclusion regarding how we can enable AI-based comment summaries by adding `Created with AI`](https://docs.google.com/document/d/1mgrUNfbUp0GxvsUHoC1Azupx39gfJcSilxe2sqYgQ60/edit#bookmark=kix.qjc46bbkoisp) might be applicable to other use cases like Explain Code as well.",
    "start_date_sourcing_milestone_id": 2910456,
    "due_date_sourcing_milestone_id": null,
    "start_date_fixed": null,
    "due_date_fixed": null,
    "start_date_is_fixed": null,
    "due_date_is_fixed": null,
    "closed_by_id": null,
    "closed_at": null,
    "parent_id": 762022,
    "relative_position": -28728,
    "state_id": 1,
    "start_date_sourcing_epic_id": null,
    "due_date_sourcing_epic_id": 899417,
    "external_key": null,
    "confidential": false,
    "color": "#1068bf",
    "total_opened_issue_weight": 37,
    "total_closed_issue_weight": 47,
    "total_opened_issue_count": 140,
    "total_closed_issue_count": 180
  },
  "author": {
    "id": 10822493,
    "username": "tlinz",
    "name": "Torsten Linz"
  },
  "labels": [
    {
      "id": 30251403,
      "title": "AI-Priority",
      "color": "#9400d3",
      "project_id": null,
      "created_at": "2023-05-11 19:53:00 UTC",
      "updated_at": "2023-05-11 19:53:00 UTC",
      "template": false,
      "description": "",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 30402137,
      "title": "Copilot-X-Compete",
      "color": "#9400d3",
      "project_id": null,
      "created_at": "2023-05-24 18:43:40 UTC",
      "updated_at": "2023-05-24 18:43:40 UTC",
      "template": false,
      "description": null,
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 3207279,
      "title": "GitLab Ultimate",
      "color": "#8E44AD",
      "project_id": null,
      "created_at": "2017-12-22 09:43:27 UTC",
      "updated_at": "2018-01-30 19:53:24 UTC",
      "template": false,
      "description": "Features or changes limited or intended as part of GitLab Ultimate.",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 31287876,
      "title": "group::duo chat",
      "color": "#a8d695",
      "project_id": null,
      "created_at": "2023-08-10 18:01:08 UTC",
      "updated_at": "2023-08-16 05:45:05 UTC",
      "template": false,
      "description": "Duo Chat group, part of the AI-powered stage within the Data Science section",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 29780827,
      "title": "wg-ai-integration",
      "color": "#330066",
      "project_id": null,
      "created_at": "2023-03-31 13:29:22 UTC",
      "updated_at": "2023-03-31 13:29:22 UTC",
      "template": false,
      "description": null,
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    }
  ],
  "start_date_sourcing_milestone": {
    "id": 2910456,
    "title": "15.11",
    "project_id": null,
    "description": "",
    "due_date": "2023-04-17",
    "created_at": "2022-12-13 20:08:46 UTC",
    "updated_at": "2022-12-13 20:08:46 UTC",
    "state": "active",
    "iid": 86,
    "start_date": "2023-03-18",
    "group_id": 9970,
    "lock_version": 0
  },
  "due_date_sourcing_milestone": null,
  "notes": [
    {
      "note": "@mle thanks for moving this under the framework epic.\n\nIn the recent weeks we've been structuring our work and designing for the chat interface in pieces (e.g. https://gitlab.com/gitlab-org/gitlab/-/issues/407175 and https://gitlab.com/gitlab-org/gitlab/-/issues/407147), instead of holistically taking all the known requirements into account. This former is natural, given the work velocity and how that influences us to focus on the closest iteration.\n\nTo counter this, one possible way is to design the chat interface as if it was a [UX theme](https://about.gitlab.com/handbook/product/ux/product-design/ux-roadmaps/). We can adapt the [UX theme issue template](https://gitlab.com/gitlab-org/gitlab/-/blob/master/.gitlab/issue_templates/UX%20Theme.md?plain=1) to this epic and fill it out as best we can. This will force us to think and design holistically and in more abstract terms. There are a few challenges of applying the UX theme approach to something like this:\n1. The solution will serve multiple JTBDs. We can try to generalize the “theme statement” and some of the [JTBD terminology](https://about.gitlab.com/handbook/product/ux/jobs-to-be-done/#jtbd-terminology) but then list the more concrete main jobs and small jobs that could leverage this solution.\n2. We've already decided on a direction for the solution (chat interface), so the “solution-agnostic” aspect would not be applicable here. This solution will address a generalized problem.\n\nIf you agree, can you please adapt this epic's description to fit the UX theme approach as best you can? Else, what would be your preferred approach?\n\n---\n\nThree concrete first steps that we could take here:\n1. Audit existing designs that you and I have worked on for a chat UI (maybe other designers too).\n2. Collect examples across the industry of how others have solved this (final designs and, ideally, designs guidelines).\n3. Use this information to fill the “Requirements” section of the UX theme template.\n\nWe have already done a bit of these points, but not in an intentional and formalized way. If you agree, we can create specific issues for points 1 and 2, so that the ongoing work and assignments are clear.\n\ncc @katiemacoy @jmandell",
      "noteable_type": "Epic",
      "author_id": 626804,
      "created_at": "2023-04-19 14:03:03 UTC",
      "updated_at": "2023-04-19 14:03:03 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "52caa81752dd906af8a885511c203f68dc7872e7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1358911278,
      "namespace_id": null
    },
    {
      "note": "@wayne that's a good question. I think discussion and ~\"workflow::design\" is under way but I was under the impression that building an interactive chat with follow-up questions wasn't a priority for the first features being rolled out.\n\n@tlinz @timzallmann @mle care to weigh in? thanks!",
      "noteable_type": "Epic",
      "author_id": 853414,
      "created_at": "2023-04-10 18:36:47 UTC",
      "updated_at": "2023-04-10 18:36:47 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "998ea4b041116647417634cbf7ddb8a95ea8bdf7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1347204395,
      "namespace_id": null
    },
    {
      "note": "That's a good thinking, @andrei.zubov. I would suggest taking a look at all the issues attached to this Epic - there's already work on the unification happening and I would suggest taking a look at those. We (Source Code) plan on extending [Explain Code with the continuous chat functionality](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/117674) in the coming days. The Global Search team is working hard on the Ask Tanuki. After the first production launch for the latter, there will be work on consolidating the interfaces.\n\n/cc @sarahwaldner",
      "noteable_type": "Epic",
      "author_id": 3199302,
      "created_at": "2023-04-24 14:16:58 UTC",
      "updated_at": "2023-04-24 14:16:58 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "1ec59fa075db6dc8178c23f4fd4a3e2af7f747b2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1364574170,
      "namespace_id": null
    },
    {
      "note": "Hi everyone! \nJust a headsup - we're working on https://gitlab.com/groups/gitlab-org/-/epics/10359+ and it looks like in a long-run it would make sense to have a unified user experience around all chat-like functionalities in GitLab.\n\nSpecifically it would be great to have the following features:\n1. Unified chat UI that looks and feels the same on different areas/pages of GitLab\n2. Context awareness: ideally we should be able to provide the neccessary context to the bot on any given page, for example, if the user is on the CI editor page of the project, ideally there should be a way to provide this context to the bot and further finetune it to the use-case expected in this scenario\n3. Providing integrated quick actions, for example - use a particular code snippet in the editor, or send a selected code block from the editor to the chat bot for explanation.\n\nDo you have anything from the above on your radar? What would be the best way to align our efforts in this area?",
      "noteable_type": "Epic",
      "author_id": 12455340,
      "created_at": "2023-04-24 12:41:56 UTC",
      "updated_at": "2023-04-24 14:16:58 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": 12455340,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "1ec59fa075db6dc8178c23f4fd4a3e2af7f747b2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-04-24 12:42:30 UTC",
      "internal": false,
      "id": 1364376642,
      "namespace_id": null
    },
    {
      "note": "Thank you @tlinz I have communicated to leadership that we will have estimated dates for all of these epics by the end of this week. cc @timzallmann @m_gill",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-06-08 21:58:00 UTC",
      "updated_at": "2023-06-08 21:58:00 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "50e46b76ed9e53d6ebd83471be8e240920a44e6a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1424396555,
      "namespace_id": null
    },
    {
      "note": "@timzallmann, regarding\n\n> should we start a prompt collection here - https://gitlab.com/gitlab-org/dev-subdepartment/ai-dev-promptcollection/-/tree/main/code ?\n\nI think it would be helpful to establish a mechanism that lets us test the performance of different prompt designs like proposed in https://gitlab.com/groups/gitlab-org/-/epics/10233+.\n\nHow about rather than collecting the prompts in a repo, we collect them in Sisense where they can live together with the performance metrics? On the other hand if we can make the repo the SSoT for all prompts and where we would edit the prompts and Sisense the SSoT for prompt performance, that might be helpful too.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-26 13:08:29 UTC",
      "updated_at": "2023-04-26 13:08:29 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1368644616,
      "namespace_id": null
    },
    {
      "note": "Hi @gabe, I am not sure there is overlap. At least until you raised the question, I saw these as fundamentally different use cases. The chat interface here is for interactions between one user and the AI - like a personal assistant. Think of it as a 1:1 chat with a co-worker that knows what you are looking at. \n\nIn _summarize issue discussion_ the AI is like a co-worker that contributes to a discussion. \n\nI can see use cases, where you would rather have summary created just for yourself. I suppose one could still use _summarize issue discussion_ but simply not submit the reply. Since we are establishing the chat in different places (ideally all across the platform) it might make sense to of to summarize a discussion ALSO in the chat but NOT ONLY in the chat. \n\ncc: @lvanc / @mle",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-26 16:57:38 UTC",
      "updated_at": "2023-04-26 16:57:38 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "1148f34da1ad5876def5ce387c596521dfab2a48",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1369174171,
      "namespace_id": null
    },
    {
      "note": "@lvanc @tlinz Is there overlap here with how we've implemented https://gitlab.com/groups/gitlab-org/-/epics/10344+ from a UX perspective? In this epic, we propose the chat interface be the primary mechanism for \"Summarize all comments and threads on a page.\" Where is the overlap or duplication, if any?",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2023-04-26 13:09:20 UTC",
      "updated_at": "2023-04-26 16:57:40 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "1148f34da1ad5876def5ce387c596521dfab2a48",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1368646062,
      "namespace_id": null
    },
    {
      "note": "@timzallmann @tlinz agree! We have to ensure that the use of a chat interface is warranted and rooted in actual user needs, not just because we assume it would be helpful.\n\n@tlinz also, thank you for creating this and the other “common” epics, I will give them some attention tomorrow :bow:",
      "noteable_type": "Epic",
      "author_id": 626804,
      "created_at": "2023-04-04 18:04:06 UTC",
      "updated_at": "2023-04-04 18:04:06 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "9bed319a8d8998ac1bcd9dfd870e9b6b95fe81c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1341173437,
      "namespace_id": null
    },
    {
      "note": "I love that idea and :100: that we should get start defining it with UX.",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-03-31 12:05:01 UTC",
      "updated_at": "2023-04-04 18:04:06 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "9bed319a8d8998ac1bcd9dfd870e9b6b95fe81c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1336777408,
      "namespace_id": null
    },
    {
      "note": "For the record, I'll move any implementation epics/issues related to the feature \"Explain the code\" to https://gitlab.com/groups/gitlab-org/-/epics/10218+",
      "noteable_type": "Epic",
      "author_id": 2338505,
      "created_at": "2023-04-19 05:05:45 UTC",
      "updated_at": "2023-04-19 05:05:45 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3d095d1753014821ae87917d956ff0c7cff82baa",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1358054016,
      "namespace_id": null
    },
    {
      "note": "@pedroms I haven't had a chance to look over @alasch's research plan but perhaps this could be something to keep in mind as that's being done?",
      "noteable_type": "Epic",
      "author_id": 5291762,
      "created_at": "2023-04-05 21:01:22 UTC",
      "updated_at": "2023-04-05 21:01:22 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "9bed319a8d8998ac1bcd9dfd870e9b6b95fe81c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1342950083,
      "namespace_id": null
    },
    {
      "note": "Should this have the label ~\"wg-ai-integration-prioritized-prototype\" since work is active on it?\n\ncc @hbenson @m_gill",
      "noteable_type": "Epic",
      "author_id": 4708570,
      "created_at": "2023-04-10 13:29:28 UTC",
      "updated_at": "2023-04-10 18:36:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "998ea4b041116647417634cbf7ddb8a95ea8bdf7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1346759439,
      "namespace_id": null
    },
    {
      "note": "@pedroms @katiemacoy  @tlinz @mle I think it makes sense to pull all of these framework-oriented issues into the work that Pedro and Katie are doing. They'll be the hub for this type of AI/UX coordination where they'll be the DRIs that will bring in and/or work collaboratively with other Groups to ensure all needs are covered and consistently utilized.\n\ncc/ @tauriedavis @vkarnes @hbenson",
      "noteable_type": "Epic",
      "author_id": 5291762,
      "created_at": "2023-04-17 20:50:29 UTC",
      "updated_at": "2023-04-17 20:50:29 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3d095d1753014821ae87917d956ff0c7cff82baa",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1356054887,
      "namespace_id": null
    },
    {
      "note": "@tlinz @mle I'd like to understand what is your team's relationship with these “AI Common” epics, so that we can define responsibilities and set expectations. The reason I'm asking is that the UX team assigned to the AI Integration effort (see https://gitlab.com/groups/gitlab-org/-/epics/10269) is going to start working on a broader [AI UX framework](https://gitlab.com/groups/gitlab-org/-/epics/10334) (for now, me and @katiemacoy). A lot of what's documented and being worked on in these “AI Common” epics overlaps with or is duplicative of that work that we are starting. I agree with the problems that these epics want to solve, and they are part of what a UX framework will achieve.\n\nWhat I'm asking here is similar to https://gitlab.com/gitlab-org/gitlab/-/issues/406810#note_1350316883\n\nSome specific questions:\n1. What's @mle capacity to drive some of these aspects forward and contribute to the UX framework in a holistic way that takes into account multiple use cases (and not just Source Code's use cases)? Can we rely on him as a regular contributor, alongside me and @katiemacoy?\n2. Can/should we repurpose these epics and move them under https://gitlab.com/groups/gitlab-org/-/epics/10334+?\n\nIt's been challenging to understand how each team is working, structuring their work, and how wide they are thinking. It feels like everyone is doing this differently. My goal is to get some clarity and understand your point-of-view :open_hands: \n\nIf a sync call would be more productive, happy to do that, feel free to add some time to my calendar (tomorrow, Friday is okay for me).\n\ncc @jmandell",
      "noteable_type": "Epic",
      "author_id": 626804,
      "created_at": "2023-04-13 18:48:58 UTC",
      "updated_at": "2023-04-14 04:35:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3d095d1753014821ae87917d956ff0c7cff82baa",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1352026251,
      "namespace_id": null
    },
    {
      "note": "Yes, I see this as the epic that defines the goal and that we can use to discuss experience and design. From this we identify iterations to get there. The iterations are the ones that we work on. The first iteration does not allow a chat with follow up questions. (So technically, it is not a chat, yet.)",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-11 19:03:23 UTC",
      "updated_at": "2023-04-11 19:03:23 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "998ea4b041116647417634cbf7ddb8a95ea8bdf7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1348825057,
      "namespace_id": null
    },
    {
      "note": "@tlinz, @mle should we add the video to the description? :thinking:",
      "noteable_type": "Epic",
      "author_id": 3199302,
      "created_at": "2023-04-11 12:51:14 UTC",
      "updated_at": "2023-04-11 12:51:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "99bf4be4fa04c2f12ebd4572abd11d37176088b4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1348266794,
      "namespace_id": null
    },
    {
      "note": "I have recorded [a short video walkthrough](https://www.youtube.com/embed/ktEmQK2WyH4) of the current chat implementation for the \"Explain the Code\" feature",
      "noteable_type": "Epic",
      "author_id": 3199302,
      "created_at": "2023-04-11 11:44:51 UTC",
      "updated_at": "2023-04-11 12:51:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "99bf4be4fa04c2f12ebd4572abd11d37176088b4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1348149002,
      "namespace_id": null
    },
    {
      "note": "Hi @dmishunov, this is really very cool :heart:. @mle, I assume this does not represent a final design. Might it be better to create a child issue Iteration 2: Simple endless chat. What do you both think?",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-11 19:09:02 UTC",
      "updated_at": "2023-04-11 20:56:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "99bf4be4fa04c2f12ebd4572abd11d37176088b4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1348830135,
      "namespace_id": null
    },
    {
      "note": "Not that you asked, but this came up in my emails so... :grin:  I agree with this version of \"prompts\"\n\n\\>In my mind, selecting different standard tasks would not be part of the chat itself but be part of [initiating the chat](https://gitlab.com/groups/gitlab-org/-/epics/10221#proposal \"[AI Common] Interface to initiate interaction with AI for use cases that concern selectable text\")\n\nTo me, this is more or less what we're doing now. We're sprinkling, or planning to, CTAs or triggers in various areas of the UI that users are currently working in to let them know there is AI assistance available. Such as when viewing a long threaded comment, we'll have a CTA of some sort to prompt AI for a summary. When the user highlights the code we'll have a prompt to explain that to them. A prompt to explain vuln, etc. I'd expect that all of these could move from various heights of content dissemination; integrated directly within the view they're on to a more in-depth height of a supportive, chat view (@pedroms is currently working on this mental model to be shared out soon).\n\nThat said it might be interesting to have our AI chat (if it ends up being a globally accessible tool) to provide prompt ideas that others have asked when viewing the page they're currently on as a quick way to get them assistance. \"Other team members have asked about: X, Y, and Z when viewing this page\".\n\ncc/ @mle @pedroms @katiemacoy",
      "noteable_type": "Epic",
      "author_id": 5291762,
      "created_at": "2023-04-26 18:47:51 UTC",
      "updated_at": "2023-04-27 14:56:19 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1369295832,
      "namespace_id": null
    },
    {
      "note": "For the record, I am happy to assist as a regular contributor to the aspects around the UX framework that relates to interacting with AI via a chat interface. This aligns closely with what ~\"group::source code\" is working on and our intent was to help with other teams by providing a framework.\n\nAny work I need to do to make this framework accessible and useable to other teams I am willing to spend that time.",
      "noteable_type": "Epic",
      "author_id": 2338505,
      "created_at": "2023-04-16 23:07:01 UTC",
      "updated_at": "2023-04-16 23:07:01 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3d095d1753014821ae87917d956ff0c7cff82baa",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1354470984,
      "namespace_id": null
    },
    {
      "note": "@gweaver \n\nWe are working to name AI in GitLab today. Once it has a name, that is how we will refer to it. It will be the bot behind all AI interactions.\n\nThis particular epic is working to create the chat interface through which a user can \"chat\" with the bot about different topics. The first use cases we are focused on include:\n1. Ask questions about documentation\n2. Explain this code block\n3. Write/suggest tests\n\nI viewed the demo for summarize issue comments and I think that right now there might be 2 things for you to update:\n1. We are working on selecting an icon here. Once we pick one, I think you will want to update the icon that you are using.\n2. Any hover states or help/discovery text will want to be updated to include the name of GitLab AI that we pick today.\n\nOther than that, I do not see too much overlap. Thanks for reaching out!",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-05-01 14:59:01 UTC",
      "updated_at": "2023-05-01 15:37:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "1148f34da1ad5876def5ce387c596521dfab2a48",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1373855510,
      "namespace_id": null
    },
    {
      "note": "Thanks for the response @dmishunov ! Great to see we're working towards the same end goal!\n\nI've looked through the issues in this epic, but couldn't pinpoint the one where this question would belong, as none of these addressed the frontend integration part (I did consider https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/1583 but wasn't sure if it was design specific, or also had technical part). If I missed something and there's a better place to have this conversation, please point me to it.",
      "noteable_type": "Epic",
      "author_id": 12455340,
      "created_at": "2023-04-24 15:03:30 UTC",
      "updated_at": "2023-04-24 15:03:30 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "1ec59fa075db6dc8178c23f4fd4a3e2af7f747b2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1364685861,
      "namespace_id": null
    },
    {
      "note": "@mle I like this idea! This could be a great opportunity for a [GitLab AI-specific icon or bot icon](https://gitlab.com/groups/gitlab-org/-/epics/10261#note_1342379220). @tlinz mentioned an idea he had about this that I took to mean we could end up with a GitLab Companion (Tanuki Companion?) that's following you around just waiting for opportunities to help out, and increase your productivity... all catered to you. This could be the manifestation of that. The hub where all the things you've collaborated with it on lives, or suggestions for productivity up-leveling lives.\n\ncc/ @pedroms @katiemacoy",
      "noteable_type": "Epic",
      "author_id": 5291762,
      "created_at": "2023-04-06 16:45:49 UTC",
      "updated_at": "2023-04-06 16:45:49 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "07297fc558e03d49b0153acb73592a6e1419d866",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1344315525,
      "namespace_id": null
    },
    {
      "note": "This is a quick idea about maintain multiple threads / endless history. I am putting here because I don't know where else to put it (yet)\n\n@dmishunov commented https://gitlab.com/gitlab-org/gitlab/-/issues/403728#note_1340097021 \n\n> This happens to me way too often in ChatGPT that my threads at the end have nothing in common with the beginning. Which makes it really hard to navigate when I need to get back to an answer.\n\nWe could introduce a navigation between a list of context/threads as the main landing area and allow the user to click to view thread or start a new thread.\n\n![CleanShot_2023-04-05_at_15.46.21](/uploads/90883ee7542cdd78d4b48110ef9929b5/CleanShot_2023-04-05_at_15.46.21.png)\n\nStill lots of questions like, do we navigate to that page that the user opened it on? Early thought.\n\nFYI @pedroms @katiemacoy @jmandell",
      "noteable_type": "Epic",
      "author_id": 2338505,
      "created_at": "2023-04-05 05:52:44 UTC",
      "updated_at": "2023-04-06 16:45:49 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "07297fc558e03d49b0153acb73592a6e1419d866",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1341654206,
      "namespace_id": null
    },
    {
      "note": "From https://gitlab.com/groups/gitlab-org/-/epics/10221#note_1356157738 by @dmishunov \n\n> ...how we could make the transition from the current AiGenie component (used for Explain Code) to the drawer. I played with the chat prototype for the Explain Code functionality, and here's what I came up with.\n\n> In general:\n\n> * we style the AiGenie component to look closer to drawer and position it in the lower right corner\n> * we start with AiGenie taking up only the height needed for the explanation\n> * after the user starts interacting (chatting), the AiGenie starts to grow and, eventually, takes up the whole height of the window, allowing to scroll the chat while having the header and the footer sticky",
      "noteable_type": "Epic",
      "author_id": 2338505,
      "created_at": "2023-04-19 01:29:47 UTC",
      "updated_at": "2023-04-19 08:06:15 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1357924496,
      "namespace_id": null
    },
    {
      "note": "Hi @mle, while this design proposal on the left side significantly improves the navigation through history, it may not be ideal in terms representing a conversation between the user and the AI, were the user (and maybe also the AI) make references to previously discussed things. The latter is better represented in a continues thread. \n\nAs a user I also find it hard like @dmishunov to find older answers. But then again, that is in the nature of chats. \n\nI think a future improvement (in GL as well as in any other AI chat system) could be that the user could simply ask the AI to show where a specific topic was discussed. So, that would be a different type of interaction. Not one where the user-question is persisted in the chat, nor one that expects an answer to that question, but that results in an action. In this case, the chat thread would be moving up to the position where the requested topic was discussed. But there could be other actions. \"Tanuki, can you create a branch called feature-a and also protect it so that only I can push.\"\n\nI do appreciate using the link to the selected text rather than a copy of the text in the chat (top-right of the screenshot). That make the history shorter.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-06 17:53:33 UTC",
      "updated_at": "2023-04-06 17:53:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "07297fc558e03d49b0153acb73592a6e1419d866",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1344379385,
      "namespace_id": null
    },
    {
      "note": "@mle, thanks for the reference. Here's the video of this interaction's prototype:\n\n![explain-code-chat-docs+tests](/uploads/649f06ed60acdda8767a6d1cf9289b06/explain-code-chat-docs+tests.mov)",
      "noteable_type": "Epic",
      "author_id": 3199302,
      "created_at": "2023-04-19 08:06:15 UTC",
      "updated_at": "2023-04-19 08:06:15 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1358285676,
      "namespace_id": null
    },
    {
      "note": "@dmishunov Awesome to see this! \n\nFunny enough was just thinking/writing notes about what we could do with snippets of code in general: \n\n* write a comment for the selected code\n* write a spec in X for that code\n* translate code to language Y\n* Improve/Refactor Code \n* explain complexity (n+1?)\n* make it faster\n\nshould we start a prompt collection here - https://gitlab.com/gitlab-org/dev-subdepartment/ai-dev-promptcollection/-/tree/main/code ?\n\nThe other thing especially for specs, what might be intresting is to start building repo \"maps\" to have a better understanding which libraries or frameworks are used. So we could auto-suggest the right kind of test library for example and/or if we look into auto-healing pipelines this could be helpful. I was thinking in the context previously of auto-adding tracking for example to a project. \n\ncc @tlinz",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-04-19 08:18:00 UTC",
      "updated_at": "2023-04-19 08:18:00 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1358304147,
      "namespace_id": null
    },
    {
      "note": "@timzallmann Thanks for the comment!\n\nI have a question regarding those prompts - how do you envision those? I would assume they should come from user, however, we can somehow help and guide them. Here's the continuation of the idea above, where we abstract those prompts into the buttons (I know, the buttons look horrible here :sweat_smile:, but that's not the point):\n\n![explain-code-chat-docs+tests-buttons](/uploads/0a11d35e1e4a1df615c87f9a5abca6bb/explain-code-chat-docs+tests-buttons.mov)\n\nAnother idea would be to have a tooltip on the input field suggesting further actions and stimulating interactivity:\n\n![explain-code-chat-docs+tests-tooltip](/uploads/c7e10f6ba61521bfa2f1b0c538753b1f/explain-code-chat-docs+tests-tooltip.mov)\n\n\nRelated to the list of actions you suggest (really good one, btw), I would also add one more:\n\n- \"Save to snippet\" to save the code snippets from AI to snippets. I think we should thing about using the responses outside of the chat window as well and saving, generating and MR, etc. would be nice things to proceed with. But snippets are isolated enough from the project to not bother about code style, MR rules, etc. so should be a good first step towards further expansion.",
      "noteable_type": "Epic",
      "author_id": 3199302,
      "created_at": "2023-04-19 09:24:15 UTC",
      "updated_at": "2023-04-19 09:24:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": 3199302,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2023-04-19 09:24:48 UTC",
      "internal": false,
      "id": 1358411357,
      "namespace_id": null
    },
    {
      "note": "@dmishunov Thanks for sharing the the tooltip suggesting further actions. Glad you are already exploring that functionality and knowing that it is possible.\n\nI'll make sure to include it as part of the chat framework I am working on.",
      "noteable_type": "Epic",
      "author_id": 2338505,
      "created_at": "2023-04-19 11:24:00 UTC",
      "updated_at": "2023-04-19 11:24:00 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1358610158,
      "namespace_id": null
    },
    {
      "note": "@dmishunov My thought would be to create well working prompts in the background for standard tasks (the list from above) that are available to users with one click for standard tasks (has a high discoverability, and one click of you go for code tasks is like a high powered code toolbox and a click is still 1000x times faster then me typing in the morning without coffee some clumsy prompts about what i want ;-)). The advantage might be that we can add more info to the prompt then just the selected text (like which libraries are used, spec code, etc.). For example copilot brushes (https://githubnext.com/projects/code-brushes/)\n\nEvery interaction like that can then flow over into a full fledged chat + conversion to provide more interaction. This seems to me like the best of two worlds. Chat can of course also be opened at any point without a start task and we should take in tooling so we can reference in the chat easily the \"surroundings\" like select code on the rest of the page or a text or or or ...",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-04-21 07:10:46 UTC",
      "updated_at": "2023-04-21 07:10:46 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1361664685,
      "namespace_id": null
    },
    {
      "note": "Thank you @sarahwaldner. This is great. I am glad this is coming together. :pray:",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-19 22:22:41 UTC",
      "updated_at": "2023-04-21 07:11:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "94f3f3976e9170243b5fcc6f5422051617f5f4f4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1359527405,
      "namespace_id": null
    },
    {
      "note": "@tlinz You will see that I have edited the description of this epic. I finally determined that https://gitlab.com/groups/gitlab-org/-/epics/10234 was in fact a duplicate of this one that you initiated at the beginning of the AI effort - thank you for the doing that.\n\nI closed https://gitlab.com/groups/gitlab-org/-/epics/10234 and I copied over some valuable user/experience context to make the description more robust. LMK if there are questions.",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-04-19 22:11:31 UTC",
      "updated_at": "2023-04-19 22:22:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "94f3f3976e9170243b5fcc6f5422051617f5f4f4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1359518689,
      "namespace_id": null
    },
    {
      "note": "@dmishunov @tlinz I created this issue https://gitlab.com/gitlab-org/gitlab/-/issues/406678/+",
      "noteable_type": "Epic",
      "author_id": 2338505,
      "created_at": "2023-04-12 00:56:08 UTC",
      "updated_at": "2023-04-12 00:56:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "99bf4be4fa04c2f12ebd4572abd11d37176088b4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1349092680,
      "namespace_id": null
    },
    {
      "note": "@jmandell @tlinz I am gonna move the \"[AI Common]\" epics under https://gitlab.com/groups/gitlab-org/-/epics/10334+ because I have been working on them alongside ~\"group::source code\" and will be continue to elaborate on the details and exploration of those areas along @pedroms & @katiemacoy \n\nTorsten, I am gonna try to find a suitable epic to move any specific issues related to \"Explain this code\". If I can't find one I will create a placeholder one to cover \"iteration 1\", \"iteration 2\". This is more of a housekeeping task as we would have a few closed issues already.",
      "noteable_type": "Epic",
      "author_id": 2338505,
      "created_at": "2023-04-19 01:34:39 UTC",
      "updated_at": "2023-04-20 14:00:31 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3d095d1753014821ae87917d956ff0c7cff82baa",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1357926392,
      "namespace_id": null
    },
    {
      "note": "@pedroms @mle @katiemacoy @jmandell \n\nAdditionally I have closed https://gitlab.com/groups/gitlab-org/-/epics/10234 as it was very similar to what we are trying to achieve this epic. I also added some more sections to this epic including problem to be solved, vision, further details, intended users, user experience goal, and available tier.\n\nI located the Tanuki bot MVC epic under this one so that we can better align all of the work going into creating a chat bot/interface in the product that will ultimately solve multiple use cases.\n\nPlease note that the Global search team will be maturing the Tanuki Bot MVC into a robust chat interface. I am the PM for that team and @changzhengliu is the EM. Please keep us involved as we will be responsible for breaking down the work into iterations for the team!",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-04-19 21:30:07 UTC",
      "updated_at": "2023-04-20 18:50:22 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": 3796140,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "52caa81752dd906af8a885511c203f68dc7872e7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2023-04-19 21:36:44 UTC",
      "internal": false,
      "id": 1359490440,
      "namespace_id": null
    },
    {
      "note": "@abellucci Please note that I have closed https://gitlab.com/groups/gitlab-org/-/epics/10234 in favor of this epic since there was duplication. I copied over a lot of the content to combine the descriptions.",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-04-19 21:32:15 UTC",
      "updated_at": "2023-04-21 18:35:24 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "746c7d3ba8aab036e9bdd6178aa19b698a6a6ca5",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1359492038,
      "namespace_id": null
    },
    {
      "note": "@andrei.zubov Thanks for your comment. We are designing for the interactive AI chat interface for all of the GitLab product in [this issue](https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/issues/1583). We are holistically addressing all of the items that you outline above. The Global search team is building and iterating on this interface with the goal to incorporate the AI features that other teams are working on, which includes:\n\n- Explain this code block\n- Explain this vulnerability\n- Generate tests in the MR",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-04-24 19:36:19 UTC",
      "updated_at": "2023-04-24 19:36:19 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "1ec59fa075db6dc8178c23f4fd4a3e2af7f747b2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1365317114,
      "namespace_id": null
    },
    {
      "note": "Lets collect all kinds of questions to start testing models that we would like to see now or in the future:\n\n* Explain the code on this page\n* Summarise the description of the issue\n* etc.",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-05-11 09:32:03 UTC",
      "updated_at": "2023-05-11 09:32:03 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fc9945d277ae0d8152ea6953e44bbcb0887c6810",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1386535779,
      "namespace_id": null
    },
    {
      "note": "@timzallmann I created this issue to capture that https://gitlab.com/gitlab-org/gitlab/-/issues/410644 - please ping people there!",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-05-11 21:24:59 UTC",
      "updated_at": "2023-05-11 21:24:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fc9945d277ae0d8152ea6953e44bbcb0887c6810",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1387604840,
      "namespace_id": null
    },
    {
      "note": "Hi @pedroms, same comment as here: https://gitlab.com/groups/gitlab-org/-/epics/10233#note_1352179604.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-13 23:16:36 UTC",
      "updated_at": "2023-04-13 23:16:36 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3d095d1753014821ae87917d956ff0c7cff82baa",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1352283324,
      "namespace_id": null
    },
    {
      "note": "Perfect, thanks!",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-05-12 09:36:15 UTC",
      "updated_at": "2023-05-12 09:36:15 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fc9945d277ae0d8152ea6953e44bbcb0887c6810",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1388210253,
      "namespace_id": null
    },
    {
      "note": "So we are targetting to build the Chat architecture on a agent/tool setup, where an LLM agent will decide based on the question what tool to use for it to answer it. Due to that the questions will not be about a certain AI feature but rather provide a certain context and/or tool to give the information the LLM will ask for. Which is also the new setup I will add for the questions which we want to support. \n\nWe are now [gathering the questions](https://gitlab.com/gitlab-org/gitlab/-/issues/410644) (especially the ones targetting the current features) and will try to be able to accomplish as many as possible. They can be content retrieval answers or even actions that can be executed (Level 2).",
      "noteable_type": "Epic",
      "author_id": 1149402,
      "created_at": "2023-05-12 11:03:39 UTC",
      "updated_at": "2023-05-12 11:03:39 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fc0f63b708a3491cb15e1d9214e275adaf49d3cb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1388335058,
      "namespace_id": null
    },
    {
      "note": "@timzallmann @m_gill @tlinz @katiemacoy \n\nI am trying to wrap my brain around how to organize releases/iterations for the chat bot. I finally decided to _write it down :laughing:_. Please review and let me know if this makes sense to you. @tlinz will ultimately be organizing this but I have to have _something_ to communicate to leadership.\n\n#### 1. GitLab Chat Bot Beta\nChat Bot beta in the main application, we announce this **before** and it is enabled in the Web IDE since that is going to take a couple milestones. We will need to define what questions can be asked of it.\n\n#### 2. GitLab Chat Bot in the Web IDE - Beta\nWe announce this as a separate beta release when it is ready. \n\n#### 3. GitLab Chat Bot GA\nThis might be a single release since the experience will exist in the product and in the Web IDE.\n\nThoughts?",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-05-16 22:50:32 UTC",
      "updated_at": "2023-05-17 10:51:27 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b2e05ef702194d0ae49850ca28ef072e59d925a8",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1393118339,
      "namespace_id": null
    },
    {
      "note": "@sarahwaldner this is how I imagined it too. I am thinking about 1, 2, and 3 as \"Child Epics\" (https://gitlab.com/groups/gitlab-org/-/epics/10550+, https://gitlab.com/groups/gitlab-org/-/epics/10522+, https://gitlab.com/groups/gitlab-org/-/epics/10585+) and hoping to have [summaries like this](https://gitlab.com/groups/gitlab-org/-/epics/10550#note_1392312276) one for each.",
      "noteable_type": "Epic",
      "author_id": 4554599,
      "created_at": "2023-05-17 10:51:27 UTC",
      "updated_at": "2023-05-17 10:51:27 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b2e05ef702194d0ae49850ca28ef072e59d925a8",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1393908253,
      "namespace_id": null
    },
    {
      "note": "Perfect I am happy to see we are aligned @m_gill",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-05-18 02:39:59 UTC",
      "updated_at": "2023-05-18 02:39:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b2e05ef702194d0ae49850ca28ef072e59d925a8",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1395358636,
      "namespace_id": null
    },
    {
      "note": "Great to see more details and an updated architectural vision! Looks really promising!\n\nI have a few questions about chat tools and switch agent in a context of https://gitlab.com/groups/gitlab-org/-/epics/10359+.\n\n1. How do we route the user's prompt to the right tool? What if the switch agent guesses wrong? that might be frustrating for the user, since waiting times to get a response from the AI provider might be quite significant. Do we plan to have some sort of a shortcut that the user can use to send the prompt directly to the neccessary tool? For example, what if they could tag specialised chat persona, something like `@pipeline_tanuki` if they know that's what they want to use?\n2. I want to confirm I understand your vision of a `tool` right. A product team can implement a tool in a context of a specific domain (for example *pipeline configuration*) and decide on a language model to use for it, provide the prompt that fits the expected use-case best, provide additional context in the form of extra info appended to the user prompt and/or embeddings. The main chat engine would then route the user prompt to this domain-specific implementation based on what *switch agent* decide, but the main handling of the user prompt happens in the *tool*. Did I get it right?\n\nBouns question :smile: \nWhat about the integration of custom tools into a frontend solution, was it considered already? It would be great to have an option to integrate something like widgets that can perform domain specific actions, or present an information in a particular way.",
      "noteable_type": "Epic",
      "author_id": 12455340,
      "created_at": "2023-05-24 15:44:56 UTC",
      "updated_at": "2023-05-24 16:09:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": 12455340,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6a8f6d414adb8cd6ed1de148c509d70e11f24fdb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-05-24 16:09:33 UTC",
      "internal": false,
      "id": 1404097278,
      "namespace_id": null
    },
    {
      "note": "@tlinz Just watched [your video](https://www.youtube.com/watch?v=3VXI1mF7b4E). Amazing stuff to come!\n\nMy feedback for improving the UI: marking the chatbot's response with \"experimental\", \"beta\" and \"GA\" feels very technical. Instead, I propose to display a confidence gauge. That would be a small bar from red to green with an indicator how good we think the answer is. In a first iteration we could basically just map experimental, beta and GA to low, middle and high confidence, but over time this indicator could become part of the models' output, or we could have a dedicated model calculating the confidence.",
      "noteable_type": "Epic",
      "author_id": 10554979,
      "created_at": "2023-06-01 13:55:19 UTC",
      "updated_at": "2023-06-01 16:02:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "9263de8db80164ae9881d483ab5f131ba306d7df",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1414552349,
      "namespace_id": null
    },
    {
      "note": "I can try to work on of the WebIDE epics for Beta and GA. But I want to keep it high level. After we want to first think through the design paradigms as we work on this epic here and than copy and paste and adjust for the different clients. But it is probably a good idea to that I think about this a bit to see were copy and paste might not work.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-06-07 16:58:18 UTC",
      "updated_at": "2023-06-07 16:58:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "50e46b76ed9e53d6ebd83471be8e240920a44e6a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1422442004,
      "namespace_id": null
    },
    {
      "note": "@tlinz @timzallmann\n\nWe have this roadmap where we will be communicating and tracking progress of the different epics for our AI features. I need the following from you:\n\n1. I need to see an epic on that roadmap that corresponds to **GitLab Chat Bot - Web IDE \\[Beta\\]** and **GitLab Chat Bot - Web IDE \\[GA\\]**. We can use [this epic](https://gitlab.com/groups/gitlab-org/-/epics/10522 \"Web IDE Extension for GitLab Chat\") or a different one. Whatever you want. We have separated the releases of the Chat Bot in the main product and the Chat Bot in the Web IDE to be iterative and because it is different scopes of work.\n2. Once we have determined the model that we are going to use for Beta I need us to estimate dates for the following epics:\n   1. [GitLab Chat Bot Beta](https://gitlab.com/groups/gitlab-org/-/epics/10550)\n   2. [Iteration 1: Chat System demonstrate viability](https://gitlab.com/groups/gitlab-org/-/epics/10675)\n   3. [Iteration 2: Chat system measuring user satisfaction and performance aspects](https://gitlab.com/groups/gitlab-org/-/epics/10676)\n   4. [Iteration 3: Chat System - reach beta criteria](https://gitlab.com/groups/gitlab-org/-/epics/10686)\n\nI understand it is very difficult to estimate dates for these but we have to so that the rest of the company has _some level_ of visibility into what we are doing and when it will release. The dates can and will change. \n\nPlease let me know if you have any further questions.",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2023-06-07 15:19:07 UTC",
      "updated_at": "2023-06-07 16:58:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "50e46b76ed9e53d6ebd83471be8e240920a44e6a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1422278079,
      "namespace_id": null
    },
    {
      "note": "We will probably have a paid add-on subscription for the chat, that would be available for everyone independent of the tier they are in. However, to make sure the code for the chat system is not part of the CE license but part of the EE license, I am adding an ~\"GitLab Ultimate\" label for now.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-07-04 15:34:03 UTC",
      "updated_at": "2023-07-04 15:34:03 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "eb6633cd86db9a0a6fcadae70ccf3f0a2a684fc6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1456961340,
      "namespace_id": null
    },
    {
      "note": "@timzallmann / @mle / @dmishunov, In my mind, selecting different standard tasks would not be part of the chat itself but be part of [initiating the chat](https://gitlab.com/groups/gitlab-org/-/epics/10221#proposal). This is largely based on my own experience with AI chat interactions where I express freely what I want without seeing a need for predefined tasks. \n\nI also expect our users (if they are not already super familiar with interacting with LLM) to quickly learn that they can basically ask anything. \n\nBut I guess this is exactly one of the things we need to learn in these experiments in dialog with the users. Do they want predefined tasks? Is the number of tasks 80% of users care about short enough to be easy to pick from? Do they not care about predefined tasks.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-04-26 13:03:14 UTC",
      "updated_at": "2023-07-18 13:34:31 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 785400,
      "st_diff": null,
      "system": false,
      "updated_by_id": 10822493,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "53629393863018cc462fd8096d4125bf932f4a78",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2023-07-18 13:34:30 UTC",
      "internal": false,
      "id": 1368635288,
      "namespace_id": null
    }
  ],
  "note_authors": [
    {
      "id": 626804,
      "username": "pedroms",
      "name": "Pedro Moreira da Silva"
    },
    {
      "id": 853414,
      "username": "andr3",
      "name": "André Luís"
    },
    {
      "id": 3199302,
      "username": "dmishunov",
      "name": "Denys Mishunov"
    },
    {
      "id": 12455340,
      "username": "andrei.zubov",
      "name": "Andrei Zubov"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 626804,
      "username": "pedroms",
      "name": "Pedro Moreira da Silva"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 2338505,
      "username": "mle",
      "name": "Michael Le"
    },
    {
      "id": 5291762,
      "username": "jmandell",
      "name": "Justin Mandell"
    },
    {
      "id": 4708570,
      "username": "wayne",
      "name": "Wayne Haber"
    },
    {
      "id": 5291762,
      "username": "jmandell",
      "name": "Justin Mandell"
    },
    {
      "id": 626804,
      "username": "pedroms",
      "name": "Pedro Moreira da Silva"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 3199302,
      "username": "dmishunov",
      "name": "Denys Mishunov"
    },
    {
      "id": 3199302,
      "username": "dmishunov",
      "name": "Denys Mishunov"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 5291762,
      "username": "jmandell",
      "name": "Justin Mandell"
    },
    {
      "id": 2338505,
      "username": "mle",
      "name": "Michael Le"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 12455340,
      "username": "andrei.zubov",
      "name": "Andrei Zubov"
    },
    {
      "id": 5291762,
      "username": "jmandell",
      "name": "Justin Mandell"
    },
    {
      "id": 2338505,
      "username": "mle",
      "name": "Michael Le"
    },
    {
      "id": 2338505,
      "username": "mle",
      "name": "Michael Le"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 3199302,
      "username": "dmishunov",
      "name": "Denys Mishunov"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 3199302,
      "username": "dmishunov",
      "name": "Denys Mishunov"
    },
    {
      "id": 2338505,
      "username": "mle",
      "name": "Michael Le"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 2338505,
      "username": "mle",
      "name": "Michael Le"
    },
    {
      "id": 2338505,
      "username": "mle",
      "name": "Michael Le"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 1149402,
      "username": "timzallmann",
      "name": "Tim Zallmann"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 4554599,
      "username": "m_gill",
      "name": "Michelle Gill"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 12455340,
      "username": "andrei.zubov",
      "name": "Andrei Zubov"
    },
    {
      "id": 10554979,
      "username": "jkunzmann",
      "name": "Jan Kunzmann"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    }
  ],
  "namespace_hierarchy": [
    {
      "id": 9970,
      "name": "GitLab.org",
      "path": "gitlab-org",
      "type": "Group"
    }
  ]
}
