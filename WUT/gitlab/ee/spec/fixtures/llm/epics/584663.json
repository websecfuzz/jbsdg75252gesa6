{
  "data": {
    "id": 584663,
    "group_id": 9970,
    "author_id": 10822493,
    "assignee_id": null,
    "iid": 8589,
    "updated_by_id": 10822493,
    "last_edited_by_id": 10822493,
    "lock_version": 3,
    "start_date": "2022-09-18",
    "end_date": "2022-10-17",
    "last_edited_at": "2023-01-23 10:05:09 UTC",
    "created_at": "2022-08-17 11:03:36 UTC",
    "updated_at": "2023-10-20 19:46:40 UTC",
    "title": "Report number of lines per language in repository charts",
    "description": "### Description\n\nAs of now, repository charts report percentage of language in the repo.\nFirst, it is not obvious how this percentage is computed (number of files? number of lines? bytes? what about comments? libraries?). Second, I would love to see some *absolute* data (number of files, lines, bytes).\n\n### Proposal\n\nAs a user I would like to see the number of lines of code per language.\nIdeally, excluding blank lines and comments, but that is optional.\n\n### Documentation blurb\n\nAs for use cases:\n* better understand the repo structure\n* if this is your repo, being able to report the number of lines of your main language\n    * this is one of the metric employers would like to know (I personally was surprised by this question on interview and could not clearly respond)\n* all those use cases for general repo graphs (like pie chart of languages)\n\n### Details\n\n[A useful comment from ZJ](https://gitlab.com/gitlab-org/gitlab/issues/17800#note_214979038):\n\n> Just so its stated explicitly, the language bar on the projects overview page is based on bytes. Iteration over each blob to count the number of lines will be quite expensive and to make it performant on gitlab.com scale will be quite the challenge :smile: Bytes are chosen as Git stores the size of each blob with its name. So if a blob has the path `path/to/file.rb` it can take the extension and detect it's Ruby. It already has the number of bytes, so it can move on.\n\n> Lines however is harder, as now you'd have to either iterate each blob each time, or be clever with caching combined with diffing, which in turn might lead to race conditions.\n\n> That all being said, this would require a new RPC to Gitaly, and gitaly-proto changes. Happy to review MRs there! :cat:\n\n### Potential Workarounds\n- **There is a pipeline template that you can use to count lines of code per language: https://gitlab.com/guided-explorations/code-metrics/ci-cd-extension-scc** \n- Run `scc` in a GitLab CI pipeline: https://github.com/boyter/scc to generate SLOC/etc. reports\n- If API use is acceptable (instead of UI), parts of its output stats can be stored as custom attributes on the project: https://docs.gitlab.com/ee/api/custom_attributes.html#set-custom-attribute",
    "start_date_sourcing_milestone_id": 2453027,
    "due_date_sourcing_milestone_id": 2453027,
    "start_date_fixed": null,
    "due_date_fixed": null,
    "start_date_is_fixed": null,
    "due_date_is_fixed": null,
    "closed_by_id": null,
    "closed_at": null,
    "parent_id": null,
    "relative_position": null,
    "state_id": 1,
    "start_date_sourcing_epic_id": null,
    "due_date_sourcing_epic_id": null,
    "external_key": null,
    "confidential": false,
    "color": "#1068bf",
    "total_opened_issue_weight": 7,
    "total_closed_issue_weight": 2,
    "total_opened_issue_count": 4,
    "total_closed_issue_count": 3
  },
  "author": {
    "id": 10822493,
    "username": "tlinz",
    "name": "Torsten Linz"
  },
  "labels": [
    {
      "id": 11039421,
      "title": "Category:Code Analytics",
      "color": "#428BCA",
      "project_id": null,
      "created_at": "2019-06-18 19:25:29 UTC",
      "updated_at": "2019-08-27 17:07:41 UTC",
      "template": false,
      "description": "",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 11469047,
      "title": "Category:Source Code Management",
      "color": "#428BCA",
      "project_id": null,
      "created_at": "2019-07-25 19:15:39 UTC",
      "updated_at": "2019-08-27 17:08:57 UTC",
      "template": false,
      "description": "Category vision in Create stage: https://gitlab.com/groups/gitlab-org/-/epics/687",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 1890178,
      "title": "[deprecated] Accepting merge requests",
      "color": "#69d100",
      "project_id": null,
      "created_at": "2017-04-21 11:34:01 UTC",
      "updated_at": "2023-06-28 08:14:53 UTC",
      "template": false,
      "description": "[deprecated] Please use \"Seeking community contributions\" instead. https://gitlab.com/gitlab-org/developer-relations/contributor-success/team-task/-/issues/77",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 2677574,
      "title": "auto updated",
      "color": "#FFECDB",
      "project_id": null,
      "created_at": "2017-09-19 02:09:18 UTC",
      "updated_at": "2019-05-02 11:05:59 UTC",
      "template": false,
      "description": "Issues that have been updated in accordance with our issue triage policies (https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/contributing/issue_workflow.md)",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 2492649,
      "title": "backend",
      "color": "#D10069",
      "project_id": null,
      "created_at": "2017-08-15 14:49:42 UTC",
      "updated_at": "2018-06-11 10:34:33 UTC",
      "template": false,
      "description": "Issues that require backend work",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 1672341,
      "title": "customer",
      "color": "#ad4363",
      "project_id": null,
      "created_at": "2017-03-10 22:24:59 UTC",
      "updated_at": "2017-03-10 22:24:59 UTC",
      "template": false,
      "description": "Issues that were reported by Enterprise Edition subscribers. This label should be accompanied by either the 'bug' or 'feature proposal' label",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 3103452,
      "title": "devops::create",
      "color": "#E44D2A",
      "project_id": null,
      "created_at": "2017-12-01 19:01:03 UTC",
      "updated_at": "2022-07-04 07:09:55 UTC",
      "template": false,
      "description": "Issues for the Create stage of the DevOps lifecycle (e.g. Source Code Management, Design Management, Web IDE, Code Review, Gitter)",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 4107658,
      "title": "graphs",
      "color": "#428bca",
      "project_id": null,
      "created_at": "2018-05-22 15:01:06 UTC",
      "updated_at": "2018-05-22 15:01:06 UTC",
      "template": false,
      "description": "Issues related to the project Graphs pages",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 10309854,
      "title": "group::source code",
      "color": "#A8D695",
      "project_id": null,
      "created_at": "2019-04-17 13:57:02 UTC",
      "updated_at": "2019-05-23 09:26:35 UTC",
      "template": false,
      "description": "Issues belonging to the Source Code group of the Create stage of the DevOps lifecycle. See https://about.gitlab.com/handbook/product/categories/#source-code-group",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 15237307,
      "title": "icebox",
      "color": "#d6ecef",
      "project_id": null,
      "created_at": "2020-06-09 02:25:38 UTC",
      "updated_at": "2020-06-09 02:35:52 UTC",
      "template": false,
      "description": "Issues on which no work is anticipated in the next several milestones but which may be considered for work shortly thereafter thus not closed.",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 2936416,
      "title": "popular proposal",
      "color": "#FFECDB",
      "project_id": null,
      "created_at": "2017-10-31 10:32:07 UTC",
      "updated_at": "2017-10-31 10:32:07 UTC",
      "template": false,
      "description": "Feature proposals deemed popular by our issue triage policies (https://gitlab.com/gitlab-org/triage) will have this label applied",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 2714266,
      "title": "potential proposal",
      "color": "#FFECDB",
      "project_id": null,
      "created_at": "2017-09-25 01:24:57 UTC",
      "updated_at": "2017-09-25 01:24:57 UTC",
      "template": false,
      "description": "Label added by triage tools to mark interesting feature proposals for consideration",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 14918378,
      "title": "section::dev",
      "color": "#F0AD4E",
      "project_id": null,
      "created_at": "2020-05-11 22:11:57 UTC",
      "updated_at": "2020-05-11 22:11:57 UTC",
      "template": false,
      "description": "Issues related to the Dev section",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 10230929,
      "title": "type::feature",
      "color": "#009966",
      "project_id": null,
      "created_at": "2019-04-09 12:29:58 UTC",
      "updated_at": "2022-03-28 23:33:53 UTC",
      "template": false,
      "description": "Any issue/MR that contains work to support the implementation of a feature and/or results in an improvement in the user experience. Read more at https://about.gitlab.com/handbook/engineering/metrics/#work-type-classification",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 11111311,
      "title": "workflow::problem validation",
      "color": "#428BCA",
      "project_id": null,
      "created_at": "2019-06-26 11:39:07 UTC",
      "updated_at": "2020-08-21 15:43:10 UTC",
      "template": false,
      "description": "Workflow label for validating if the problem is customer relevant. https://about.gitlab.com/handbook/product-development-flow/#workflow-summary",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    }
  ],
  "start_date_sourcing_milestone": {
    "id": 2453027,
    "title": "15.5",
    "project_id": null,
    "description": "",
    "due_date": "2022-10-17",
    "created_at": "2022-02-03 22:29:56 UTC",
    "updated_at": "2022-02-03 22:29:56 UTC",
    "state": "active",
    "iid": 77,
    "start_date": "2022-09-18",
    "group_id": 9970,
    "lock_version": 0
  },
  "due_date_sourcing_milestone": {
    "id": 2453027,
    "title": "15.5",
    "project_id": null,
    "description": "",
    "due_date": "2022-10-17",
    "created_at": "2022-02-03 22:29:56 UTC",
    "updated_at": "2022-02-03 22:29:56 UTC",
    "state": "active",
    "iid": 77,
    "start_date": "2022-09-18",
    "group_id": 9970,
    "lock_version": 0
  },
  "notes": [
    {
      "note": "@dbogatov, I mostly agree with you, really they can implement functionality you mentioned, and it would be great. Nice point!",
      "noteable_type": "Epic",
      "author_id": 346483,
      "created_at": "2017-04-21 20:11:38 UTC",
      "updated_at": "2017-04-21 20:11:38 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": "",
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": "",
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "249a1a4c3ace54eb7fa6c5229267c7a9f89e24a2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398039,
      "namespace_id": null
    },
    {
      "note": "I have a 500 seat gitlab~3207279 ~SaaS ~customer who is interested in this feature.\n\n* Link to request: [SFDC link](https://gitlab.my.salesforce.com/0016100000SEhmfAAD) Internal\n* ~\"customer priority::8\" \n* Why interested: The customer is looking to report the total line of code across all GitLab projects under their namespace.\n* Problem they are trying to solve: The customer has some internal teams who are trying to integrate tooling with GitLab to measure and track code coverage.\n* Current solution for this problem: none\n* Impact to the customer of not having this: Inability to utilize other tools in conjunction with GitLab and thus slowing adoption of the platform.\n* PM to mention: @tlinz \n\n/cc @cgeisel @jhenkel1 @adiwolff",
      "noteable_type": "Epic",
      "author_id": 4810535,
      "created_at": "2022-10-12 18:20:29 UTC",
      "updated_at": "2022-11-15 13:35:10 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1133560939,
      "namespace_id": null
    },
    {
      "note": "I would like a total number of lines not including blank ones.",
      "noteable_type": "Epic",
      "author_id": 102482,
      "created_at": "2018-12-28 07:42:37 UTC",
      "updated_at": "2018-12-28 07:42:37 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5108f793d0913f211aafdac224479970ca294d54",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398118,
      "namespace_id": null
    },
    {
      "note": "+1\n\nIt's a great feature to have especially if you're to brag about how much work has been put into the project in a presentation or something.",
      "noteable_type": "Epic",
      "author_id": 709639,
      "created_at": "2018-11-13 21:05:40 UTC",
      "updated_at": "2022-08-17 11:03:45 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da4e7dafb86e0dd4fae3086a3eea68d9bcd6391c",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398104,
      "namespace_id": null
    },
    {
      "note": "Hi @markglenfletcher \nIt's very good things that showing percent,but lines number complete it's feature,doesn't?",
      "noteable_type": "Epic",
      "author_id": 37100,
      "created_at": "2018-11-13 22:12:35 UTC",
      "updated_at": "2018-11-13 22:12:35 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "257f948551df38fe027c50ec23aec702bafc686f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398111,
      "namespace_id": null
    },
    {
      "note": "i will join, i want see my ego",
      "noteable_type": "Epic",
      "author_id": 688008,
      "created_at": "2018-07-30 22:42:52 UTC",
      "updated_at": "2018-07-30 22:42:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6e5b2456c1f994e1d99360b4e68f23b3afd13dc6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398090,
      "namespace_id": null
    },
    {
      "note": "for a company that has thousands of repositories that's just completely ineffective",
      "noteable_type": "Epic",
      "author_id": 5476246,
      "created_at": "2020-02-21 09:13:09 UTC",
      "updated_at": "2022-08-17 11:03:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "70fea29bf396a4a31c2d645fb6e6b5c4b3a3f75e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398183,
      "namespace_id": null
    },
    {
      "note": "Is there a way to get this data using the API?",
      "noteable_type": "Epic",
      "author_id": 1861874,
      "created_at": "2018-08-14 11:06:43 UTC",
      "updated_at": "2018-08-14 11:06:43 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "9d31d1d9c19080234ecfab0e3158110c9f0b6bae",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398096,
      "namespace_id": null
    },
    {
      "note": "There is a certain lag.\nI suggest we do not subscribe back until admins fix it.",
      "noteable_type": "Epic",
      "author_id": 920678,
      "created_at": "2021-02-07 18:26:07 UTC",
      "updated_at": "2021-02-07 18:26:07 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "36181666e5d8716749e77e66647442be95e59362",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398255,
      "namespace_id": null
    },
    {
      "note": "Another customer inquiring if this function exists\nhttps://gitlab.zendesk.com/agent/tickets/161342",
      "noteable_type": "Epic",
      "author_id": 5791080,
      "created_at": "2020-06-19 09:50:05 UTC",
      "updated_at": "2020-06-19 09:50:05 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bfff8d8da11e5a9a5ca80af56bd3e99d82f1a54d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398210,
      "namespace_id": null
    },
    {
      "note": "any update about this feature ?",
      "noteable_type": "Epic",
      "author_id": 2346644,
      "created_at": "2019-01-13 08:43:23 UTC",
      "updated_at": "2019-01-13 08:43:23 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "75985767ee7bc2d6dcc6d57e1e92a8adc4ee42eb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398119,
      "namespace_id": null
    },
    {
      "note": "Silly me, I was looking for it under the repo API. That's a big help, thanks!",
      "noteable_type": "Epic",
      "author_id": 1861874,
      "created_at": "2018-08-14 11:14:59 UTC",
      "updated_at": "2018-08-14 11:14:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a9b5ccc2df039e08a636a8108aef70fd4186ca72",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398101,
      "namespace_id": null
    },
    {
      "note": "Please add a chart with the SLOC metric, it is a metric more useful than the number of commits",
      "noteable_type": "Epic",
      "author_id": 1276118,
      "created_at": "2017-04-21 14:50:38 UTC",
      "updated_at": "2022-08-17 11:03:43 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": "",
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "35ba388f39241ee60b0ccb19fe65226c7cd784e1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398021,
      "namespace_id": null
    },
    {
      "note": "Customer would also like to track lines of code per developer.",
      "noteable_type": "Epic",
      "author_id": 4788291,
      "created_at": "2020-08-28 21:23:18 UTC",
      "updated_at": "2020-08-28 21:23:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b9b84808e244584cd829ddf063757dbdca273385",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398227,
      "namespace_id": null
    },
    {
      "note": "@wagnerpinheiro, [S]LOC metrics are rather old. They are not actual now (only in 80-90s they were). Your idea is pretty but only for developers ego. For really gentlemen customers GITLAB maybe have to improve their charts with different modern metrics. As example, for analyzing object-oriented languages they can add metric of Chidamber & Kemerer.",
      "noteable_type": "Epic",
      "author_id": 346483,
      "created_at": "2017-04-21 19:52:06 UTC",
      "updated_at": "2021-12-31 12:36:40 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": "",
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 346483,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "249a1a4c3ace54eb7fa6c5229267c7a9f89e24a2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398027,
      "namespace_id": null
    },
    {
      "note": "ZD ticket: https://gitlab.zendesk.com/agent/tickets/80860\n\nA Customer requested this feature. :)",
      "noteable_type": "Epic",
      "author_id": 695248,
      "created_at": "2017-08-03 18:07:12 UTC",
      "updated_at": "2017-08-03 18:07:12 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": "",
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6a2a7217d873f0e09801d8a239cfb9f919bc99f7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398041,
      "namespace_id": null
    },
    {
      "note": "This should not be moved to EE as the initial feature was added by the community.",
      "noteable_type": "Epic",
      "author_id": 1283330,
      "created_at": "2019-07-03 13:32:17 UTC",
      "updated_at": "2019-07-03 13:32:17 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "ec9e3edc42d4864d66cbcac4f7c17e434c95a41a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398147,
      "namespace_id": null
    },
    {
      "note": "As mentioned below, as long as we keep the history through a merge or copying over information, it sounds good to close this with an update @valexieva :)",
      "noteable_type": "Epic",
      "author_id": 4158075,
      "created_at": "2019-07-08 09:36:18 UTC",
      "updated_at": "2019-07-08 09:36:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "857249c11774e83eb5f2b29d7ac4910bb7537a0d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398150,
      "namespace_id": null
    },
    {
      "note": "My developer ego gives +1 for this stats. I think, if you count the lines anyway, it might be no problem to offer different stats as options, because the counting might be the most expensive part anyway. \n\n*Yeah* for looking at your developer productivity in numbers. :-)",
      "noteable_type": "Epic",
      "author_id": 491329,
      "created_at": "2019-04-09 09:10:04 UTC",
      "updated_at": "2019-04-09 09:10:04 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "78be7669f40d747367e3d06e9819384a1a705b66",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398124,
      "namespace_id": null
    },
    {
      "note": "Customer interested in this feature. https://gitlab.my.salesforce.com/0016100000W2eBo (Internal link)",
      "noteable_type": "Epic",
      "author_id": 4587928,
      "created_at": "2019-12-10 19:56:19 UTC",
      "updated_at": "2019-12-10 19:56:19 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3c98dd928b5e8994b18b71557caad27c29571e73",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398179,
      "namespace_id": null
    },
    {
      "note": "My company is a Premium customer - we would really like to have this and even more metrics regarding type of language like number of components, files, etc.",
      "noteable_type": "Epic",
      "author_id": 5291964,
      "created_at": "2021-11-02 16:11:49 UTC",
      "updated_at": "2021-11-02 16:11:49 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "f62be4cd63e9f26b307bdb5c8612fedb09249cb6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398355,
      "namespace_id": null
    },
    {
      "note": "@cupini I'm tagging @ljlane who is the PM for gitlab~10046106",
      "noteable_type": "Epic",
      "author_id": 4376883,
      "created_at": "2021-04-28 00:09:12 UTC",
      "updated_at": "2022-08-17 11:03:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "71c57bb879d7f04a6e5cb214ad632998019c4f34",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398283,
      "namespace_id": null
    },
    {
      "note": "Another gitlab~2278657 Customer  interested in this feature [Internal Link](https://gitlab.my.salesforce.com/0014M00001kHlpn)\n\ncc/ @sarahwaldner",
      "noteable_type": "Epic",
      "author_id": 5250128,
      "created_at": "2021-10-18 19:30:27 UTC",
      "updated_at": "2022-08-17 11:03:53 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8fbd49178acc3cb10b6e51f4e1f07208c85aa057",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398352,
      "namespace_id": null
    },
    {
      "note": ":bell:  Hello GitLab community! We are currently recruiting for some interviews on this topic, and would love some of you to participate. It will be a 30 minute interview, and **you will be compensated $60USD** (or local equivalent) for your time.\n\nIf you're interested, please complete the [consent form found here](https://gitlab.fra1.qualtrics.com/jfe/form/SV_7ai4v9Jlzk9MVPo). Interviews will start next week. We look forward to speaking with you!\n\n/cc @tlinz",
      "noteable_type": "Epic",
      "author_id": 10060155,
      "created_at": "2022-09-22 17:54:28 UTC",
      "updated_at": "2023-04-04 06:49:31 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bc21177b5a96a4076ae5e69964c76a5d9d845016",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1111110468,
      "namespace_id": null
    },
    {
      "note": ":wave: @shoyle1, to clarify:\n\n> The customer is looking to report the total line of code across all GitLab projects under their namespace.\n\nDoes that mean just the LoC or the LoC per language?\n\nAlso, how and why is having the LoC helpful to \n\n> to integrate tooling with GitLab to measure and track code coverage.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2022-11-15 13:35:10 UTC",
      "updated_at": "2022-11-15 13:35:10 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1172614438,
      "namespace_id": null
    },
    {
      "note": "@cgeisel @jhenkel1 Can you answer Torsten's question above? :point_up_2_tone1:",
      "noteable_type": "Epic",
      "author_id": 4810535,
      "created_at": "2022-11-15 19:53:31 UTC",
      "updated_at": "2022-11-15 19:53:31 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1173120208,
      "namespace_id": null
    },
    {
      "note": "@tlinz \n\n> Does that mean just the LoC or the LoC per language?\n\nThis was a request from their CISO, ideally, it'd be a breakdown of both, LoC and LoC per language.\n\n> Also, how and why is having the LoC helpful to integrate tooling with GitLab to measure and track code coverage?\n\nThe rationale behind it isn't tied to code coverage as much as it's tied to their need to understand their development environment at a macro level, as well as to be able to identify the needs of their org.",
      "noteable_type": "Epic",
      "author_id": 4810535,
      "created_at": "2022-11-15 20:01:28 UTC",
      "updated_at": "2022-11-15 20:01:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1173132842,
      "namespace_id": null
    },
    {
      "note": "@shoyle1 - did you check out this: https://gitlab.com/guided-explorations/ci-cd-plugin-extensions/ci-cd-plugin-extension-scc ? (referenced once way back in this issue)\n\nIt does all projects in an entire group hierarchy as you can see by this job log: https://gitlab.com/guided-explorations/ci-cd-plugin-extensions/ci-cd-plugin-extension-scc/-/jobs/835498365",
      "noteable_type": "Epic",
      "author_id": 164827,
      "created_at": "2022-11-15 20:40:44 UTC",
      "updated_at": "2022-12-13 22:57:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1173177828,
      "namespace_id": null
    },
    {
      "note": ":wave: @sheininger , to clarify:\n\n> Customer is trying to find a way to report the total line of code across all GitLab projects.\n\nDoes that mean just LoC or LoC per language?\n\nAlso, how and why is having the LoC helpful to\n\n> to integrate tooling with GitLab to measure and track code coverage.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2022-11-15 13:42:03 UTC",
      "updated_at": "2022-11-15 13:42:03 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5f48dd95dd52df69c4baf7a6a9eb4e87843a5249",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1172624756,
      "namespace_id": null
    },
    {
      "note": "Hi, I haven't heard anything back yet.\nDennis\nDennis Biringer | Principal Software EngineerPacific Defense Systems, LLC (PDS)Integrity Applications Incorporated535 Lipoa Parkway  Suite 101, Kihei HI, 96753dbiringer@integrity-apps.com(808) 214-0765\n\n[smime.p7s](/uploads/8f61843d29e748024aa271ecf9928eae/smime.p7s)",
      "noteable_type": "Epic",
      "author_id": 1512428,
      "created_at": "2018-04-12 01:49:05 UTC",
      "updated_at": "2018-04-12 01:49:05 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "9e661b5e4cf0caf6403d62dde028802da7682773",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398086,
      "namespace_id": null
    },
    {
      "note": "We also would like to see the total number of lines of code, files, etc. Thanks!",
      "noteable_type": "Epic",
      "author_id": 102482,
      "created_at": "2018-05-31 17:37:16 UTC",
      "updated_at": "2018-05-31 17:37:16 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "2548835cbc0cf57b61390bcc3093d952b94b0edb",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398088,
      "namespace_id": null
    },
    {
      "note": "We need more cowbell!",
      "noteable_type": "Epic",
      "author_id": 196721,
      "created_at": "2018-08-07 19:16:41 UTC",
      "updated_at": "2018-08-07 19:16:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3c2adbfddaaf0de70d917b7106efe20f37b07d6a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398091,
      "namespace_id": null
    },
    {
      "note": "@billclark agreed",
      "noteable_type": "Epic",
      "author_id": 2414870,
      "created_at": "2018-08-08 02:28:31 UTC",
      "updated_at": "2018-08-08 02:28:31 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "24f7ce58948f5a4498d5e03a20f558db68fcb7a3",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398093,
      "namespace_id": null
    },
    {
      "note": "@shellyniz Currently it's presented as a percentage via the API:\n- https://docs.gitlab.com/ce/api/projects.html#languages",
      "noteable_type": "Epic",
      "author_id": 419655,
      "created_at": "2018-08-14 11:08:24 UTC",
      "updated_at": "2022-08-17 11:03:45 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "af92814e06eb7ee7ab5c36e24ed012bb50aa914d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398100,
      "namespace_id": null
    },
    {
      "note": "+1",
      "noteable_type": "Epic",
      "author_id": 154953,
      "created_at": "2018-11-12 09:25:37 UTC",
      "updated_at": "2018-11-12 09:25:37 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "165231760ca43690172238422f842de16fb5776c",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398103,
      "namespace_id": null
    },
    {
      "note": "I don't see us getting to this anytime soon, but I'm happy to label this with gitlab-ce~1890178 for a community contribution. \n\nWe express languages as % of repo, might we also show the absolute LOC? The Charts page might be a sensible place to display this. See https://gitlab.com/gitlab-org/gitlab-ce/graphs/master/charts for an example. The project overview page could also work, we currently use a multi-colored horizontal line to represent this and show percentages there on mouseover.",
      "noteable_type": "Epic",
      "author_id": 1086520,
      "created_at": "2018-11-13 21:16:40 UTC",
      "updated_at": "2022-08-25 00:21:53 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 1086520,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a45d244a8dcf2eb16b9860ff176ad487074dc1b0",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2018-11-13 21:18:46 UTC",
      "internal": false,
      "id": 1067398106,
      "namespace_id": null
    },
    {
      "note": "Hi @jeremy\\_ \nDo you want to adding this feature with 'Lines Number'?And so 'Total Lines Number'?\nWhat's your opinion?",
      "noteable_type": "Epic",
      "author_id": 37100,
      "created_at": "2018-11-13 22:05:51 UTC",
      "updated_at": "2018-11-13 22:05:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0dcca9aa7f108dd8b2440889e0ee8e97724725c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398108,
      "namespace_id": null
    },
    {
      "note": "Just started to use gitlab, and this is one the first stats i hoped to see in the \"Charts\", however i was surprised it's missing :(",
      "noteable_type": "Epic",
      "author_id": 3219145,
      "created_at": "2018-12-22 10:59:20 UTC",
      "updated_at": "2019-06-10 15:03:10 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "2bc4e707bc1fec54baded5713c92ced6fe7f6c18",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398112,
      "namespace_id": null
    },
    {
      "note": "> Do you want to adding this feature with 'Lines Number'? And so 'Total Lines Number'? What's your opinion?\n\nI'd love to hear your proposal, but I think the Charts page may be an easy place to add this:\n\n![image](/uploads/e36946ba9cbe1973c462ca24b95aa780/image.png)\n\nWe could include a separate column for LOC on each row, and include a \"Total\" row at the bottom that displays the sum of the rows. What do you think?",
      "noteable_type": "Epic",
      "author_id": 1086520,
      "created_at": "2018-12-28 06:32:36 UTC",
      "updated_at": "2022-08-17 11:03:46 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 1086520,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0a0135054322a86b6e195d79478bfbb08dee0078",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2022-03-10 12:54:08 UTC",
      "internal": false,
      "id": 1067398115,
      "namespace_id": null
    },
    {
      "note": "Just so its stated explicitly, the language bar on the projects overview page is based on bytes. Iteration over each blob to count the number of lines will be quite expensive and to make it performant on gitlab.com scale will be quite the challenge :smile: Bytes are chosen as Git stores the size of each blob with its name. So if a blob has the path `path/to/file.rb` it can take the extension and detect it's Ruby. It already has the number of bytes, so it can move on.\n\nLines however is harder, as now you'd have to either iterate each blob each time, or be clever with caching combined with diffing, which in turn might lead to race conditions.\n\nThat all being said, this would require a new RPC to Gitaly, and gitaly-proto changes. Happy to review MRs there! :cat:",
      "noteable_type": "Epic",
      "author_id": 101578,
      "created_at": "2019-01-22 11:57:55 UTC",
      "updated_at": "2019-01-22 11:57:55 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cbbc15a067deed9b1dacafd314fa03a216cb7c20",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398120,
      "namespace_id": null
    },
    {
      "note": "Not sure if this helps anyone, but if you use GitBash (or linux terminal) and go into your local repo and type this command:\n`find . -not -path “*/.git/*” | xargs wc -l`\nYou get the total line counts. No extra things to install - just a bash command.",
      "noteable_type": "Epic",
      "author_id": 2223731,
      "created_at": "2019-03-06 17:41:51 UTC",
      "updated_at": "2019-03-06 17:41:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "24ea9310d1cd72f9ce883d4f8610e598881283df",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398121,
      "namespace_id": null
    },
    {
      "note": "this just counts the raw line number of the files treated as pieces of texts. I guess what people want here is more like a per-language breakdown.",
      "noteable_type": "Epic",
      "author_id": 2438931,
      "created_at": "2019-03-06 18:07:06 UTC",
      "updated_at": "2019-03-06 18:07:06 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "01e42a7c17e4409f530b6ac88178d506007b8c66",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398122,
      "namespace_id": null
    },
    {
      "note": "There is another possible way by using the git ls-files command with a file type filter.\n\n* Java example: `git ls-files *.java *.xml | xargs wc -l`\n* Ruby example: `git ls-files *.rb Rakefile Gemfile | xargs wc -l`\n\nOr whatever files you want to include in your count. It can also works in subfolders to provide counts of just the contents of that folder.",
      "noteable_type": "Epic",
      "author_id": 2814876,
      "created_at": "2019-03-06 18:22:22 UTC",
      "updated_at": "2022-08-17 11:03:46 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c091188c51d65b36b23a94b9924e1f477bcb7be",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398123,
      "namespace_id": null
    },
    {
      "note": "This is not graphical and not included in gitlab, but it serves my interest totally. Also it might be a good starting point for Gitlab's implementation: \n\nhttps://github.com/AlDanial/cloc\n\nUse `cloc --vcs git` to count only watched files in a git repository.",
      "noteable_type": "Epic",
      "author_id": 491329,
      "created_at": "2019-04-09 09:20:32 UTC",
      "updated_at": "2019-04-09 09:20:32 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fdbab1323898ce69e78555ebe572fd74efd6d5fa",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398125,
      "namespace_id": null
    },
    {
      "note": "Same here!",
      "noteable_type": "Epic",
      "author_id": 4122216,
      "created_at": "2019-06-10 15:03:10 UTC",
      "updated_at": "2019-06-10 15:03:10 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "2bc4e707bc1fec54baded5713c92ced6fe7f6c18",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398130,
      "namespace_id": null
    },
    {
      "note": "@aakriti.gupta, should we just close this one in favor of https://gitlab.com/gitlab-org/gitlab-ee/issues/12104, since it's a prerequisite?",
      "noteable_type": "Epic",
      "author_id": 3511154,
      "created_at": "2019-07-03 11:46:09 UTC",
      "updated_at": "2019-07-08 09:36:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "857249c11774e83eb5f2b29d7ac4910bb7537a0d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398140,
      "namespace_id": null
    },
    {
      "note": "If you do, make sure you somehow transfer the popularity and influence as well. \nThis issue has 2 years of (possible sparse) history and 300+ upvotes. \nThe newer one is month long. \n\nIt may make more sense to either transfer this one to EE, or merge the other one to here.",
      "noteable_type": "Epic",
      "author_id": 920678,
      "created_at": "2019-07-03 11:52:01 UTC",
      "updated_at": "2019-07-03 11:52:01 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fcbf03d609927ee794e2852ab3717c84bffa0a07",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398141,
      "namespace_id": null
    },
    {
      "note": "@dbogatov, yes, we will take everything from this one in account - it's planned for 12.2. Do you want to comment on https://gitlab.com/gitlab-org/gitlab-ee/issues/12104? What's your opinion?",
      "noteable_type": "Epic",
      "author_id": 3511154,
      "created_at": "2019-07-03 11:56:20 UTC",
      "updated_at": "2019-07-03 11:56:30 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 3511154,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5b0125b0b2775efc42ccce2f935fcc035ec3e0d0",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398145,
      "namespace_id": null
    },
    {
      "note": "Thanks @max-wittig for pointing out! The EE issue has more content, which will be available on group/instance level. We would like to move all analytics into one space in the top nav bar, so will be thinking through how to combine what is in cc now and the additional functionality we will be adding in ee. Any feedback is welcome!",
      "noteable_type": "Epic",
      "author_id": 3511154,
      "created_at": "2019-07-03 15:22:33 UTC",
      "updated_at": "2022-08-17 11:03:47 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "f760bbbd482890cdb1159b72be96ee6ba3b5c701",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398148,
      "namespace_id": null
    },
    {
      "note": "@valexieva I wrote a small script, which reports the languages an instance has by exporting prometheus metrics. Relying just on absolute values would make a lot more sense, than the approach that I'm using now. But I won't use absolute numbers, if `EE` is required for this.\n\nhttps://github.com/max-wittig/gitlab-languages\n\nI think it would be fine, if the Graph feature stays in EE, but it would be nice, if the API would return absolute numbers.",
      "noteable_type": "Epic",
      "author_id": 1283330,
      "created_at": "2019-07-08 14:35:04 UTC",
      "updated_at": "2022-08-17 11:03:47 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 1283330,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "ee16838b5f2e5cdf4fb077259013563b5fb9cedd",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2019-07-08 14:42:50 UTC",
      "internal": false,
      "id": 1067398151,
      "namespace_id": null
    },
    {
      "note": "Keeping this open until we complete: https://gitlab.com/gitlab-org/gitlab-ee/issues/13163. After that will close, the existing functionality will be available in CE, further functionality as per https://gitlab.com/gitlab-org/gitlab-ee/issues/12104 in EE.",
      "noteable_type": "Epic",
      "author_id": 3511154,
      "created_at": "2019-08-01 13:19:33 UTC",
      "updated_at": "2019-08-01 13:19:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "f3e381dce49fd308f8fdde5c7c3e157ede6a06c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398156,
      "namespace_id": null
    },
    {
      "note": "Hi, we have scheduled LOC plus language trends for 12.3 - please find here: https://gitlab.com/gitlab-org/gitlab-ee/issues/12104#note_194198775. We will also ensure that it's available for CE users in this issue: https://gitlab.com/gitlab-org/gitlab-ce/issues/65616 before we remove the https://gitlab.com/gitlab-org/gitlab-ce/-/graphs/master/charts",
      "noteable_type": "Epic",
      "author_id": 3511154,
      "created_at": "2019-08-05 10:11:06 UTC",
      "updated_at": "2019-08-05 10:11:06 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "f3000b79106a55ef8ba0b5cdbb004022fba9c314",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398160,
      "namespace_id": null
    },
    {
      "note": "This is moving back to the %\"Backlog\" for the reasons described in ZJ's [comment above](https://gitlab.com/gitlab-org/gitlab/issues/17800#note_214979038). We're absolutely accepting merge requests on this one, but the Manage stage needs to prioritize other areas at the moment.",
      "noteable_type": "Epic",
      "author_id": 1086520,
      "created_at": "2019-11-11 01:18:41 UTC",
      "updated_at": "2019-11-11 01:18:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "f8cbd82c57cde0be40306b60332a6e2a0c7330b2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398176,
      "namespace_id": null
    },
    {
      "note": "> Second, I would love to see some *absolute* data (number of files, lines, bytes).\n\nAs the description states, the goal is to understand what the bar means, and see some absolute data. @jeremy Would the MVC here be to simply report the number of bytes, since that's what we're measuring?",
      "noteable_type": "Epic",
      "author_id": 424775,
      "created_at": "2020-02-14 16:16:42 UTC",
      "updated_at": "2020-02-14 16:16:42 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3d4687d64d7cbef78db875e4b783da2edf385b93",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398180,
      "namespace_id": null
    },
    {
      "note": "Github provides this feature, it would be nice to be able to obtain comparable metrics from Gitlab as we are using both.\n\nOur use case to get these numbers is for figuring out the prevalence of code in any given language across our entire codebase to inform us with requirements for code analysis tools etc. \"90% of language Y in repository X\" without any context to the number is mostly a useless metric. We need to understand how much language Y there is in totality across our multiple SCM systems. Now i can only count how many repos have a given language in general which is not exactly the same thing.",
      "noteable_type": "Epic",
      "author_id": 5476246,
      "created_at": "2020-02-20 14:53:14 UTC",
      "updated_at": "2020-02-20 21:49:55 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "70fea29bf396a4a31c2d645fb6e6b5c4b3a3f75e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398181,
      "namespace_id": null
    },
    {
      "note": "@unitysipu \nI would say for your use case it is better to just create a tool that clones all the repos you want metrics on and runs cloc or a similar tool - https://www.npmjs.com/package/cloc\nHaving these metrics across groups/organizations in github and gitlab makes less sense to me than to provide some information about what powers a given project.",
      "noteable_type": "Epic",
      "author_id": 1612315,
      "created_at": "2020-02-20 21:49:55 UTC",
      "updated_at": "2020-02-20 21:49:55 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "70fea29bf396a4a31c2d645fb6e6b5c4b3a3f75e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398182,
      "namespace_id": null
    },
    {
      "note": "The amount of code often correlates with things like risk. It's sorta interesting from analysis point of view if you have projects that have 500, 5000, 500k or 5M lines of code. You may want to prioritize or categorize the big projects over the small ones (obviously that's not the full picture, depends on what that code is used for etc.). But just looking at our entire codebase / repositories from the top and knowing there's \"90% of PHP\" in some project without understanding there's a million lines of it doesn't really help. So while individual teams may have a good grasp of their project, somebody looking over our entire portfolio you need more information to figure out who you should get in touch with. Obviously you can also try to check the file size metrics etc. and try to filter out uninteresting file types or other similar cumbersome workarounds but it's just more work to land on data that could easily be provided by the platform directly.",
      "noteable_type": "Epic",
      "author_id": 5476246,
      "created_at": "2020-02-21 09:41:09 UTC",
      "updated_at": "2020-02-21 09:41:09 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "70fea29bf396a4a31c2d645fb6e6b5c4b3a3f75e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398184,
      "namespace_id": null
    },
    {
      "note": "Even if you have 1000 repos, it would still not be that much work to write a tool that accumulates all the information using the method I described, and you're going to get it a lot faster than by asking gitlab to add a feature. \nAs for expanding the scope of this issue to cover groups and organizations as a whole, I guess gitlab devs might consider that as an enterprise feature at some point.",
      "noteable_type": "Epic",
      "author_id": 1612315,
      "created_at": "2020-02-21 20:38:37 UTC",
      "updated_at": "2020-02-21 20:38:37 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "70fea29bf396a4a31c2d645fb6e6b5c4b3a3f75e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398186,
      "namespace_id": null
    },
    {
      "note": "Yes, *obviously* there are workarounds that require you to analyze all the source code yourself. That's not the point of this feature request. I see the conversation revolving around suggestions and local optimizations for individual teams / developers or the importance of the amount of code in context of individuals. I figured it's prudent to provide another point of view that may have an impact on the thinking of why it's important to have this implemented. There are other use cases for the LOC/Language metrics that can be of importance for somebody who is looking at your organization as a whole.",
      "noteable_type": "Epic",
      "author_id": 5476246,
      "created_at": "2020-02-24 08:36:12 UTC",
      "updated_at": "2020-02-24 08:36:12 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "70fea29bf396a4a31c2d645fb6e6b5c4b3a3f75e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398187,
      "namespace_id": null
    },
    {
      "note": "##### For person\nPeople expect it, since various metrics implemented in GitHub. At some point everyone just genuinely interested in those metrics even only for self-esteem. And it is frustrating to not find them on GitLab. And since GitHub made everyone think to have them out-of-the-box, people became lazy and don't want to pollute their work environment with some difficult code inspection tools that they will use once just because of curiosity. \n\n##### For big team\nIf you are working in a solid company with big code base, and you professionally perform code analysis and give consulting based on it, then it is ridiculous to do it on the basis of GitHub or GitLab, likely you will need to have more sophisticated special tool for it.\n\n##### Conclusion\nSo this feature is not a mandatory. In first place GitLab need to improve its role system, this is a real bummer:) But GitLab doesn't do it for 2 years, so probably they have more important tasks. I prefer to use GitHub because of role system and metrics.",
      "noteable_type": "Epic",
      "author_id": 635873,
      "created_at": "2020-02-24 13:32:31 UTC",
      "updated_at": "2022-08-17 11:03:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "169aad8d047c6d97e3b8f9ba105c5c0b483fe4a5",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398189,
      "namespace_id": null
    },
    {
      "note": "I disagree. It's absolutely not ridiculous at all to have _code metrics_ available in the source code repository you might use.\n\nAny external tool will have to analyse the code outside of the SCM makes the whole process inherently ineffective and slow by design. Gitlab (and github) already has the code inside it and therefore is in the best position to provide metrics and data on it. Furthermore, modern (sophisticated) code analysis tools _integrate directly_ with Github these days through Github applications, but even they cannot provide this data either without analyzing the entire codebase separately.\n\nWhile workarounds exist they are all bad in a large organization. I agree that it's clear this is not a priority based on the fact it's been open for two years, but also it's clear that the reasoning and discussion around this feature is very narrow and developer (ego) oriented.",
      "noteable_type": "Epic",
      "author_id": 5476246,
      "created_at": "2020-03-05 12:36:31 UTC",
      "updated_at": "2022-08-17 11:03:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "24531b18a816ede01c75d7a5ff13eb97b706a66b",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398196,
      "namespace_id": null
    },
    {
      "note": "Honestly, with that chain of argument: Why have a commit graph? You can do this locally on your git repo. Or why have a bugtracker? You can just install trac separately. Or why have a wiki? Haven't you heard of mediaWiki? And so on. \n\nFact is, that this is a standard feature that has many uses for individuals and companies (also for example if I actually will bother to contribute to a code base or if its not worth it because id have to learn X new languages).",
      "noteable_type": "Epic",
      "author_id": 4911777,
      "created_at": "2020-03-05 12:42:16 UTC",
      "updated_at": "2023-04-04 06:48:07 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 4911777,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a48a242dda15ad2428f0fdca39fc4efbfd2cb50b",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2021-09-17 20:10:44 UTC",
      "internal": false,
      "id": 1067398197,
      "namespace_id": null
    },
    {
      "note": "@dbogatov Thanks for the proposal. We'll just have to leave this open and see if it becomes a popular request.",
      "noteable_type": "Epic",
      "author_id": 419655,
      "created_at": "2017-04-19 04:14:52 UTC",
      "updated_at": "2017-04-19 04:14:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": "",
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "aa2972622a144d30aaf6cc2b0dcc4cd45da48549",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398018,
      "namespace_id": null
    },
    {
      "note": "@yachmenov_c_ I have to admit, I had to look up what Chidamber & Kemerer metrics were. And yes, I would love to see those metrics in GitLab.\n\n**However**, I feel like it is quite hard (or say, resource heavy) to implement those. Each language will have to provide a service to get OOP relations. We cannot derive those metrics just by parsing the text.\n\n**On the other side**, simple line counter per language (even the one which omits comments and empty lines) is relatively easy to implement.\n\nAs for developers' ego, I have to admit it would not mind seeing LOC metrics, but I am sure there are other reasons for these metrics.",
      "noteable_type": "Epic",
      "author_id": 920678,
      "created_at": "2017-04-21 20:00:14 UTC",
      "updated_at": "2022-08-17 11:03:43 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": "",
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": "",
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "249a1a4c3ace54eb7fa6c5229267c7a9f89e24a2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398032,
      "namespace_id": null
    },
    {
      "note": "Had a similar request. I was able to get this info by extracting the Gitlab backup repositories from a backup and unbundling everything then running the following utility on the directory.\r\n\r\nBut it would be nice to see this kind of information on a project / server admin level, just to provide an overview of things currently within GitLab user / admin interfaces.\r\n\r\nhttps://www.npmjs.com/package/cloc\r\n\r\n![image](/uploads/6ea6969380c6967141e3f1c2adcd9da2/image.png)",
      "noteable_type": "Epic",
      "author_id": 261290,
      "created_at": "2017-08-03 18:15:40 UTC",
      "updated_at": "2022-08-17 11:03:44 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": "",
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 261290,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bb47f7cc21d0fd458118535c9b813a3902578765",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2022-03-30 20:42:31 UTC",
      "internal": false,
      "id": 1067398053,
      "namespace_id": null
    },
    {
      "note": "This would be awesome!",
      "noteable_type": "Epic",
      "author_id": 239547,
      "created_at": "2017-09-29 02:34:59 UTC",
      "updated_at": "2017-09-29 02:34:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "925084971ad8ffed68edec0da77529ce0cf249fc",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398060,
      "namespace_id": null
    },
    {
      "note": "In order to get this request some attention, this issue has been marked as a potentially interesting proposal as it meets the following criteria:\n\n* Labelled as a feature proposal\n* More than 10 upvotes\n* Unscheduled (not associated with a milestone)\n\nThanks for your proposal!\n\n\n\n/cc @markglenfletcher",
      "noteable_type": "Epic",
      "author_id": 419655,
      "created_at": "2017-11-18 04:31:32 UTC",
      "updated_at": "2017-11-18 04:31:32 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7c5d305df45d90ed7cf425e2a89cba6d246869d9",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398063,
      "namespace_id": null
    },
    {
      "note": "This is getting popular\n\n@DouweM ~\"Accepting Merge Requests\" for this one?",
      "noteable_type": "Epic",
      "author_id": 419655,
      "created_at": "2017-11-18 10:51:37 UTC",
      "updated_at": "2017-11-18 10:51:37 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "e6ccc860caae795f6271b6af68b76958af39051a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398068,
      "namespace_id": null
    },
    {
      "note": "@markglenfletcher I think it may not be well defined enough yet for ~\"Accepting Merge Requests\" . We removed the repository language a while ago because it didn't perform well, so we'll need to figure out way to restore it without reintroducing the performance issue.\n\nThis is related to https://gitlab.com/gitlab-org/gitlab-ce/issues/40236 and https://gitlab.com/gitlab-org/gitlab-ce/issues/23931. \n\n/cc @jramsay",
      "noteable_type": "Epic",
      "author_id": 87854,
      "created_at": "2017-11-20 13:02:33 UTC",
      "updated_at": "2017-11-20 13:02:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "eaba001590b450c8de3d1b76c52df548ce2934b6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398073,
      "namespace_id": null
    },
    {
      "note": "If we can provide a foundation in gitlab-ce#23931 that computes the language stats without performance, we could definitely open this up for ~\"Accepting Merge Requests\"",
      "noteable_type": "Epic",
      "author_id": 1187333,
      "created_at": "2017-11-21 15:16:35 UTC",
      "updated_at": "2017-11-21 15:17:11 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 1187333,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5509a8169ad72aee3ac5fe662017f4a8650b1694",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398077,
      "namespace_id": null
    },
    {
      "note": "Having the LOC in the table with the language breakdown and percentage would be great.",
      "noteable_type": "Epic",
      "author_id": 1512428,
      "created_at": "2018-04-11 02:26:59 UTC",
      "updated_at": "2018-04-11 02:26:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "dd21b8ef67e83e1fb5e74d7756ec189416cac688",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398080,
      "namespace_id": null
    },
    {
      "note": "Hello,\n\nDisplay the LOC in the chart would be a very nice feature :slight_smile: \n\nAny update about this ?\n\nThank you very much.",
      "noteable_type": "Epic",
      "author_id": 2182793,
      "created_at": "2018-04-11 07:59:55 UTC",
      "updated_at": "2018-04-11 07:59:55 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7cdb7ea5dad1765d300a84c23c639f8b12b20e6e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398082,
      "namespace_id": null
    },
    {
      "note": "Gold customer requesting this feature: https://gitlab.zendesk.com/agent/tickets/154631 with a slight twist: they'd like to see the number of lines by group/sub-group.",
      "noteable_type": "Epic",
      "author_id": 786106,
      "created_at": "2020-04-24 18:02:36 UTC",
      "updated_at": "2022-08-17 11:03:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 786106,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "27416ac89423174581c013da3fea3385a99fdff9",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2022-03-30 20:46:35 UTC",
      "internal": false,
      "id": 1067398202,
      "namespace_id": null
    },
    {
      "note": "It's not per _language_ but the following rails console snippet will give you an estimate of number of lines per `Project` on a self-managed instance where the `git-data` is on a partition or directly attached volume.\n\nIt can break a bit if there's no `master` branch or if a repository for some reason doesn't have a `HEAD`, so it's not at all bullet-proof.\n\n```ruby\nheaders = ['path', 'lines','archived?']\nreport_file = Tempfile.new(['project_lines','.csv'])\n\nCSV.open(report_file.path, \"wb\") do |csv|\ncsv << headers\n   Project.all.each do |p|\n      output = `/opt/gitlab/embedded/bin/git -C #{p.repository.path} ls-tree --full-tree -r HEAD --name-only | xargs -I '$' /opt/gitlab/embedded/bin/git -C #{p.repository.path} show master:$ | wc -l`\n      csv << [p.full_path, Integer(output),p.archived?]\n   end; nil\nend\n\nreport_file.close\n```",
      "noteable_type": "Epic",
      "author_id": 786106,
      "created_at": "2020-04-27 23:51:14 UTC",
      "updated_at": "2020-04-27 23:51:22 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 786106,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "88e1e1c1a5f37e28910fe2355743dc0908043e0a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398205,
      "namespace_id": null
    },
    {
      "note": "Ultimate customer here: we compile this data periodically for use by the C-suite and even if the absolute numbers are representative of byte counts it is easy enough for me to use an estimate of bytes per line to get what I need.\n\nThe key is that I have nothing without absolute numbers.\n\nAlso, please consider the non-gitlab.com use case. Perhaps on our hosted instance we would be able to opt-in to a feature like this if it were available and we can decide for ourselves if the performance is acceptable.",
      "noteable_type": "Epic",
      "author_id": 2973161,
      "created_at": "2020-06-19 15:58:42 UTC",
      "updated_at": "2022-08-17 11:03:49 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "f36cc6850ea7854dd35fe6e001bcc88a7c43e704",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398211,
      "namespace_id": null
    },
    {
      "note": "Ultimate customer requesting this feature: https://gitlab.my.salesforce.com/0016100001FRuq0\n\nCustomer would like to see number of lines of code per language excluding comments. \n\n/cc @npost",
      "noteable_type": "Epic",
      "author_id": 4788291,
      "created_at": "2020-07-30 01:30:33 UTC",
      "updated_at": "2022-08-17 11:03:49 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b9b84808e244584cd829ddf063757dbdca273385",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398220,
      "namespace_id": null
    },
    {
      "note": "I am proposing in another issue to update an existing open source tool to add MBs of code to the reports.\n\nThis is related to helping customers (and prospects) be able to estimate the long term costs of security scanning solutions that charge by lines or MBs of code.\n\nIf the tool were a CI stage, but GitLab could receive and parse the report to a UI - then the compute for this would only performed for and paid by customers who want the counts.\n\nhttps://gitlab.com/gitlab-org/gitlab/-/issues/233018",
      "noteable_type": "Epic",
      "author_id": 164827,
      "created_at": "2020-07-31 00:05:45 UTC",
      "updated_at": "2020-08-31 13:21:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 164827,
      "type": "DiscussionNote",
      "position": "{}",
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398222,
      "namespace_id": null
    },
    {
      "note": "The developer of scc responded to proposals to update the code as desired. Resultant code is in this blog article: https://acloudguru.com/blog/engineering/how-much-code-do-i-have-a-devsecops-story and being worked into this working example for GitLab CI CD: https://gitlab.com/guided-explorations/ci-cd-plugin-extensions/ci-cd-plugin-extension-scc",
      "noteable_type": "Epic",
      "author_id": 164827,
      "created_at": "2020-08-31 13:21:18 UTC",
      "updated_at": "2022-08-17 11:03:49 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398228,
      "namespace_id": null
    },
    {
      "note": "@DarwinJS the blocker for us on this feature is a line-counting capability in Gitaly.  I noticed that [SCC](https://github.com/boyter/scc) is written in Go, as Gitaly is.  Seems like that could be a very happy coincidence for us.  Did you happen to dive deep enough into SCC to have an opinion about how challenging it might be to integrate into Gitaly?\n\nNote for others: SCC is the line-counting software that Darwin recommended in his [blog post](https://acloudguru.com/blog/engineering/how-much-code-do-i-have-a-devsecops-story).",
      "noteable_type": "Epic",
      "author_id": 4512390,
      "created_at": "2020-09-07 17:27:21 UTC",
      "updated_at": "2020-09-07 17:27:21 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398229,
      "namespace_id": null
    },
    {
      "note": "@djensen - I settled on SCC, rather than the long standing CLOC (Perl) due to it being written in a modern language and, if the author was not able to add features, the hopes that someone at GitLab would.\n\nI did dive into the internals, but don't know enough about Go Lang nor Gitaly to comment on whether the two would tango well.\n\nIt is lightning fast - which I noticed when processing www-gitlab-com.\n\nHave you thought of this as a sidekiq process - not sure how good it would be at doing per-commit differentials in Gitaly and doing the full repo in Gitaly may be a lot of excess compute if it does it every commit?",
      "noteable_type": "Epic",
      "author_id": 164827,
      "created_at": "2020-09-08 13:21:14 UTC",
      "updated_at": "2020-09-08 13:21:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398231,
      "namespace_id": null
    },
    {
      "note": "Just like source control, you don't need to count all the lines of code in a repo every time.\n\nOnce you have a known count of lines at a specific commit, you can just track the diffs after that to increase/decrease line count for specific code and languages.",
      "noteable_type": "Epic",
      "author_id": 2973161,
      "created_at": "2020-09-08 17:58:50 UTC",
      "updated_at": "2020-09-08 17:58:50 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398232,
      "namespace_id": null
    },
    {
      "note": "Yes I understand.\nWhat I'm trying to indicate is that the machinations to isolate net new lines and net removed lines of code may be more processing load than simply scheduling scc weekly?  Especially given the speed of scc.\n\nIf that might be true, the question is how timely do line counts need to be?\n\nI don't know the answer - just highlighting that if line counts don't need to be up to the minute, there might be a cheaper way to do it.  It would also possibly allow direct dependency on scc, rather than forking it.",
      "noteable_type": "Epic",
      "author_id": 164827,
      "created_at": "2020-09-08 18:33:40 UTC",
      "updated_at": "2020-09-08 18:33:40 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398233,
      "namespace_id": null
    },
    {
      "note": "> It is lightning fast\n\nYes it is!  It crunches the entire gitlab repo in about 3 seconds on my machine ([results here](https://gitlab.com/-/snippets/2013041)).  Not bad.\n\n> how timely do line counts need to be?  I don't know the answer\n\nMe either, but let's guess it needs to be somewhere between monthly and daily.  (Hourly and commitly seem unnecessarily specific.)  Maybe we could start at monthly and see how it goes?",
      "noteable_type": "Epic",
      "author_id": 4512390,
      "created_at": "2020-09-08 20:08:48 UTC",
      "updated_at": "2020-09-08 20:08:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398234,
      "namespace_id": null
    },
    {
      "note": "Or, maybe proponents could weigh in on the frequency.\n\nI feel a compromise might be:\n\n * maintain a _count per branch_ (which could be very helpful anyway)\n * trigger a count on the _first commit_ of any new branch (or make counting an option?)\n * update all branch counts _monthly_ (or, only branches that have a flag indicating that they should be counted)\n\nThat way, the regular update frequency is down to one count per project branch, per month, and Developers can force a new count by pushing a new branch (perhaps they might have a special case to have up-to-the-commit counts).",
      "noteable_type": "Epic",
      "author_id": 5791080,
      "created_at": "2020-09-08 20:50:47 UTC",
      "updated_at": "2020-09-08 20:54:32 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 5791080,
      "type": "DiscussionNote",
      "position": "{}",
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398237,
      "namespace_id": null
    },
    {
      "note": "@mlockhart in the context of an MVC I think we need to stick with measuring the default branch only, because that's what the Repository Analytics page is currently doing ([example](https://gitlab.com/gitlab-org/gitlab/-/graphs/master/charts)).\n\nOn the bright side, it seems the existing byte counts are being [updated on push](https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/services/git/branch_push_service.rb#L54).  That makes me hopeful we could match that frequency with line counts.  So let's tentatively say the MVC would be updated pushly (instead of monthly like I proposed above).",
      "noteable_type": "Epic",
      "author_id": 4512390,
      "created_at": "2020-09-08 21:22:29 UTC",
      "updated_at": "2022-08-17 11:03:50 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398239,
      "namespace_id": null
    },
    {
      "note": "In addition, I would like to understand uses cases for getting as fine as \"per branch\" code counts - what would someone use this for and how often?  If it is very occasional and/or for a bespoke purpose, they could just run scc themselves on a local copy.",
      "noteable_type": "Epic",
      "author_id": 164827,
      "created_at": "2020-09-10 14:09:39 UTC",
      "updated_at": "2020-09-10 14:09:39 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "da067c13fb3fa873f3086f6e101c361fc8c7d661",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398241,
      "namespace_id": null
    },
    {
      "note": "Starter customer requesting this feature in https://gitlab.zendesk.com/agent/tickets/172665",
      "noteable_type": "Epic",
      "author_id": 786106,
      "created_at": "2020-09-21 22:56:51 UTC",
      "updated_at": "2020-09-21 22:56:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a6d634828d666969ace6f97fa2005ccae12a8d0a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398242,
      "namespace_id": null
    },
    {
      "note": "[OneDev](https://github.com/theonedev/onedev) calculates SLOC per languages and display the trends over time which is quite interesting. An example trends here:\n\nhttps://code.onedev.io/projects/react/stats/lines\n\nOne can hover mouse on the trend to show SLOC by day. The initial calculation for a large repo such as Linux takes about 30 min, and the result will be cached. Subsequent updates for new commits will be fairly fast based on cache. Below is the logic for calculation if someone is interested:\n\nhttps://github.com/theonedev/onedev/blob/main/server-core/src/main/java/io/onedev/server/infomanager/DefaultCommitInfoManager.java",
      "noteable_type": "Epic",
      "author_id": 7978344,
      "created_at": "2021-01-12 14:30:35 UTC",
      "updated_at": "2021-01-12 14:30:35 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "ff175da6e12df7dae92e0ac849314529faf998b3",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398251,
      "namespace_id": null
    },
    {
      "note": "how come I can still receive notifications even if I unsubscribed???",
      "noteable_type": "Epic",
      "author_id": 2438931,
      "created_at": "2021-02-07 18:19:32 UTC",
      "updated_at": "2021-02-07 18:26:07 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "36181666e5d8716749e77e66647442be95e59362",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398253,
      "namespace_id": null
    },
    {
      "note": "@markglenfletcher please fix this ASAP.\nI am surprised Gitlab has no protection against this crap.\nYou will end up with people massively unsubscribing at best.\n\nP.S. This idiot keeps recreating accounts.\nA simple post factum ban will not work.",
      "noteable_type": "Epic",
      "author_id": 920678,
      "created_at": "2021-02-07 18:22:33 UTC",
      "updated_at": "2021-12-21 12:57:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 920678,
      "type": null,
      "position": "{}",
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "77603a87b4b3f20bdd32a0306f23d74e33fd6003",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398254,
      "namespace_id": null
    },
    {
      "note": "A gitlab~2278657 ~\"self-managed\" ~customer is interested in this feature.\n\n* Link to request:  https://gitlab.my.salesforce.com/0016100001Eo1h0\n* Why interested: Want to report on all repos (instance-level) for languages used in repos for tools info\n* Current solution for this problem: Have to scrape every project to get languages used but not per-lines\n* Impact to the customer of not having this: Workarounds are nice but would be nice to get an instance-view instantly \n* PM to mention: @stkerr",
      "noteable_type": "Epic",
      "author_id": 3288671,
      "created_at": "2021-04-27 23:22:40 UTC",
      "updated_at": "2021-04-28 00:09:12 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "71c57bb879d7f04a6e5cb214ad632998019c4f34",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398280,
      "namespace_id": null
    },
    {
      "note": "@sarahwaldner I actually think this should go to gitlab~10309854 , WDYT?",
      "noteable_type": "Epic",
      "author_id": 4156460,
      "created_at": "2021-05-19 16:42:26 UTC",
      "updated_at": "2022-08-17 11:03:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "71c57bb879d7f04a6e5cb214ad632998019c4f34",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398286,
      "namespace_id": null
    },
    {
      "note": "I think that makes a lot of sense @ogolowinski",
      "noteable_type": "Epic",
      "author_id": 4447217,
      "created_at": "2021-05-19 19:34:28 UTC",
      "updated_at": "2021-05-19 19:34:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "71c57bb879d7f04a6e5cb214ad632998019c4f34",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398289,
      "namespace_id": null
    },
    {
      "note": "@ogolowinski Yep, I agree. Thanks for changing the group.\n\nThis is going to remain in the backlog as it is not our current focus and based on [details](https://gitlab.com/gitlab-org/gitlab/-/issues/17800#details) in the description, LOE will be quite high. Thanks.\n\ncc @cupini",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2021-05-19 20:16:08 UTC",
      "updated_at": "2021-05-19 20:16:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "71c57bb879d7f04a6e5cb214ad632998019c4f34",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398291,
      "namespace_id": null
    },
    {
      "note": "An Ultimate customer is interested in this feature.\n* Link to request: https://gitlab.my.salesforce.com/00161000014HWYo\n* Why interested: They have a need to report LoC for their Apex repos.\n* Current solution for this problem: Have to scrape every project to get languages used but not per-lines\n* Impact to the customer of not having this: We have not found an adequate workaround\n* PM to mention: @sarahwaldner",
      "noteable_type": "Epic",
      "author_id": 5213201,
      "created_at": "2021-05-20 21:51:27 UTC",
      "updated_at": "2021-05-26 22:16:07 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b9e87c53499f869fd4044e0562862914c7e6eb9d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398299,
      "namespace_id": null
    },
    {
      "note": "Thanks @bmiller1 the context is helpful.\n\nThis is in the %\"Backlog\" for awareness",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2021-05-26 22:16:07 UTC",
      "updated_at": "2021-05-26 22:16:07 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b9e87c53499f869fd4044e0562862914c7e6eb9d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398308,
      "namespace_id": null
    },
    {
      "note": "@sarahwaldner FYI - Since Apex code is essentially extended Java with a few accompanying .xml metadata files, my customer was able to run `scc –count-as cls:java` to interpret Apex .cls files as Java.  scc understands the comment and syntax structure of Java and was able to correctly return the LOC.",
      "noteable_type": "Epic",
      "author_id": 5213201,
      "created_at": "2021-05-27 21:51:43 UTC",
      "updated_at": "2022-08-17 11:03:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b9e87c53499f869fd4044e0562862914c7e6eb9d",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398310,
      "namespace_id": null
    },
    {
      "note": "Ultimate customer requesting this feature: https://gitlab.my.salesforce.com/0014M00001lc3Cc\n\nCustomer would like to calculate vulnerabilities per number of lines of code in order to measure issue/vulnerability density. \n\n/cc @sarahwaldner",
      "noteable_type": "Epic",
      "author_id": 4788291,
      "created_at": "2021-06-14 19:45:23 UTC",
      "updated_at": "2021-06-14 21:56:29 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8fa6477866010a9f40da3de9cc08155378f3b320",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398315,
      "namespace_id": null
    },
    {
      "note": "Thanks @bgadberry \n\nIt seems like with the additional customer problem you need solved that there should be another issue for this...?\n\n> Customer would like to calculate vulnerabilities per number of lines of code in order to measure issue/vulnerability density.\n\nThis does not seem directly related. Correct me if I am wrong!",
      "noteable_type": "Epic",
      "author_id": 3796140,
      "created_at": "2021-06-14 21:56:29 UTC",
      "updated_at": "2021-06-14 21:56:29 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8fa6477866010a9f40da3de9cc08155378f3b320",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398323,
      "namespace_id": null
    },
    {
      "note": "@sarahwaldner You're correct. I was thinking the customer could calculate the metric manually once number of lines of code is made available. On second thought, I think we can calculate vulnerabilities per byte today. I'll report back if that suffices.\n\n@tmccaslin Is this vulnerability per byte/line of code metric something we've considered uncovering as part of SAST?",
      "noteable_type": "Epic",
      "author_id": 4788291,
      "created_at": "2021-06-14 23:07:54 UTC",
      "updated_at": "2021-06-14 23:07:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8fa6477866010a9f40da3de9cc08155378f3b320",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398328,
      "namespace_id": null
    },
    {
      "note": "No it is not. That would be something for @matt_wilson to consider with the security dashboard.",
      "noteable_type": "Epic",
      "author_id": 5329074,
      "created_at": "2021-06-14 23:16:10 UTC",
      "updated_at": "2022-08-17 11:03:53 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8fa6477866010a9f40da3de9cc08155378f3b320",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398330,
      "namespace_id": null
    },
    {
      "note": "@bgadberry The customer may be able to pull the necessary vulnerability count information from the existing GraphQL API. I've never heard a request for this functionality before and don't have any plans to include it in the Security Dashboard reports so pulling the data and creating their own reports is the best way forward if this is needed.",
      "noteable_type": "Epic",
      "author_id": 4708748,
      "created_at": "2021-06-14 23:42:48 UTC",
      "updated_at": "2022-08-17 11:03:53 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8fa6477866010a9f40da3de9cc08155378f3b320",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398336,
      "namespace_id": null
    },
    {
      "note": "A premium/silver customer has requested for this feature over support ticket: https://gitlab.zendesk.com/agent/tickets/220808 (internal link)\n\nIn particular they'd like an ability to query statistics about lines of code per detected language type, within each, and across all repositories under a group.",
      "noteable_type": "Epic",
      "author_id": 7536567,
      "created_at": "2021-06-26 16:55:39 UTC",
      "updated_at": "2021-12-21 13:07:11 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 7536567,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "ea3debf890d6cd7015d00ab72153364e0db87daf",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2021-06-26 16:56:57 UTC",
      "internal": false,
      "id": 1067398339,
      "namespace_id": null
    },
    {
      "note": "Another Premium customer is interested in this feature: [#223248](https://gitlab.zendesk.com/agent/tickets/223248)",
      "noteable_type": "Epic",
      "author_id": 7272738,
      "created_at": "2021-07-09 11:30:51 UTC",
      "updated_at": "2021-07-09 11:30:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "36bafcacfa72574f26ca315a9fefd80ffda3515a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398341,
      "namespace_id": null
    },
    {
      "note": "- SF: https://gitlab.my.salesforce.com/0016100000Ut0JyAAJ\n- ZD: https://gitlab.zendesk.com/agent/tickets/254826\n\ngitlab~3207279 customer is interested in this feature.",
      "noteable_type": "Epic",
      "author_id": 5537005,
      "created_at": "2021-12-21 18:42:12 UTC",
      "updated_at": "2021-12-21 18:42:12 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "616ce8f6438d2c4cdaef57312fdf0a16b35ca094",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398358,
      "namespace_id": null
    },
    {
      "note": "A Premium customer is interested in this feature.\n\nZD: https://gitlab.zendesk.com/agent/tickets/284853\n\nThe workaround mentioned [here](https://gitlab.com/gitlab-org/gitlab/-/issues/17800#note_332427265) unfortunately is hitting this error at the moment. I wonder if you have thoughts about this @lyle ?\n\n```\nTraceback (most recent call last):\n3: from (irb):3\n2: from lib/gitlab/git/repository.rb:85:in `path'\n1: from lib/gitlab/gitaly_client/storage_settings.rb:65:in `legacy_disk_path'\nGitlab::GitalyClient::StorageSettings::DirectPathAccessError (git disk access denied)\n```",
      "noteable_type": "Epic",
      "author_id": 10051186,
      "created_at": "2022-04-26 08:09:53 UTC",
      "updated_at": "2022-04-26 22:56:06 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cbac8df0a1482bbc5633d8b60b4703cd603c7911",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398383,
      "namespace_id": null
    },
    {
      "note": "Seems related to https://gitlab.com/gitlab-org/gitlab/-/issues/350080. This was always a bit of a hack, and relied on manually executing `git` commands directly on the repo.\n\nYou could take (and modify) the same core:\n\n`/opt/gitlab/embedded/bin/git -C #{p.repository.path} ls-tree --full-tree -r HEAD --name-only | xargs -I '$' /opt/gitlab/embedded/bin/git -C #{p.repository.path} show master:$ | wc -l` and run it directly on the command line given a list of paths generated from `rails`\n\nThere's a bunch of caveats there though:\n- `master` is not necessarily the default branch name (we transitioned in GitLab to `main` some time ago)\n- It relies on counting the actual number of lines in a file `wc -l` and does it for every file in a repo. This will include licenses, headers, empty space and so on.\n\nThere are some additional thoughts in https://gist.github.com/mandiwise/dc53cb9da00856d7cdbb that have iterated on my approach from two years ago :sweat:",
      "noteable_type": "Epic",
      "author_id": 786106,
      "created_at": "2022-04-26 22:56:06 UTC",
      "updated_at": "2022-04-26 22:56:06 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cbac8df0a1482bbc5633d8b60b4703cd603c7911",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398387,
      "namespace_id": null
    },
    {
      "note": "https://gitlab.com/gitlab-org/gitlab/-/graphs/master/charts is that what it looks today? seems like a regression.",
      "noteable_type": "Epic",
      "author_id": 882141,
      "created_at": "2022-05-18 13:57:42 UTC",
      "updated_at": "2022-05-18 13:57:42 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0a0135054322a86b6e195d79478bfbb08dee0078",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398388,
      "namespace_id": null
    },
    {
      "note": "Yes, statistics counting total and per lang number of lines (in code files only) would be so nice and basic.  \nIgnore empty lines for me is optional. \n\nGet stats manually / locally for a git repo is not a problem. But this issue asks for the UI of gitlab. And this is what I need as well. \n\nhere a link to the current state: (older links above are expired)  \nhttps://gitlab.com/gitlab-org/gitlab/-/graphs/master/charts \n\nHere a link for more advanced stats ambitions:  \nhttps://www.openhub.net/p/gitlab\n\nedit: btw: If this is not happening since 5 years because of performance issues, then just calculate it once a week and show the calculation date next to it. I guess most people do not need per hour stats about n lines of code. For me even once per month would be enough. (And thus could be used for gitlab#12104 as well)",
      "noteable_type": "Epic",
      "author_id": 882141,
      "created_at": "2022-05-18 14:08:35 UTC",
      "updated_at": "2022-08-25 00:35:44 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 882141,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "74b77966a76e3a15bdac9b725fbe711050838c6a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2022-05-18 14:13:37 UTC",
      "internal": false,
      "id": 1067398394,
      "namespace_id": null
    },
    {
      "note": "1900 seat gitlab~3207279 [Customer](https://gitlab.my.salesforce.com/00161000002xBZQ) is interested in this feature.\n\n- Priority: gitlab~21832708  priority::\n- Why interested: Customer is trying to find a way to report the total line of code across all GitLab projects.\n- Problem they are trying to solve: Customer has some internal teams who are trying trying to integrate tooling with GitLab to measure and track code coverage. There’s a cost associated with expanding those other tools and without the ability to report the number of lines it's nearly impossible to estimate said cost.\n- Current solution for this problem: none\n- Impact to the customer of not having this: Inability to utilize other tools in conjunction with GitLab and thus slowing adoption of the platform.\n- Questions: Are they're any other workarounds for this, even at a manual reporting level? \n- PM to mention: @tlinz",
      "noteable_type": "Epic",
      "author_id": 4748523,
      "created_at": "2022-06-14 14:49:32 UTC",
      "updated_at": "2022-11-15 13:42:03 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5f48dd95dd52df69c4baf7a6a9eb4e87843a5249",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067398411,
      "namespace_id": null
    },
    {
      "note": "I promoted this to an epic so that I can add child issues to it.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2022-08-17 11:04:42 UTC",
      "updated_at": "2022-08-17 14:51:35 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "dafe4289f350a5aa4352a920764b3ea82d986f5f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067399273,
      "namespace_id": null
    },
    {
      "note": "Wow, the original issue disappeared from https://gitlab.com/gitlab-org/gitlab/-/issues/?sort=popularity&state=opened&first_page_size=20 :open_mouth: \n\nI know it is still #3 (as of 2022-08-17) on https://gitlab.com/gitlab-org/gitlab/-/issues/?sort=updated_desc&state=closed&first_page_size=20 :grinning: \n\n(Anyway thanks)",
      "noteable_type": "Epic",
      "author_id": 100770,
      "created_at": "2022-08-17 13:04:39 UTC",
      "updated_at": "2022-08-17 13:04:39 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "dafe4289f350a5aa4352a920764b3ea82d986f5f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067567426,
      "namespace_id": null
    },
    {
      "note": "Oh, I wasn't aware of this consequence of a promotion to an epic. Thanks for documenting that it was #3.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2022-08-17 13:33:28 UTC",
      "updated_at": "2022-08-17 13:33:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "dafe4289f350a5aa4352a920764b3ea82d986f5f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1067613533,
      "namespace_id": null
    },
    {
      "note": "Thanks for the mention, I definitely missed that above and have shared it with my customer. \n\nThat is a really quick and neat tool.",
      "noteable_type": "Epic",
      "author_id": 4810535,
      "created_at": "2022-12-13 23:01:05 UTC",
      "updated_at": "2022-12-13 23:01:05 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1208305871,
      "namespace_id": null
    },
    {
      "note": "Great. That's good to hear. Thanks.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-01-26 10:48:28 UTC",
      "updated_at": "2023-01-26 10:48:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1253590463,
      "namespace_id": null
    },
    {
      "note": "hey @tlinz apologies for just stumbling on this now, this should deliver on what we're needing. Thanks!",
      "noteable_type": "Epic",
      "author_id": 8047255,
      "created_at": "2023-01-26 10:16:23 UTC",
      "updated_at": "2023-01-26 10:16:23 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1253516302,
      "namespace_id": null
    },
    {
      "note": "@tlinz correct, :smile:",
      "noteable_type": "Epic",
      "author_id": 8047255,
      "created_at": "2023-01-26 10:39:29 UTC",
      "updated_at": "2023-01-26 10:39:29 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1253571512,
      "namespace_id": null
    },
    {
      "note": ":wave: @jhenkel1, I suppose by this, you mean the extension that @DarwinJS mentioned - right?",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-01-26 10:38:03 UTC",
      "updated_at": "2023-01-26 10:38:03 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "7276d0dc31fcc8a1f0db8e16174b40bf36764c45",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1253568537,
      "namespace_id": null
    },
    {
      "note": ":arrow_double_up: :heavy_plus_sign: :heavy_plus_sign: \n\nI wouldn't normally add a \"me too\" reply where an emoji reaction should be enough but in this case I think the comment deserves a lot of emphasis! **Whenever I am asked to quantify our code by language the request comes from management/executives who are looking for org-wide summary data they can supply to customers or auditors.**\n\nStepping back to meta considerations, I believe there is an underlying assumption in many GitLab features that gitlab.com users are mainly individuals and/or open source users while enterprise use cases are covered by private, self-hosted instances. We need to get past this assumption.",
      "noteable_type": "Epic",
      "author_id": 2973161,
      "created_at": "2023-08-01 21:17:15 UTC",
      "updated_at": "2023-08-01 21:17:15 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "2caf6adcc2eccc7829098dbd829d3f1a80f41da4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1496216143,
      "namespace_id": null
    },
    {
      "note": "After analysis of the demands in all the comments in this issue and [further profound research](https://gitlab.com/gitlab-org/gitlab/-/issues/371038), I come to the conclusion that there are two main asks:\n1. Count the number of lines of code per contributor\n2. Count the number of lines of code per language\n\nOur [research](https://gitlab.com/gitlab-org/gitlab/-/issues/371038) showed that the first one carries a risk for being abused as a false measure of contribution to a project or a group. We have heard from some interviewees that they had negative experiences when managers had access to such data during their performance reviews. Given this potential of a significant negative impact of such a metric on some users compared to a nice-to-have positive impact for many users, we have decided not to implement this false metric of contribution. The fact that this metric is common among competitors of GitLab isn't a good enough reason to offer this, too, especially as there is evidence that offering this could be hurt users and employers of these users.   \n\nOur [research](https://gitlab.com/gitlab-org/gitlab/-/issues/371038) showed that the second one is desirable to get a quick impression of a project that one doesn't know, yet. For instance to quickly know if one has the skillset to contribute to the project. However, it has also shown that while many said they would like to have that it is really a nice-to-have feature and that users have alternative ways to get a quick impression of a project such as looking at the distribution of languages of the project and browsing the directories. Given the large list of other unmet needs that we still have in ~\"Category:Source Code Management\" we have decided not to prioritize this currently. \n\nI want to thank you all for your feedback. All this was very helpful for this research. And I hope for your understanding of my decision. :bow:",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-07-07 20:07:18 UTC",
      "updated_at": "2023-07-31 12:40:13 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fe5c63f6383da467af18fc39e7d6e250007a2547",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1462211450,
      "namespace_id": null
    },
    {
      "note": "@tlinz - another important perspective is planning for \"Team Topologies\". If an organization can observe 15 languages of all types across 20 teams - they are going to have efficient teams in that area.\n\nIf an area has a tech stack that demands 25 languages for the identical code base / team structure - they will necessarily have either more people or longer cycle times when a headcount limited team must delve into parts of the codebase where they do not have familiarity.",
      "noteable_type": "Epic",
      "author_id": 164827,
      "created_at": "2023-07-31 12:40:13 UTC",
      "updated_at": "2023-07-31 15:36:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fe5c63f6383da467af18fc39e7d6e250007a2547",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1493749853,
      "namespace_id": null
    },
    {
      "note": "The critical use case that was missed in the analysis is the need to understand the overall landscape of your companys codebase, especially from security, tools licensing etc. point of view. So we need business level metrics for all code and individual repos. Looking at this from an individual repository perspective or developer perspective has been the bias in most of these discussions.",
      "noteable_type": "Epic",
      "author_id": 5476246,
      "created_at": "2023-07-31 11:30:42 UTC",
      "updated_at": "2023-08-16 16:17:01 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "2caf6adcc2eccc7829098dbd829d3f1a80f41da4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1493646713,
      "namespace_id": null
    },
    {
      "note": "An aspect not covered by your research: providing data for C-suite and/or board level executive decision making based on relative balance of language usage in a large number of projects related to an organization's top-level group.\n\nFor example, I am asked to produce a set of metrics annually for all-up reporting to our board regarding the state of our codebases. This is one of those metrics.\n\nI could also imagine critical use cases related to standards or contract compliance.\n\nI've implemented workarounds so far but a system-supported metric here would be most welcome.",
      "noteable_type": "Epic",
      "author_id": 2973161,
      "created_at": "2023-10-20 19:46:40 UTC",
      "updated_at": "2023-10-20 19:46:40 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "fe5c63f6383da467af18fc39e7d6e250007a2547",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1612960320,
      "namespace_id": 9970
    },
    {
      "note": "The following ~customer is interested in this capability\n\n* Subscription: ~\"GitLab Ultimate\"\n* Product: ~\"self-managed\" + Dedicated\n* Link to request: https://gitlab.my.salesforce.com/0016100000K8R8fAAF\n* Priority: ~\"customer priority::10\"\n* Why interested: Customer executives are looking for an instance-level amount of LoC stored by language to track their footprint and adoption with GitLab.\n* PM to mention: @derekferguson \n* CSM to mention: @jesswang_gitlab",
      "noteable_type": "Epic",
      "author_id": 12577608,
      "created_at": "2023-09-18 09:16:00 UTC",
      "updated_at": "2023-09-18 10:42:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": 12577608,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cfed47ff371d07c91d61941f021b0c29c67285e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-09-18 10:42:48 UTC",
      "internal": false,
      "id": 1562995086,
      "namespace_id": 9970
    },
    {
      "note": "Hi @manuelgrabowski, \n\nPlease, check out my [comment here](https://gitlab.com/groups/gitlab-org/-/epics/8589#note_1462211450). Also PM top mention is @derekferguson.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-09-18 10:41:02 UTC",
      "updated_at": "2023-09-18 10:41:02 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "027dc9ef858dc5b36d557a67ed3aa3ebcd939f8e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1563133551,
      "namespace_id": 9970
    },
    {
      "note": "The following ~customer is interested in this capability \n\n- Subscription: ~\"GitLab Premium\"\n- Product: ~\"self-managed\"\n- Link to request: https://gitlab.zendesk.com/agent/tickets/441666\n- Priority: ~\"customer priority::4\" \n- Why interested: Looking for an instance-level amount of LoC stored\n- CSM to mention: @sbrienen",
      "noteable_type": "Epic",
      "author_id": 10339034,
      "created_at": "2023-08-21 16:41:17 UTC",
      "updated_at": "2023-09-18 10:41:02 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "027dc9ef858dc5b36d557a67ed3aa3ebcd939f8e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1521546769,
      "namespace_id": 9970
    },
    {
      "note": "@jesswang_gitlab,\n\nPlease, check out my [comment here](https://gitlab.com/groups/gitlab-org/-/epics/8589#note_1462211450). Also PM top mention is @derekferguson.",
      "noteable_type": "Epic",
      "author_id": 10822493,
      "created_at": "2023-09-18 10:41:22 UTC",
      "updated_at": "2023-09-18 10:41:22 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 584663,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cfed47ff371d07c91d61941f021b0c29c67285e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1563134049,
      "namespace_id": 9970
    }
  ],
  "note_authors": [
    {
      "id": 346483,
      "username": "yachmenov_c_",
      "name": "Yaroslav Yachmenov"
    },
    {
      "id": 4810535,
      "username": "shoyle1",
      "name": "Sean John Hoyle"
    },
    {
      "id": 102482,
      "username": "faithfulman",
      "name": "Kevin Isley"
    },
    {
      "id": 709639,
      "username": "omidontop",
      "name": "Omid Manikhi"
    },
    {
      "id": 37100,
      "username": "sampad.abbas1370",
      "name": "Abbas Aliakbari"
    },
    {
      "id": 688008,
      "username": "friuns",
      "name": "friuns"
    },
    {
      "id": 5476246,
      "username": "unitysipu",
      "name": "Simo Punnonen"
    },
    {
      "id": 1861874,
      "username": "shellyniz",
      "name": "Shelly Nizri"
    },
    {
      "id": 920678,
      "username": "dbogatov",
      "name": "Dmytro Bogatov"
    },
    {
      "id": 5791080,
      "username": "mlockhart",
      "name": "Mike Lockhart | GitLab"
    },
    {
      "id": 2346644,
      "username": "ariaieboy",
      "name": "AriaieBOY"
    },
    {
      "id": 1861874,
      "username": "shellyniz",
      "name": "Shelly Nizri"
    },
    {
      "id": 1276118,
      "username": "wagnerpinheiro",
      "name": "Wagner Pinheiro"
    },
    {
      "id": 4788291,
      "username": "bgadberry",
      "name": "Brett Gadberry"
    },
    {
      "id": 346483,
      "username": "yachmenov_c_",
      "name": "Yaroslav Yachmenov"
    },
    {
      "id": 695248,
      "username": "lbot",
      "name": "Lee Matos"
    },
    {
      "id": 1283330,
      "username": "max-wittig",
      "name": "Max Wittig"
    },
    {
      "id": 4158075,
      "username": "aakriti.gupta",
      "name": "Aakriti Gupta"
    },
    {
      "id": 491329,
      "username": "Valentin_Seehausen",
      "name": "Valentin Seehausen"
    },
    {
      "id": 4587928,
      "username": "cbazan1",
      "name": "Carlos Bazan"
    },
    {
      "id": 5291964,
      "username": "crispindev",
      "name": "crispin velez"
    },
    {
      "id": 4376883,
      "username": "stkerr",
      "name": "Sam Kerr"
    },
    {
      "id": 5250128,
      "username": "ricardoamarilla",
      "name": "Ricardo Amarilla"
    },
    {
      "id": 10060155,
      "username": "leducmills",
      "name": "Ben Leduc-Mills"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 4810535,
      "username": "shoyle1",
      "name": "Sean John Hoyle"
    },
    {
      "id": 4810535,
      "username": "shoyle1",
      "name": "Sean John Hoyle"
    },
    {
      "id": 164827,
      "username": "DarwinJS",
      "name": "DarwinJS"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 1512428,
      "username": "pds-admins",
      "name": "Dennis Biringer"
    },
    {
      "id": 102482,
      "username": "faithfulman",
      "name": "Kevin Isley"
    },
    {
      "id": 196721,
      "username": "billclark",
      "name": "Bill Clark"
    },
    {
      "id": 2414870,
      "username": "mason1920",
      "name": "mason1920"
    },
    {
      "id": 419655,
      "username": "markglenfletcher",
      "name": "Mark Fletcher"
    },
    {
      "id": 154953,
      "username": "Zandor300",
      "name": "Zandor Smith"
    },
    {
      "id": 1086520,
      "username": "jeremy-gl",
      "name": "Jeremy Watson (ex-GitLab)"
    },
    {
      "id": 37100,
      "username": "sampad.abbas1370",
      "name": "Abbas Aliakbari"
    },
    {
      "id": 3219145,
      "username": "spprint",
      "name": "Sven Vet"
    },
    {
      "id": 1086520,
      "username": "jeremy-gl",
      "name": "Jeremy Watson (ex-GitLab)"
    },
    {
      "id": 101578,
      "username": "zj-gitlab",
      "name": "Zeger-Jan van de Weg"
    },
    {
      "id": 2223731,
      "username": "bobbymcgill",
      "name": "Bobby McGill"
    },
    {
      "id": 2438931,
      "username": "JasonHuZS",
      "name": "Jason Hu"
    },
    {
      "id": 2814876,
      "username": "jim.robbins",
      "name": "Jim Robbins"
    },
    {
      "id": 491329,
      "username": "Valentin_Seehausen",
      "name": "Valentin Seehausen"
    },
    {
      "id": 4122216,
      "username": "saunved",
      "name": "Saunved Mutalik"
    },
    {
      "id": 3511154,
      "username": "valexieva",
      "name": "Virjinia Alexieva"
    },
    {
      "id": 920678,
      "username": "dbogatov",
      "name": "Dmytro Bogatov"
    },
    {
      "id": 3511154,
      "username": "valexieva",
      "name": "Virjinia Alexieva"
    },
    {
      "id": 3511154,
      "username": "valexieva",
      "name": "Virjinia Alexieva"
    },
    {
      "id": 1283330,
      "username": "max-wittig",
      "name": "Max Wittig"
    },
    {
      "id": 3511154,
      "username": "valexieva",
      "name": "Virjinia Alexieva"
    },
    {
      "id": 3511154,
      "username": "valexieva",
      "name": "Virjinia Alexieva"
    },
    {
      "id": 1086520,
      "username": "jeremy-gl",
      "name": "Jeremy Watson (ex-GitLab)"
    },
    {
      "id": 424775,
      "username": "markpundsack",
      "name": "Mark Pundsack"
    },
    {
      "id": 5476246,
      "username": "unitysipu",
      "name": "Simo Punnonen"
    },
    {
      "id": 1612315,
      "username": "dico.karssiens",
      "name": "Dico Karssiens"
    },
    {
      "id": 5476246,
      "username": "unitysipu",
      "name": "Simo Punnonen"
    },
    {
      "id": 1612315,
      "username": "dico.karssiens",
      "name": "Dico Karssiens"
    },
    {
      "id": 5476246,
      "username": "unitysipu",
      "name": "Simo Punnonen"
    },
    {
      "id": 635873,
      "username": "pisarik",
      "name": "Vlad Blazhko"
    },
    {
      "id": 5476246,
      "username": "unitysipu",
      "name": "Simo Punnonen"
    },
    {
      "id": 4911777,
      "username": "i.hayden",
      "name": "Immanuel Hayden"
    },
    {
      "id": 419655,
      "username": "markglenfletcher",
      "name": "Mark Fletcher"
    },
    {
      "id": 920678,
      "username": "dbogatov",
      "name": "Dmytro Bogatov"
    },
    {
      "id": 261290,
      "username": "TRPmwiesen",
      "name": "Matthew Wiesen"
    },
    {
      "id": 239547,
      "username": "wil.rodriguez",
      "name": "William Rodriguez"
    },
    {
      "id": 419655,
      "username": "markglenfletcher",
      "name": "Mark Fletcher"
    },
    {
      "id": 419655,
      "username": "markglenfletcher",
      "name": "Mark Fletcher"
    },
    {
      "id": 87854,
      "username": "DouweM",
      "name": "Douwe Maan"
    },
    {
      "id": 1187333,
      "username": "jramsay-gitlab",
      "name": "James Ramsay (ex-GitLab)"
    },
    {
      "id": 1512428,
      "username": "pds-admins",
      "name": "Dennis Biringer"
    },
    {
      "id": 2182793,
      "username": "craph1",
      "name": "craph"
    },
    {
      "id": 786106,
      "username": "lyle",
      "name": "Lyle Kozloff"
    },
    {
      "id": 786106,
      "username": "lyle",
      "name": "Lyle Kozloff"
    },
    {
      "id": 2973161,
      "username": "robf_at_conversica.com",
      "name": "Rob Fulwell"
    },
    {
      "id": 4788291,
      "username": "bgadberry",
      "name": "Brett Gadberry"
    },
    {
      "id": 164827,
      "username": "DarwinJS",
      "name": "DarwinJS"
    },
    {
      "id": 164827,
      "username": "DarwinJS",
      "name": "DarwinJS"
    },
    {
      "id": 4512390,
      "username": "djensen",
      "name": "Dan Jensen"
    },
    {
      "id": 164827,
      "username": "DarwinJS",
      "name": "DarwinJS"
    },
    {
      "id": 2973161,
      "username": "robf_at_conversica.com",
      "name": "Rob Fulwell"
    },
    {
      "id": 164827,
      "username": "DarwinJS",
      "name": "DarwinJS"
    },
    {
      "id": 4512390,
      "username": "djensen",
      "name": "Dan Jensen"
    },
    {
      "id": 5791080,
      "username": "mlockhart",
      "name": "Mike Lockhart | GitLab"
    },
    {
      "id": 4512390,
      "username": "djensen",
      "name": "Dan Jensen"
    },
    {
      "id": 164827,
      "username": "DarwinJS",
      "name": "DarwinJS"
    },
    {
      "id": 786106,
      "username": "lyle",
      "name": "Lyle Kozloff"
    },
    {
      "id": 7978344,
      "username": "robinshine",
      "name": "Robin Shen"
    },
    {
      "id": 2438931,
      "username": "JasonHuZS",
      "name": "Jason Hu"
    },
    {
      "id": 920678,
      "username": "dbogatov",
      "name": "Dmytro Bogatov"
    },
    {
      "id": 3288671,
      "username": "cupini",
      "name": "Brian Cupini"
    },
    {
      "id": 4156460,
      "username": "ogolowinski",
      "name": "Orit Golowinski"
    },
    {
      "id": 4447217,
      "username": "ljlane",
      "name": "Larissa Lane"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 5213201,
      "username": "bmiller1",
      "name": "Bryan Miller"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 5213201,
      "username": "bmiller1",
      "name": "Bryan Miller"
    },
    {
      "id": 4788291,
      "username": "bgadberry",
      "name": "Brett Gadberry"
    },
    {
      "id": 3796140,
      "username": "sarahwaldner",
      "name": "Sarah Waldner"
    },
    {
      "id": 4788291,
      "username": "bgadberry",
      "name": "Brett Gadberry"
    },
    {
      "id": 5329074,
      "username": "tmccaslin",
      "name": "Taylor McCaslin"
    },
    {
      "id": 4708748,
      "username": "matt_wilson",
      "name": "Matt Wilson"
    },
    {
      "id": 7536567,
      "username": "hchouraria",
      "name": "Harsh Chouraria"
    },
    {
      "id": 7272738,
      "username": "kategrechishkina",
      "name": "Kate Grechishkina"
    },
    {
      "id": 5537005,
      "username": "cleveland",
      "name": "Cleveland Bledsoe Jr"
    },
    {
      "id": 10051186,
      "username": "kballon",
      "name": "Kent Japhet Ballon"
    },
    {
      "id": 786106,
      "username": "lyle",
      "name": "Lyle Kozloff"
    },
    {
      "id": 882141,
      "username": "1u",
      "name": "1u"
    },
    {
      "id": 882141,
      "username": "1u",
      "name": "1u"
    },
    {
      "id": 4748523,
      "username": "sheininger",
      "name": "Steffen Heininger"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 100770,
      "username": "tnir",
      "name": "Takuya Noguchi"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 4810535,
      "username": "shoyle1",
      "name": "Sean John Hoyle"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 8047255,
      "username": "jhenkel1",
      "name": "Jayson Henkel"
    },
    {
      "id": 8047255,
      "username": "jhenkel1",
      "name": "Jayson Henkel"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 2973161,
      "username": "robf_at_conversica.com",
      "name": "Rob Fulwell"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 164827,
      "username": "DarwinJS",
      "name": "DarwinJS"
    },
    {
      "id": 5476246,
      "username": "unitysipu",
      "name": "Simo Punnonen"
    },
    {
      "id": 2973161,
      "username": "robf_at_conversica.com",
      "name": "Rob Fulwell"
    },
    {
      "id": 12577608,
      "username": "jesswang_gitlab",
      "name": "Jess Wang"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    },
    {
      "id": 10339034,
      "username": "manuelgrabowski",
      "name": "Manuel Grabowski"
    },
    {
      "id": 10822493,
      "username": "tlinz",
      "name": "Torsten Linz"
    }
  ],
  "namespace_hierarchy": [
    {
      "id": 9970,
      "name": "GitLab.org",
      "path": "gitlab-org",
      "type": "Group"
    }
  ]
}
