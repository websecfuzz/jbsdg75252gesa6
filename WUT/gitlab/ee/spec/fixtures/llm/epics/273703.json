{
  "data": {
    "id": 273703,
    "group_id": 9970,
    "author_id": 4669960,
    "assignee_id": null,
    "iid": 6033,
    "updated_by_id": 2890431,
    "last_edited_by_id": 5709669,
    "lock_version": 166,
    "start_date": "2018-08-08",
    "end_date": "2024-03-15",
    "last_edited_at": "2023-01-20 04:22:25 UTC",
    "created_at": "2021-05-18 21:59:07 UTC",
    "updated_at": "2023-10-24 07:01:19 UTC",
    "title": "[INITIATIVE] Work Items",
    "description": "## Problem\n\n- Epics, Issues, and Requirements all have similar but just subtle enough differences in common interactions that it requires the user to hold a complicated mental model of how each behaves.\n- Using labels to denote Issue types is cumbersome and makes every reporting view more complex (because you have to include all labels in picking which you want to show analytics for).\n- [Issue Types](https://app.periscopedata.com/app/gitlab/654183/Plan-stage-.com-events) are one of the top two use cases of labels. Given that, we should provide first-class support for it.\n- Issues are starting to feel cluttered as we add more and more capabilities to them. There is no consistent pattern for how to surface relationships to other objects, there is not a coherent interaction model across Issuables, and the various implementations of [issue types](https://docs.gitlab.com/ee/development/issue_types.html) are feeling the pain of the lack of flexibility and extensibility.\n\n## Solution\n\n* Create a new architecture called Work Items that will support Issues, Epics, Requirements, and future planning items. This will allow us to enhance the experience for Epics and Requirements and expose more functionality that is available in Issues to them.\n* We cannot re-use our existing Issues since the architecture is not flexible and scalable enough to accommodate all the features needed for our future vision.\n* We are also taking this opportunity to change terminology from being centered around \"Issues\" to \"Work Items\". The term \"Issues\" is not comprehensive enough for all the capabilities we plan to build in the future.\n* We will start this effort by creating a new work item called **Tasks**. This was a long-standing ask that provides net new customer value. Starting with a new item also reduces the risk of changing an existing capability like Issues, which has significant traffic and is part of key customer workflows today.\n* The second item to use Work Items will be Requirements. It's an existing item that has fewer data elements and lower usage. Migrating a lower usage item will allow us to develop and test customer education patterns about the new experience.\n* We will build capabilities in the new Work Items framework until we have reached parity with Epics and Issues. Then we will migrate them to use Work Items.\n\n### Roadmap By Product Group\n\nSee [this spreadsheet](https://docs.google.com/spreadsheets/d/1D3QZ5L2hb7yzIyYnob13o3Mk2vxzCplR-hc5GFmr38c/edit#gid=0) for a breakdown of work and how it aligns with each objective\n\n### Important Links\n\n- https://gitlab.com/gitlab-org/gitlab/-/issues/368044+\n- https://gitlab.com/gitlab-org/gitlab/-/issues/368607+\n\n### Q & A\n\n<details>\n<summary>If we were to move mutli-level epics to premium and add the ability to use epics in projects, what do users get from tasks that is not already available?</summary>\n\nIn terms of customer value, [this video](https://www.youtube.com/watch?v=g5n0dEwcXio&feature=youtu.be) explains \"why\" fairly succinctly.\n\nIn terms of \"why\" from a technical and product perspective, the main point is that we do not want to maintain two different objects -- issue and epic -- in the long run. To advance the maturity of epics, they need:\n\n* Assignees\n* weight\n* first-class types\n* Design manager\n* The ability to be moved to other groups\n* Description templates\n* integrated with webhooks\n* integrated with events so activity shows on a user's profile.\n* ...the list goes on\n\nOn top of that, based on our longer-term vision:\n\n* It will be even more work to integrate epics into places like values stream analytics.\n* The two frontends for issues and epics are different code, so whenever we want to change one aspect of issues or epics that share functionality (say updating the labels widget to pajamas), we have to do it twice. It will require duplicate work for any new things we introduce like https://gitlab.com/groups/gitlab-org/-/epics/5099+\n* The date inheritance model on epics is fairly broken.\n* Issues need to be included in roadmaps.\n\nSo...we can do one of the following:\n\n1. Spend the time doing all the work to bring epics up to \"parity\" with issues, and then double the effort for every change moving forward. This is compounded with each new first-class object we introduce (ex: all the same things noted above for epics apply to requirements). This would also entail making both Epics available in Projects and Issues available in Groups (twice the work).\n2. Consolidate the objects down to a single object, fix some of the underlying wonky stuff (date inheritance model) as we go, and only migrate one object to Group or Project.\n\nPath 2 requires less effort and ultimately increases the rate at which we can improve the maturity of the JTBD for which epics are currently being used.\n</details>\n\n<details>\n<summary>Why did you decide to start with Tasks?</summary>\n\nIn terms of customer value, [this video](https://www.youtube.com/watch?v=g5n0dEwcXio&feature=youtu.be) explains \"why\" fairly succinctly. Additionally, <span dir=\"\">\\~</span>6% of Plan users currently have access to the notion of a grandparent (multi-level epic). <span dir=\"\">\\~</span>15% have access to the notion of a parent (single-level epic). 79% have no notion of parenting in their workflows. By introducing Tasks, we are providing <span dir=\"\">\\~</span>21% of Plan users with the notion of grandparents, and 79% of Plan users with the notion of parent/child relationships.\n\nFrom a technical and product perspective, we needed to find a real problem to solve that would allow us to: 1) Build the work items API, 2) Design and build a new frontend, 3) Incrementally work towards migrating epics to work items -- which requires that we add \"parent/child\" relationships to issues. 4) low risk to disrupting existing issue workflows 5) Reduce the risk for reaching eventual consistency that allowed us to iterate and get feedback as we work towards migrating various objects to be a \"work item\"\n</details>",
    "start_date_sourcing_milestone_id": null,
    "due_date_sourcing_milestone_id": null,
    "start_date_fixed": "2021-05-17",
    "due_date_fixed": "2021-11-18",
    "start_date_is_fixed": false,
    "due_date_is_fixed": false,
    "closed_by_id": null,
    "closed_at": null,
    "parent_id": null,
    "relative_position": null,
    "state_id": 1,
    "start_date_sourcing_epic_id": 864588,
    "due_date_sourcing_epic_id": 752853,
    "external_key": null,
    "confidential": false,
    "color": "#1068bf",
    "total_opened_issue_weight": 153,
    "total_closed_issue_weight": 660,
    "total_opened_issue_count": 312,
    "total_closed_issue_count": 517
  },
  "author": {
    "id": 4669960,
    "username": "cdybenko",
    "name": "Christen Dybenko"
  },
  "labels": [
    {
      "id": 27355480,
      "title": "FY24",
      "color": "#c21e56",
      "project_id": null,
      "created_at": "2022-10-14 15:07:27 UTC",
      "updated_at": "2022-10-14 15:07:52 UTC",
      "template": false,
      "description": "",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 3103451,
      "title": "devops::plan",
      "color": "#E44D2A",
      "project_id": null,
      "created_at": "2017-12-01 19:00:23 UTC",
      "updated_at": "2022-05-11 06:40:37 UTC",
      "template": false,
      "description": "Issues for the Plan stage of the DevOps lifecycle (e.g. Project Management, Agile Portfolio Management, Requirements Management)",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    }
  ],
  "start_date_sourcing_milestone": null,
  "due_date_sourcing_milestone": null,
  "notes": [
    {
      "note": "Hello @cu00oe, thanks for the question! This is an entirely new infrastructure in which we plan to migrate issues, epics and requirements to this calendar year. We have already launched [tasks](https://docs.gitlab.com/ee/user/tasks.html) on the framework. \n\nCan you tell me which features you're looking forward to and I can provide more information?",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-02-07 22:39:08 UTC",
      "updated_at": "2023-02-07 22:39:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c74115c6ff20fe6e52ff64fa541546b80d3485f6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1269490106,
      "namespace_id": null
    },
    {
      "note": "One of my customers is also interested in this.\n\n[Internal Link](https://gitlab.my.salesforce.com/0014M00001yVENA)",
      "noteable_type": "Epic",
      "author_id": 10219953,
      "created_at": "2022-03-29 21:14:33 UTC",
      "updated_at": "2022-03-29 21:14:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bf8958ed261d8cff71aceee6479bf0585902a629",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 893580115,
      "namespace_id": null
    },
    {
      "note": "Thanks for creating this issue @cdybenko.\n\nFYI @kushalpandya @fguibert @rajatgitlab In %\"14.1\" we're going to start the process of updating epics to be an extended \"collabject\" (issuable).\n\n@ntepluhina Is going to attend the kickoff meetings and guide the frontend architecture, as we have yet to determine what an issue and/or a core collabject view looks like.",
      "noteable_type": "Epic",
      "author_id": 3507264,
      "created_at": "2021-05-26 18:25:59 UTC",
      "updated_at": "2021-05-26 18:25:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "390657777028bd76ff261a914354a036bb86ff93",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 585828405,
      "namespace_id": null
    },
    {
      "note": "@gweaver I've created this epic to clarify goals and bring together all of our planning initiatives under the same umbrella. Can you add to the sections above in regards to your team's goals, risks, etc?  I want to keep this a succinct TLDR from our learnings in meetings but make sure we track both of our goals for a successful transition to our roadmaps.",
      "noteable_type": "Epic",
      "author_id": 4669960,
      "created_at": "2021-05-18 22:28:30 UTC",
      "updated_at": "2021-05-18 23:03:02 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "88cc4beb1ea5df5a0f4747f7dace2328abf19bec",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 578868446,
      "namespace_id": null
    },
    {
      "note": "@mushakov I created this after wanting to give you the TLDR on your GMP onboarding issue. Hopefully, this can serve as a top-level place to reference all the content we have going on around this initiative.",
      "noteable_type": "Epic",
      "author_id": 4669960,
      "created_at": "2021-05-18 22:29:29 UTC",
      "updated_at": "2021-09-13 20:03:21 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5a476218f3a010429648dc383f46d2d0b158e96c",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 578869381,
      "namespace_id": null
    },
    {
      "note": "Thanks for the reply @amandarueda. We are evaluating to replace our Github service with Gitlab. But the project management stuff looks WIP. To be specific we are looking for custom fields on Issues, probably this [https://gitlab.com/groups/gitlab-org/-/epics/7198](https://gitlab.com/groups/gitlab-org/-/epics/7198)",
      "noteable_type": "Epic",
      "author_id": 13640713,
      "created_at": "2023-02-08 12:54:10 UTC",
      "updated_at": "2023-02-08 13:52:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c74115c6ff20fe6e52ff64fa541546b80d3485f6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1270536270,
      "namespace_id": null
    },
    {
      "note": "I tried to look into issues and follow whats what, but frankly I am not able to. Hope someone could give a rough estimate. Thanks",
      "noteable_type": "Epic",
      "author_id": 13640713,
      "created_at": "2023-02-08 12:56:48 UTC",
      "updated_at": "2023-02-08 12:56:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c74115c6ff20fe6e52ff64fa541546b80d3485f6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1270540992,
      "namespace_id": null
    },
    {
      "note": "- Are we still looking to start with Epics, or is it Requirements now?\n- What deliverables would be most helpful from Design -> Dev/Eng? Wires for planning breakdown? Something else?\n- What metrics are most important to track? Is there anything Design can do to be of support here?\n- What are the biggest risks in terms of handoff from Design? What would feel overwhelming to build?\n- What is MVC 1 of collaboration objects? What is required to be functional and get feedback? What could be future iterations?\n- When are we looking to be \"done\" and release the new collaboration object to users? Does it map 1:1 with the Shared Goals section?\n- How or when should we incorporate objects like MRs? How do we strive for consistency?",
      "noteable_type": "Epic",
      "author_id": 3617348,
      "created_at": "2021-05-27 15:27:55 UTC",
      "updated_at": "2021-05-27 15:58:56 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 3617348,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "61906d7563bb859509e69e6d949d3f401373aa3e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2021-05-27 15:58:56 UTC",
      "internal": false,
      "id": 586986029,
      "namespace_id": null
    },
    {
      "note": "Thank you for putting this together @cdybenko ! I have a few questions:\n\n1. If I'm understanding correctly, this would make it possible to create an Epic in the same way that Incidents can be created by selecting an option from the Issue Type dropdown. Can you confirm? \n1. Does converting Epics to Issue Types mean that they could be created in a Project after this work is complete?\n1. Parenting for all issue types is interesting. Are y'all thinking about enabling this for all issue types?\n1. Am I interpreting correctly from the [spreadsheet](https://docs.google.com/spreadsheets/d/139gKTbUqHI7Ej9KBemHWKS7DySRUVTz03ajlgnFM4QY/edit#gid=0) that part of this effort will include bringing parity to the fields available to each issue type where it makes sense? \n\ncc: @gweaver @mjwood",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2021-05-19 14:53:18 UTC",
      "updated_at": "2021-05-19 16:46:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5eb286665d8ff09f816ff622c2f34cbd0a7adaa1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 579723704,
      "namespace_id": null
    },
    {
      "note": "@mushakov all good questions!\n\n> 1. If I'm understanding correctly, this would make it possible to create an Epic in the same way that Incidents can be created by selecting an option from the Issue Type dropdown. Can you confirm?\n\nWe'll have the same UX as right now for creating epics, but under the hood, it will be that dropdown. \n\nWe'll also allow easy conversion between objects on this same model. This could be really useful in other areas of the UI where you want to change objects. For example, if you were looking at an issue on a roadmap and it should be an epic, you could just click it and convert. With the issue type model, it would only change one field and then render it as the other object.\n\n> 2. Does converting Epics to Issue Types mean that they could be created in a Project after this work is complete?\n\nYes, under the hood, all Planning Objects (Collabjects) will exist at the group or project level. We won't enable that in the UI for the MVC but this opens up massive flexibility.\n\n> 3. Parenting for all issue types is interesting. Are y'all thinking about enabling this for all issue types?\n\nYep, it should be a flexible relation field. You could imagine viewing a roadmap and seeing an Initiative at the top, Epics a click below, Issues/Stories below that, and maybe even MRs or a new Todo issue type oject below the Stories. The goal is to allow flexibility in how the objects are defined and parented in a structure that works for the user's organization. \n\n> 4. Am I interpreting correctly from the [spreadsheet](https://docs.google.com/spreadsheets/d/139gKTbUqHI7Ej9KBemHWKS7DySRUVTz03ajlgnFM4QY/edit#gid=0) that part of this effort will include bringing parity to the fields available to each issue type where it makes sense?\n\nYes, all fields will exist and it's just whether we turn them on in the UI. At some point, our users can also turn fields on and off. \n\nThe other big thing to note from that spreadsheet is the reduction of duplicated effort. Right now we have separate codebases for issue lists vs epic lists, filters, epic boards vs issue boards. When we have parity we can focus our engineering efforts on one view and then have all the different object types work with it. This MR has the list of planned Epic features I will get for free with our Collabjects work, which means we don't keep re-building functionality:  https://gitlab.com/gitlab-com/www-gitlab-com/-/merge_requests/80922",
      "noteable_type": "Epic",
      "author_id": 4669960,
      "created_at": "2021-05-19 16:46:40 UTC",
      "updated_at": "2021-05-19 16:46:40 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5eb286665d8ff09f816ff622c2f34cbd0a7adaa1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 579832625,
      "namespace_id": null
    },
    {
      "note": "Thanks @cdybenko for the context! The list of features that you get for free would be a great piece of info to add explicitly to this Epic somehow :thinking: .",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2021-05-19 19:27:59 UTC",
      "updated_at": "2021-05-19 19:27:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5eb286665d8ff09f816ff622c2f34cbd0a7adaa1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 580165829,
      "namespace_id": null
    },
    {
      "note": "I added a blurb to https://gitlab.com/groups/gitlab-org/-/epics/6033#draft-shared-goals-at-end-of-planning . Let me know what you think.",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2021-05-19 19:33:34 UTC",
      "updated_at": "2021-05-19 19:33:34 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5eb286665d8ff09f816ff622c2f34cbd0a7adaa1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 580170638,
      "namespace_id": null
    },
    {
      "note": "@cdybenko @johnhope @jlear @donaldcook I moved most of the issue types (with the exception of end-user customization) issues from https://gitlab.com/groups/gitlab-org/-/epics/3354 to this epic under `MVC 0 - BE Architecture`. I also moved over the two relevant discussion issues on `Converting Plan Objects to Issue Types` and `Extensible Issues Technical Implementation` here. We can probably consolidate all of the discussion issues given we are all talking about the same underlying architecture decisions for the future of work items. Feel free to close the overlapping discussion issues and redirect to the SSoT technical discission. \n\nChristen, I also moved over the two open issues for filtering by type in different views. I'm not sure which MVC we want to drop these in so feel free to pick one!",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2021-07-08 22:45:01 UTC",
      "updated_at": "2021-07-09 12:23:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "42c61ef0fc04b79e22ebf1e1b70dd50fde0e3cc5",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 622090725,
      "namespace_id": null
    },
    {
      "note": "Thanks @gweaver \n\ncc'ing @acroitor as he's leading the technical discussion.\n\nIt'd be great to keep discussion and items in one place. Discoto has been working well in https://gitlab.com/gitlab-org/gitlab/-/issues/332566. If we discuss things elsewhere, at least capturing the decisions/outcomes in this as SSoT would be good.",
      "noteable_type": "Epic",
      "author_id": 4418630,
      "created_at": "2021-07-09 12:23:18 UTC",
      "updated_at": "2021-07-09 12:23:18 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "42c61ef0fc04b79e22ebf1e1b70dd50fde0e3cc5",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 622563201,
      "namespace_id": null
    },
    {
      "note": "> We can probably consolidate all of the discussion issues given we are all talking about the same underlying architecture decisions for the future of work items. Feel free to close the overlapping discussion issues and redirect to the SSoT technical discussion.\n\nI'm torn between keeping all technical discussion in one place(single issue) and having massive threads with all the ideas and discussions branching out into several areas, thus leading to taking too big of a bite(thinking about too much) and loosing the essence of a discussion and splitting discussions across several \"work items\" where we lose the SSOT. On the other hand I can see how having everything summarized in one place and linking out to details would be helpful.\n\n> If we discuss things elsewhere, at least capturing the decisions/outcomes in this as SSoT would be good.\n\nThis is what I'm currently leaning towards as well. We do have some \"duplicate\" discussion threads but once we get to a decision we can just keep one as SSOT for the discussion outcome, cross-link to all other discussions(issues, epics) and close those.\n\nI'll do my best to keep a decision/status summary, perhaps on https://gitlab.com/groups/gitlab-org/-/epics/6285 and link out to discussions, docs etc. As of now this is all WIP :smile_cat:",
      "noteable_type": "Epic",
      "author_id": 3483274,
      "created_at": "2021-07-09 12:55:55 UTC",
      "updated_at": "2021-07-12 20:55:57 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "42c61ef0fc04b79e22ebf1e1b70dd50fde0e3cc5",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 622593359,
      "namespace_id": null
    },
    {
      "note": "@cdybenko @johnhope @jlear @donaldcook @acroitor do ya'll think we could work on the four MVCs in parallel once MVC0 is done? I'm trying to figure out what to put in our 14.2 release planning issue :smile:",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2021-07-14 14:58:09 UTC",
      "updated_at": "2021-07-14 15:17:30 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b5e463f7b83be42ff24a0b6d234b1d2acb1a2574",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 626383261,
      "namespace_id": null
    },
    {
      "note": "@gweaver On the ~frontend, safest play would probably be to work on MVC 1 first (after MVC 0) as it will include the actual building of the architecture that is determined in MVC 0. 2, 3, and 4 can then be worked on in parallel, afterward.",
      "noteable_type": "Epic",
      "author_id": 3507264,
      "created_at": "2021-07-14 15:17:30 UTC",
      "updated_at": "2021-07-14 15:17:30 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b5e463f7b83be42ff24a0b6d234b1d2acb1a2574",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 626402995,
      "namespace_id": null
    },
    {
      "note": "@gweaver I'd say that it's likely as we approach the end of MVC0 on the ~backend we will naturally start to overlap into MVC1 and maybe MVC2 (e.g. as we settle on an approach for the table/model structure we'll stub out the URL and hierarchy, which are technically in the two following MVCs) but I'd be hesitant to go much beyond that.",
      "noteable_type": "Epic",
      "author_id": 5965371,
      "created_at": "2021-07-14 15:36:37 UTC",
      "updated_at": "2021-07-19 13:41:37 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "b5e463f7b83be42ff24a0b6d234b1d2acb1a2574",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 626427125,
      "namespace_id": null
    },
    {
      "note": "**NOTE:**\nThese MVCs are a guideline for Engineering, and are not tied to any specific milestone or release\nroadmap.\n\n### MVC I: Introduce the work item type model\n\nMVC I goal is to get to the point where we can replace `issues#issue_type` column with\n`issues#work_item_type_id` in the code, so we can completely rely on WITs defined in\n`work_item_types` table. The entire MVC can be broken down into several smaller iterations.\n\n- Iteration 1\n  - Create `work_item_type` db table\n  - Add `work_item_type_id` column to issues table\n- Iteration 2\n  - Add the code for creating default WITs for new root namespaces\n  - Populate `work_item_types` with default WITs for all existing root namespaces\n  - Ensure `work_item_type_id` is updated along `issue_type` when changing the type on the issue\n- Iteration 3\n  - Back-fill `work_item_type_id` in `issues` table with corresponding data from\n      `work_item_types` according to root namespace\n- Iteration 4\n  - Switch code from using `issue_type` to using `work_item_type_id`\n    - This is probably a big enough task that can be broken down into several smaller tasks\n\nMost of these tasks can be worked on in parallel, but need to be deployed in a predefined order.\n\n### MVC II: Map attributes to WITs\n\nAfter MVC I we would have WITs concept and we can introduce new WITs if needed,\nbut all WITs at this point will have the same set of attributes, so the only difference would\nbe simply the type, functionally all WITs will be the same at this stage.\n\nMVC II goal is to differentiate WITs functionally, by mapping specific attributes to specific\nWIT.\n\n- Hardcode the attributes to WIT mappings for each individual predefined WIT, initially this will\n  perhaps just be a list of columns for each WIT\n- Code changes related using WITs attributes mapping to load WIT specific data\n- FE needs to be aware of WITs atttributes mappings\n\n### MVC III: Go full widgets\n\nThis is where we need to have all (or most) attributes widgetized. Besides some of the simpler\nwidgets: text, number, date, we'll need to make sure we can support a few more complex ones, like\nassociations: milestone, iteration, assignees, etc as well as hierarchy, inherited date widget, etc.\n\nThis will allow us to reach feature parity with most plan objects that we currently support under WITs\numbrella.\n\n### MVC IV: Dynamic widgets mapping to WIT\n\nNext MVC is to move from hardcoded attributes mapping to a WIT to dynamically defined widgets mappings.\nThis will give customers the ability to customize predefined WITs with their preferred list of\nwidgets\n\n- Move mappings definition to a DB structure\n- Code changes related to reading customer specific widget mappings and fetching respective data\n  for WIs\n- Define permissions on who is allowed to change WIT widgets\n\n### MVC V: Custom work item types\n\nAt this stage we would expose WIT creation to the customers so that customers can define\ntheir own CWITs built on top the existing predefined widgets.\n\n### MVC VI: Custom widgets\n\nThis is where we will be addressing full customization of CWITs with CWs",
      "noteable_type": "Epic",
      "author_id": 3483274,
      "created_at": "2021-07-29 17:17:29 UTC",
      "updated_at": "2021-07-29 17:17:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "74ff6dcdeeb460abe0d2faa66aae430d00468856",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 638961664,
      "namespace_id": null
    },
    {
      "note": "@cu00oe I think the better record to track for customizable work types would be: https://gitlab.com/groups/gitlab-org/-/epics/7897\n\n@gweaver can you comment on the roadmap and timeline for this feature?",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-02-08 13:53:32 UTC",
      "updated_at": "2023-02-08 13:53:32 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c74115c6ff20fe6e52ff64fa541546b80d3485f6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1270648859,
      "namespace_id": null
    },
    {
      "note": "@acroitor, \n\n> moved out of the doc,\n\nYou mean the dev doc !66519?\n\nThis is the clearest eng. outline on the work item stuff. Can we keep it in the doc and open a MR to modify it as directions evolve?",
      "noteable_type": "Epic",
      "author_id": 5961404,
      "created_at": "2021-08-26 08:19:00 UTC",
      "updated_at": "2021-08-26 08:19:11 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 5961404,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "74ff6dcdeeb460abe0d2faa66aae430d00468856",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2021-08-26 08:19:11 UTC",
      "internal": false,
      "id": 661412236,
      "namespace_id": null
    },
    {
      "note": "EU financing model for science uses concept of \"Work Packages\" https://enspire.science/work-packages-in-horizon-europe-how-to-do-it-right/ which also contains funding amount for the project that applies for financing. If GitLab directly supports this concept for tracking work and money, that would result in its increased adoption among EU scientific institutions, which would lead to better science and open science practices.",
      "noteable_type": "Epic",
      "author_id": 907418,
      "created_at": "2023-01-21 11:44:52 UTC",
      "updated_at": "2023-03-08 11:59:34 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 907418,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "55f5d41ab1cbb2d09bf5e5f87546a1e7e6f06150",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-01-21 11:45:15 UTC",
      "internal": false,
      "id": 1248219356,
      "namespace_id": null
    },
    {
      "note": "Thank you both, this is a fascinating discussion with valid points for both approaches. I think the next best step is to conduct some validation via user interviews. I want to thoroughly understand the jobs to be done, the needs within the workflow and the relationship opportunities between designs and the other work item types. From there, I can publish my findings, and we can return to this discussion. Adding this to our sync agenda @uhlexsis :art:",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2022-10-13 13:09:05 UTC",
      "updated_at": "2022-10-13 13:09:05 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1134683806,
      "namespace_id": null
    },
    {
      "note": "@cu00oe, we're currently planning on focusing on https://gitlab.com/groups/gitlab-org/-/epics/7897 and custom fields in the second half of this calendar year. \n\n> But the project management stuff looks WIP\n\nThere is a lot that is already done, and in most cases, sufficient to support the majority of use cases that GitHub currently supports (and many that it does not).",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2023-02-08 15:50:28 UTC",
      "updated_at": "2023-02-08 15:50:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c74115c6ff20fe6e52ff64fa541546b80d3485f6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1270892576,
      "namespace_id": null
    },
    {
      "note": "A 150 seats (planned growth to 300+) ~\"GitLab Premium\" ~customer (https://gitlab.my.salesforce.com/0016100000NmTeD, internal link) is interested in Work Items and have identified it as one of top features to support their growth and adoption by more teams internally\n\n- Why interested: Customer is migrating from Bugzilla and sees it as important requirement for this migration. They would want a better way to differentiate issues, apply different workflows and report on them.\n- Current solution for this problem: Labels, but this is seen as a hack and customizing / reporting is not perfect\n- Impact to the customer of not having this: Delayed growth\n- Questions: Interested in Roadmap \n- PM to mention: @gweaver",
      "noteable_type": "Epic",
      "author_id": 4261879,
      "created_at": "2021-09-29 14:50:32 UTC",
      "updated_at": "2021-09-29 15:00:52 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "26385bcff0255dc83db899f21c9101ee0078fcdd",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 690350303,
      "namespace_id": null
    },
    {
      "note": "Thanks for updating the description here @cdybenko @gweaver ! :rocket: \n\nFor most of these, for example: \n\n###### Tasks / Work Item Parenting | ~\"group::product planning\" ~\"group::project management\"\n###### Requirements as a work item\n###### Improve Non-Work Item Relationships | ~\"group::product planning\" ~\"group::project management\"\n###### Upgraded Hierarchies | ~\"group::product planning\"\n\nThere are a few different items within each of these goals. How do we want to tackle these iteratively and across groups? \n\n- Do we want to map each of these to an issue that can be prioritized and moved through the workflow? Something else?\n- Are we splitting the workload across groups in some way?\n- How do these relate to the current \"MVC epics\"?\n\nI want to make sure I understand where I should prioritize my time so that I can get smaller iterations out for collaboration more regularly.",
      "noteable_type": "Epic",
      "author_id": 3617348,
      "created_at": "2021-11-03 21:35:14 UTC",
      "updated_at": "2021-11-08 14:41:53 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 3617348,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "d1d5b4e9851d820de0a3d8c77f94a4ab74a582c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2021-11-03 21:35:56 UTC",
      "internal": false,
      "id": 722824645,
      "namespace_id": null
    },
    {
      "note": "I am an Agile Program/Project manager and a customer of GitLab. My organization uses GitLab heavily from planning to release stage. \n\nWe are currently using Kanban flow which is working fine but we are growing fast and maintaining everything with multiple component teams having their own GitLab project (Mobile, Backend, Web etc) is becoming a challenge. We are planning to move to a more organized approach (with Milestones and Iterations) as described by @gweaver in this YouTube video (https://www.youtube.com/watch?v=KmASFwSap7c)\n\nMy questions are:\n1. What is the timeline we are looking at for the change described in this EPIC. A Tentative time should also be fine. eg. By Dec 2022 or Q2 2023.\n\n2. From end user perspective, should we take any extra care while deciding to create Epics or Issues as later on they will be converted/migrated to Work Items or other related types.\n\n3. Can you give us a simple view of how work items will look like ?\nEg. There will be a single button named 'Create Work Item' and in next pop up screen you need to select from below types\n- Task\n- Bug\n- Epic\n- User Story\n- Requirements\n- Incident\n\nAlso what will be the parental hierarchies for this ? Eg. You can create Task only under User Story or Epic OR You can create Bug as an independent work item or under a User Story or Epic.",
      "noteable_type": "Epic",
      "author_id": 11166071,
      "created_at": "2022-04-15 13:19:26 UTC",
      "updated_at": "2022-04-15 13:57:45 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c050f6d9adeb2b5f39c26c36b71d8dab96e4e85",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 914062494,
      "namespace_id": null
    },
    {
      "note": "Some great sounding features in here. Having a clearer methodology for Project Management vs workable items, and being able to define those items more clearly, sounds perfect.\n\nIt can *sort of* be achieved with the current setup (via labels), but I really like where this is going -- turning everything into a similar \"object\" in a hierarchy rather than separate standalone structures that connect and get \"labeled\" to show what they are.\n\nHuge +1 for all of this, can't wait to see where it goes!",
      "noteable_type": "Epic",
      "author_id": 10188931,
      "created_at": "2022-04-22 11:53:27 UTC",
      "updated_at": "2022-04-22 14:54:34 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c050f6d9adeb2b5f39c26c36b71d8dab96e4e85",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 920931070,
      "namespace_id": null
    },
    {
      "note": "One of my customers is interested in this: \n- Link to request: [Internal Link](https://gitlab.my.salesforce.com/0014M00001ph9m7 )\n- Why interested: This customer would like to have the ability to track parent/child requirements and test cases and be able to link them together.",
      "noteable_type": "Epic",
      "author_id": 7690791,
      "created_at": "2021-12-20 19:50:48 UTC",
      "updated_at": "2022-01-28 00:52:23 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bf8958ed261d8cff71aceee6479bf0585902a629",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 790446841,
      "namespace_id": null
    },
    {
      "note": "> What is the timeline we are looking at for the change described in this EPIC. A Tentative time should also be fine. eg. By Dec 2022 or Q2 2023.\n\n@akashsaini21 Somewhere around there is our goal. We'd be really happy to be done by December, but some things are out of our control :smile: \n\n> From end user perspective, should we take any extra care while deciding to create Epics or Issues as later on they will be converted/migrated to Work Items or other related types.\n\nNo extra care is needed. If we do our jobs well, everything should \"just work\". \n\n> Can you give us a simple view of how work items will look like ? Eg. There will be a single button named 'Create Work Item' and in next pop up screen you need to select from below types\n\nThis is still evolving, but as of right now with our current focus on https://gitlab.com/groups/gitlab-org/-/epics/7103+, this is what creating a new work item looks like: \n\n![Screen_Shot_2022-04-15_at_9.50.32_AM](/uploads/f9ff076bb1bfce955bd144da414b3c39/Screen_Shot_2022-04-15_at_9.50.32_AM.png)\n\nWe'll likely change the design a lot in the coming months (ex: [exploratory design](https://gitlab.com/gitlab-org/gitlab/-/issues/344106/designs/Action_bar_-_left.png)), but the goal is to support selecting a type and effortlessly changing the type at any point after a work item has been created. \n\n> Also what will be the parental hierarchies for this ? Eg. You can create Task only under User Story or Epic OR You can create Bug as an independent work item or under a User Story or Epic.\n\nAs with the work item detail view, the interface design is still evolving here (ex: [exploratory design](https://gitlab.com/gitlab-org/gitlab/-/issues/340844/designs/Larger_MVC_ideation.png)), but I do believe the goal is to create some validation around the hierarchy without going too far overboard and making it frustrating to use. What would you expect/prefer and why?\n\nFYI @mushakov",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2022-04-15 13:57:45 UTC",
      "updated_at": "2022-04-15 13:57:45 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c050f6d9adeb2b5f39c26c36b71d8dab96e4e85",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 914099784,
      "namespace_id": null
    },
    {
      "note": "I would love to see this and being able to assign epics like issues and MRs <3",
      "noteable_type": "Epic",
      "author_id": 3659089,
      "created_at": "2022-10-06 07:23:30 UTC",
      "updated_at": "2022-10-06 07:23:30 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "5e43bb3f13d1e5aeab42d849a31b9206c64f4dc9",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1126194126,
      "namespace_id": null
    },
    {
      "note": "Thanks you very much @gweaver for the quick response.\n\nFor the last question: I am still relatively new to GitLab world (25 days). My background is mostly in JIRA, where everything is managed via Epic, User story and then subtasks under them. \n\nFor feature driven teams that JIRA model is slightly easy to use as you can create a User Story for a feature and all the Substasks for Backend, FrontEnd, Mobile, QA, Substask:Bug can be created under it. You would complete a User story(Feature) only when all subtasks under it are complete. \n\nI understand that GitLab has a different concept as of now as you have described in your video (heavy reliance on labels by the way) where everything is either an Epic or an Issue.\n\nI do not have a solid preference as long as it is easy to use. My only suggestion would be that if we move to work item type model in coming quarters, keep it simple for people like us so that we spare less time in understanding the technicalities of the tool and spare more time on our actual work :smile: \n\nFor example (unrelated to current discussion, will post in its relevant epic separately): Milestones and Iterations are the most confusing features. Just by reading GitLab documentation, it is almost impossible to describe the difference between Milestones and Iterations. When to use Milestones and when to use Iterations ? It is not clear until we watch your video.",
      "noteable_type": "Epic",
      "author_id": 11166071,
      "created_at": "2022-04-15 14:21:07 UTC",
      "updated_at": "2022-04-15 15:08:47 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 11166071,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c050f6d9adeb2b5f39c26c36b71d8dab96e4e85",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2022-04-15 15:08:47 UTC",
      "internal": false,
      "id": 914122812,
      "namespace_id": null
    },
    {
      "note": "I have a ~\"GitLab Premium\" [customer](https://gitlab.my.salesforce.com/0016100001MS2c8) is very worried about how these changes will impact their internal processes and trainings they have delivered to their teams and is requesting training or a YouTube video walk through training. Do we have any resources to provide or will we be supplying those? Thanks!",
      "noteable_type": "Epic",
      "author_id": 12249784,
      "created_at": "2023-03-17 16:59:27 UTC",
      "updated_at": "2023-03-17 16:59:27 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c1d381b585739d73336b0f2155441396c16c1b56",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1318952980,
      "namespace_id": null
    },
    {
      "note": "@somarandos I think the goal of making design management or design collaboration more of a first class citizen is a great one that we should strive for as we improve the experience. Making it a type of work item could be a solution, but I also agree that exploration and validation here would be helpful. \n\nIn the meantime, I think we can also iterate toward this by improving discoverability and usability across the experience. Also, making design management available in items outside of issues could make it more flexible (which I believe is the intention of \"widgetizing™️ it).\n\nThanks for this feedback! We are sorting through our upcoming priorities in the coming weeks so this is super timely. :rocket:",
      "noteable_type": "Epic",
      "author_id": 3617348,
      "created_at": "2022-10-14 23:38:29 UTC",
      "updated_at": "2022-10-16 17:39:04 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1136673704,
      "namespace_id": null
    },
    {
      "note": "@gweaver [Idea from Twitter: Link MRs to epics.](https://twitter.com/ocramius/status/1545449090242191362?s=21&t=cjM5tsEYGI1c0_VHqQbAVA) I assume MR relations to epics would be possible with work items?",
      "noteable_type": "Epic",
      "author_id": 5534214,
      "created_at": "2022-07-08 22:49:32 UTC",
      "updated_at": "2022-07-09 02:15:09 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "694b91d835f247c2e51a53a6ac080a3ff7a605b2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1021154393,
      "namespace_id": null
    },
    {
      "note": "@dnsmichi TL;DR: yes :smile:",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2022-07-09 02:15:09 UTC",
      "updated_at": "2022-07-09 02:15:09 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "694b91d835f247c2e51a53a6ac080a3ff7a605b2",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1021197705,
      "namespace_id": null
    },
    {
      "note": "@akashsaini21 thanks for the input. In the coming releases, you'll be able to:\n\n1. Create an epic in a group = `Feature` (it will just be called Epic for now but the mechanics are the same)\n2. Create an issue in a project = `User Story`\n3. Create a task as a child of an issue = `Task`\n\nWe will hopefully be releasing the MVC of Tasks in 15.0 (https://gitlab.com/groups/gitlab-org/-/epics/7103) -- which will just be the ability to convert a markdown checklist item into a work item of type Task, edit the title, open/close/delete the task. That will be followed shortly by https://gitlab.com/groups/gitlab-org/-/epics/7448, which will make the task be a formal child of an issue with the ability to create tasks from the \"hierarchy widget\" directly. After that, we'll tackle https://gitlab.com/groups/gitlab-org/-/epics/7168+, https://gitlab.com/gitlab-org/gitlab/-/issues/334810+, and expose the other meta data on issues natively within Tasks. \n\nFYI @mushakov \n\n/cc @msedlakjakubowski when you're back, let's collaborate on improving the docs to differentiate the use cases for Milestones and Iterations.",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2022-04-18 18:55:55 UTC",
      "updated_at": "2022-04-22 11:49:34 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 4303289,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c050f6d9adeb2b5f39c26c36b71d8dab96e4e85",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2022-04-18 18:56:13 UTC",
      "internal": false,
      "id": 915782960,
      "namespace_id": null
    },
    {
      "note": "@gweaver Any tentative plans on when this feature will be available on Gitlab.com?",
      "noteable_type": "Epic",
      "author_id": 10735508,
      "created_at": "2022-07-12 01:08:04 UTC",
      "updated_at": "2022-07-12 13:31:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "2cc013e8dba94d155fa878e7f0859cde5df800f4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1023024656,
      "namespace_id": null
    },
    {
      "note": "@rajkga the overall outcome of this epic will come in many smaller pieces. Tentatively:\n\n- The first bits of https://gitlab.com/groups/gitlab-org/-/epics/7103+ and https://gitlab.com/groups/gitlab-org/-/epics/6286+ will be live on GitLab.com in a week or two. \n- We'll continue to iterate on those two epics until they are complete. \n- The consolidation of epics and issues into work items will likely not be complete until later this year.",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2022-07-12 13:31:14 UTC",
      "updated_at": "2022-07-12 13:31:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "2cc013e8dba94d155fa878e7f0859cde5df800f4",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1023832992,
      "namespace_id": null
    },
    {
      "note": "The following ~customer is interested in this capability \n\n- Subscription: ~\"GitLab Ultimate\" OR ~\"GitLab Premium\" OR ~\"GitLab Free\" \n- Product: ~SaaS \n- Link to request: [Internal Link](https://gitlab.my.salesforce.com/0016100001BQoSS)\n- Priority: ~\"customer priority::10\" \n- Why interested: This customer would like to have the ability to track parent/child requirements and test cases and be able to link them together. \n- What are they trying to solve: They have many cross-platform and cross-team work and need to manage dependencies at a higher level than issues.\n  Our MVP for this capability would be:\n    - Able to map the dependency in one feature for another. That dependent feature can be on the same folder or any subfolders under it. Need at minimum blocking, blocked by\n    - If a feature is blocking another feature, the blocked features cannot end before the blocking feature.\n    - Advanced: In the roadmap view, we would want to see relationships of dependent (blocked, blocking) visually represented. [comment](https://gitlab.com/gitlab-org/gitlab/-/issues/202431#note_519036981)",
      "noteable_type": "Epic",
      "author_id": 4810535,
      "created_at": "2022-01-28 00:52:23 UTC",
      "updated_at": "2023-03-22 19:13:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 4810535,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "bf8958ed261d8cff71aceee6479bf0585902a629",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2023-03-22 19:13:48 UTC",
      "internal": false,
      "id": 824252518,
      "namespace_id": null
    },
    {
      "note": "Hi, When can we expect this product to generally available ? A rough estimate would be cool. Thanks!",
      "noteable_type": "Epic",
      "author_id": 13640713,
      "created_at": "2023-02-05 16:27:40 UTC",
      "updated_at": "2023-02-07 22:39:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c74115c6ff20fe6e52ff64fa541546b80d3485f6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1266084914,
      "namespace_id": null
    },
    {
      "note": "Opensource FTW :v:",
      "noteable_type": "Epic",
      "author_id": 12672053,
      "created_at": "2022-10-15 02:13:57 UTC",
      "updated_at": "2022-10-16 17:39:26 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1136706813,
      "namespace_id": null
    },
    {
      "note": "@gweaver I don't see the work for [add quick actions to work items](https://gitlab.com/gitlab-org/gitlab/-/issues/382160) in the table and I'm not sure how your section works so I didn't want to break it. Can you please add?",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2022-11-23 16:22:53 UTC",
      "updated_at": "2022-11-30 16:24:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8cdb5e10ea60d5fa406c96d60559bf9306679e48",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1183343274,
      "namespace_id": null
    },
    {
      "note": "[A Premium self-managed customer with ~8300 seats](https://gitlab.my.salesforce.com/00161000004bZPD) has submitted this as a **Low** priority item.\n\n- **Link to request:** GitLab team members may click the linked mention to view additional detail for this request within the customer's collaboration project.\n- **Priority:** ~\"customer priority::1\"\n- **Why interested:** \n- **Current solution for this problem:** \n- **Impact to the customer of not having this:** \n- **Questions:** \n- **PM to mention:** undefined\n\n\n _This is an automated comment. If you notice an issue, please `@-mention` me._",
      "noteable_type": "Epic",
      "author_id": 4587943,
      "created_at": "2022-08-15 21:21:36 UTC",
      "updated_at": "2022-08-15 21:24:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c7c9de7c408ed642c07717e73a2b36b39f56ec72",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1065348266,
      "namespace_id": null
    },
    {
      "note": "We specifically need Slack notifications for epics.. thanks!",
      "noteable_type": "Epic",
      "author_id": 1873771,
      "created_at": "2022-08-15 21:52:46 UTC",
      "updated_at": "2022-08-15 22:00:31 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c7c9de7c408ed642c07717e73a2b36b39f56ec72",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1065369342,
      "namespace_id": null
    },
    {
      "note": "@jrreid fyi appears that the automation is somewhat broken, it's re-posting the same comment every hour or so.",
      "noteable_type": "Epic",
      "author_id": 107951,
      "created_at": "2022-08-16 11:31:11 UTC",
      "updated_at": "2022-08-16 13:09:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "87d43cd6a3ad6747fdda6c17e525e21521c9a594",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1066015385,
      "namespace_id": null
    },
    {
      "note": "moved out of the doc, we can consider having this or parts of this as epic description, or not.",
      "noteable_type": "Epic",
      "author_id": 3483274,
      "created_at": "2021-07-29 17:17:54 UTC",
      "updated_at": "2021-07-29 17:17:54 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "74ff6dcdeeb460abe0d2faa66aae430d00468856",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 638962354,
      "namespace_id": null
    },
    {
      "note": "## Engineering questions to address in the kickoff meeting:",
      "noteable_type": "Epic",
      "author_id": 4669960,
      "created_at": "2021-05-26 13:41:47 UTC",
      "updated_at": "2021-05-27 15:27:55 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 4669960,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "61906d7563bb859509e69e6d949d3f401373aa3e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2021-05-26 13:42:09 UTC",
      "internal": false,
      "id": 585551885,
      "namespace_id": null
    },
    {
      "note": "Thanks @gweaver and @acroitor - it's been awesome to see all the collaboration and discussion happening, but definitely has been a bit tricky keeping track of what got said where.",
      "noteable_type": "Epic",
      "author_id": 5965371,
      "created_at": "2021-07-12 20:57:18 UTC",
      "updated_at": "2021-07-12 21:06:26 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "42c61ef0fc04b79e22ebf1e1b70dd50fde0e3cc5",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 624352151,
      "namespace_id": null
    },
    {
      "note": "@mjwood I've added a section above for Certify as well so we can make sure we align our designs and migration plan for both Epics and Requirements. Please fill out the sections with your handle and also add to DRAFT areas!",
      "noteable_type": "Epic",
      "author_id": 4669960,
      "created_at": "2021-05-18 23:03:02 UTC",
      "updated_at": "2021-05-18 23:03:02 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "88cc4beb1ea5df5a0f4747f7dace2328abf19bec",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 578900292,
      "namespace_id": null
    },
    {
      "note": "I think the problem with this is that it will be very dynamic, i.e. change quite a bit and it will be additional work to keep the doc up to date and not confuse devs on where we are an why it changed, so I think it will be better to have it at epics/issues level.",
      "noteable_type": "Epic",
      "author_id": 3483274,
      "created_at": "2021-08-26 09:01:42 UTC",
      "updated_at": "2021-08-26 09:01:42 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "74ff6dcdeeb460abe0d2faa66aae430d00468856",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 661461384,
      "namespace_id": null
    },
    {
      "note": "@gweaver I'm back and happy to collaborate :thumbsup: I'll schedule some time, perhaps next week?",
      "noteable_type": "Epic",
      "author_id": 4867274,
      "created_at": "2022-04-22 14:39:59 UTC",
      "updated_at": "2022-04-26 18:35:02 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c050f6d9adeb2b5f39c26c36b71d8dab96e4e85",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 921161079,
      "namespace_id": null
    },
    {
      "note": "Thank you for the clarity there. @gweaver",
      "noteable_type": "Epic",
      "author_id": 11166071,
      "created_at": "2022-04-20 09:30:04 UTC",
      "updated_at": "2022-04-20 13:19:37 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "0c050f6d9adeb2b5f39c26c36b71d8dab96e4e85",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 917910010,
      "namespace_id": null
    },
    {
      "note": "Thanks for confirming @pherlihy !\n\nFYI @g.hickman",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2022-08-15 22:00:53 UTC",
      "updated_at": "2022-08-26 21:14:13 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c7c9de7c408ed642c07717e73a2b36b39f56ec72",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1065373928,
      "namespace_id": null
    },
    {
      "note": "@jrreid Thanks for the comment! Is the need centered around Slack notifications for Epics or are there other gaps that should be addressed?",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2022-08-15 21:24:14 UTC",
      "updated_at": "2022-08-15 21:24:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c7c9de7c408ed642c07717e73a2b36b39f56ec72",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1065350479,
      "namespace_id": null
    },
    {
      "note": "Hi! \nWe are a ~\"GitLab Premium\"  customer who are looking into moving our project management into gitlab.\n\nOur first step is a more conscious use of epics. In relation to that we are wondering if there is any ETA for when epics will have description templates available?\n\nAwesome work you are doing - really looking forward to the changes coming with this initiative!",
      "noteable_type": "Epic",
      "author_id": 10166363,
      "created_at": "2023-04-14 10:33:51 UTC",
      "updated_at": "2023-04-14 14:39:39 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "34c474f960e4436f9b696f1c403b52840a682268",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1352866073,
      "namespace_id": null
    },
    {
      "note": "@somarandos Thank you for taking the time to comment and explain your concern regarding the direction of Design Management as it relates to our Work Items roadmap. \n\n>Imho we have to treat basically a flat list of work_items and let them mix and match with all the possible combinations to suite their use cases best.\n\nI completely agree with this statement, but transparently, I've just recently joined the ~\"group::product planning\" and I may be missing historical context as to why Design Management might be not a fit for work items.\n\n@uhlexsis @kushalpandya have we discussed/considered a work item type of `designs`?",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2022-10-12 19:06:20 UTC",
      "updated_at": "2022-10-12 19:06:20 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1133607894,
      "namespace_id": null
    },
    {
      "note": "Thanks @vermeeren! Sorry for the noise in your inboxes. I've deactivated the automation.",
      "noteable_type": "Epic",
      "author_id": 4587943,
      "created_at": "2022-08-16 13:09:41 UTC",
      "updated_at": "2022-08-16 13:29:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "87d43cd6a3ad6747fdda6c17e525e21521c9a594",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1066154088,
      "namespace_id": null
    },
    {
      "note": "### Work Item Types Customizations\n\nNot sure this was asked discussed somewhere before if so I would be happy to read that and contribute there. \n\nThis is more a conceptual question rather than technical, but I do wonder how far does the work item customization go in the scope of a BIG company?\n\nWe initially started with the idea that we will have instance wide work item types that are basically predefined initially by the GitLab setup, e.g. Issue, Task, Epic, Requirement, etc\n\nThese instance level predefined types can be customized at root level groups by renaming, disabling, changing their collection of available widgets or adding a new work item type altogether.\n\nThis is perhaps a much further iteration, but I wonder how much customization we would need to account for at the sub-groups levels? \n\nWould disabling/hiding specific work item types or some of their widgets be enough customization? \n\nI'm worried allowing full customization at any sub-group level would add the amount of complexity and confusion that will be impossible to deal with in complex work items structures. At the same time having a full complex work items structure roll down to all subgroups in a hierarchy may also be unnecessary if you consider that in an big company some organizations(or parts of it) may rely only on parts of the work items :thinking: \n\nI don't think we need more than one hierarchy of work items per organization, do we ? :thinking:",
      "noteable_type": "Epic",
      "author_id": 3483274,
      "created_at": "2022-11-03 11:11:00 UTC",
      "updated_at": "2022-11-03 13:46:30 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a885d3a0405c69d9e1d528b701246d586832404e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1158807613,
      "namespace_id": null
    },
    {
      "note": "This is a very timely question @acroitor as @jprovaznik was just considering this in [another thread](https://gitlab.com/gitlab-org/gitlab/-/issues/378799#note_1158651476). For the immediate future, we're limiting the customization at the root namespace with the children subgroups/projects inheriting this information.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2022-11-03 13:46:30 UTC",
      "updated_at": "2022-11-04 09:18:22 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "a885d3a0405c69d9e1d528b701246d586832404e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1159059501,
      "namespace_id": null
    },
    {
      "note": "@amandarueda I wonder if we need to treat Designs as an independent Work Item type as we've always tied designs with an Issue, sure the discussions for each design are separate from discussions within issue itself so in that case, we can have designs as a widget that can be associated to Issue (or any other Work Item type) as that will allow us to extend designs to be available with other Work Item types as well like MRs or Epics.",
      "noteable_type": "Epic",
      "author_id": 411701,
      "created_at": "2022-10-13 05:20:31 UTC",
      "updated_at": "2022-10-13 05:20:31 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1134021324,
      "namespace_id": null
    },
    {
      "note": "@amandarueda done!",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2022-11-30 16:24:54 UTC",
      "updated_at": "2022-12-05 19:25:12 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "8cdb5e10ea60d5fa406c96d60559bf9306679e48",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1191498532,
      "namespace_id": null
    },
    {
      "note": "Thats great News! Thank you for the replies @gweaver @amandarueda :pray: So according to this we might take one more look in Q3 while trying to figure out others parts of the migration.",
      "noteable_type": "Epic",
      "author_id": 13640713,
      "created_at": "2023-02-11 04:35:04 UTC",
      "updated_at": "2023-02-15 16:06:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "c74115c6ff20fe6e52ff64fa541546b80d3485f6",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1275071792,
      "namespace_id": null
    },
    {
      "note": "Just closing the loop on this one, created this [epic](https://gitlab.com/groups/gitlab-org/-/epics/9325) for further exploration.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2022-11-24 19:18:26 UTC",
      "updated_at": "2022-11-24 19:18:26 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1185065576,
      "namespace_id": null
    },
    {
      "note": "@uhlexsis I've further refined the description to completely separate the work by product groups within Plan. You can coordinate with @cdybenko or @mjwood to update the critical path for each respective product group as ya'll see fit. \n\n> Do we want to map each of these to an issue that can be prioritized and moved through the workflow? Something else?\n\nThat is up to you and Christen. ~\"group::project management\" is going to move forward with `Tasks` as soon as the parenting widget (MVC 2) is integrated into the new work item UI (and works / has appropriate APIs). As work is now fully separated out amongst groups, ~\"group::product planning\" should feel empowered to work on `Feature` in tandem with `Task`. I've noted the dependencies between the two groups in the critical path. \n\nAs far as URLs and how to integrate `Feature` into the current UI while it's WIP, that is up to you and Christen to sort out! I'm going to have ~\"group::project management\" proceed with working on the widgets and functionality that are necessary to support `Feature` (epic parity) first, but under the `Task` type -- which also means they will be available for `Feature` whenever that type is visible in the UI. Basic TL;DR of what's blocking ~\"group::project management\" in the immediate:\n\n- Getting the \"parenting widget\" you designed integrated into the new Work Item View. Ideally, for my immediate use case (`Task`), the widget should be able to create a new child with just a title, edit the title inline, remove the relationship, delete/close the child from the widget. But again, what you do here is up to you and Christen :smile:  \n\nOnce that is integrated into the new work item UI, I'll work on backporting the \"parenting widget\" to the legacy issue UI and displaying the new work item detail view in a modal or something similar within the legacy issue UI. This should enable us to iterate on the new work item UI while delivering net-new value to our wider community (~\"group::product planning\" should feel empowered to do the same in parallel with `Feature`!)",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2021-11-08 14:41:53 UTC",
      "updated_at": "2021-11-08 14:41:53 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "d1d5b4e9851d820de0a3d8c77f94a4ab74a582c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 726852516,
      "namespace_id": null
    },
    {
      "note": "@uhlexsis we made some modifications to the ownership above since your comment. \n\nLet's regroup and figure out what we need to launch the items that are blocking ~\"group::project management\".\n\nRight now, we'll have our own path to ship the parity for the hierarchy widget onto the legacy issue view and the template for work item hierarchies.\n\nAnything that is \"upgraded\" functionality can probably move out of this initiative once we create the issues.",
      "noteable_type": "Epic",
      "author_id": 4669960,
      "created_at": "2021-11-16 00:31:01 UTC",
      "updated_at": "2021-11-16 00:31:01 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "d1d5b4e9851d820de0a3d8c77f94a4ab74a582c7",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 733917730,
      "namespace_id": null
    },
    {
      "note": "Alright, thanks for the quick reply!",
      "noteable_type": "Epic",
      "author_id": 10166363,
      "created_at": "2023-04-15 21:20:25 UTC",
      "updated_at": "2023-04-18 14:57:23 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "34c474f960e4436f9b696f1c403b52840a682268",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1354120307,
      "namespace_id": null
    },
    {
      "note": "Hey thanks @mariusaarsnes for showing your interest! \n\nMigrating epics to work items will unlock dozens of feature improvements and resolve bug issues just by being on the shared work items framework. Notable improvements on day 1 will be assignees, milestones, **templates** and nesting that carries through to tasks which will allow for rolled up features like total weight of an epic.\n\nOur current timeline lands us migrating in Q3 this year, but this is our best guess at this time and can change due to unforeseen reasons. Please let me know if you have any questions!",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-04-14 14:11:57 UTC",
      "updated_at": "2023-04-18 14:13:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "34c474f960e4436f9b696f1c403b52840a682268",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1353168672,
      "namespace_id": null
    },
    {
      "note": "Please help me think right.\n\nIf everything is moving to a work_item - widget model of working, then why is **Design** a widget ? :thinking: . Designs now are sort of a complete entity in itself, multiple people collaborate on it, it has threads and dirverse set of metadata attached to it.\n\nTo me it makes sense to move it to a dedicated work item and have it work like how all work items would work. That includes it being linkable to other work items. That would only strengthen the design system management in Gitlab and help remove confusion.\n\nCoz right now 2 things really are keeping me from understanding this whole move towards work items. One is Tasks being called as special work items and the other is the design management.\n\nCan a task have a design_work with it ? Sure . Can task have tasks ? why not. Can a epic be attached to a task? Perhaps ? To me it feels like if we start thinking about use cases and start putting guard rails around the concept then one has to think about all the possible use cases and thats kinda hard to predict ahead of time.\n\nImho we have to treat basically a flat list of work_items and let them mix and match with all the possible combinations to suite their use cases best.\n\nIf anyone could please explain these 2 anomalies that would be great. Coz to me it felt like we are moving away from confusing exceptions over time. Thanks",
      "noteable_type": "Epic",
      "author_id": 12672053,
      "created_at": "2022-10-07 12:50:27 UTC",
      "updated_at": "2022-10-12 19:06:20 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 12672053,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2022-10-07 13:01:03 UTC",
      "internal": false,
      "id": 1128126482,
      "namespace_id": null
    },
    {
      "note": "@amandarueda Thanks for the reply.\n\nI have been looking into this for a few days now and have started to get some Idea as to what the overall direction of work items is. I might be wrong, but it seems like designs are being put forward as a widget in form of an app rather than as a work-item. Right now we create an issue and have designs at an LFS attachment item on it. Tasks however are a genuine work-item entities and can be attached to possibly any work-item, works well. \n\nMy argument is Design should be given the same functionality as as work-items, coz merely treating as a widget does not do it justice, some issues are purely designed focussed. They need their own special UX, the need is always gonna grow.\n\nWork items folks might argue that one can always make a custom work-item and name it as design. The design widget is just a file upload widget anyway. That makes sense as well, but not totally imho.\n\nI think designs should be added as a default work-item for Gitlab and must be given special treatment, like tasks are right now. That would help promote it as a designer friendly platform. We must treat design work as a first class citizen. By treating it as a widget would just put it in the back burner and we miss out on a good opportunity, coz frankly no other project management app has that right now.\n\nI hope we could have some discussions on it, perhaps there already has been. I couldn't find any issues on it though.",
      "noteable_type": "Epic",
      "author_id": 12672053,
      "created_at": "2022-10-13 01:53:47 UTC",
      "updated_at": "2022-10-13 01:53:47 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1133895567,
      "namespace_id": null
    },
    {
      "note": "One of the goals that I think is to **simplify** this issuable system that currently works in gitlab. Some things are widgets , some are issues. Some are attached to something, some are not. For this to bring any simplicity we have to simplify and minimise the vocabulary.\n\nRight now the current direction points to scenario where anything that has collaborative work on it is called a **work-item**. Fields on the work-item entities are called **widgets**. All work-items have this **flexible relationship model** where users can mix and match to model our their project management needs.\n\nSo task-work-item can be **attached** to an issue-work-item then it can also be a **standalone**. Features can be modelled over this task and issue **relationship**, for example let the issue be resolved when all the tasks are done.\n\nIf designs are to be a work-item then we must **not** call it a widget ? I think we must not. We can just call it a **design-item** perhaps. Not really sure. But we must come up with a **defined vocabulary** first , so that it clears up the confusion a bit. But I get that its a WIP.",
      "noteable_type": "Epic",
      "author_id": 12672053,
      "created_at": "2022-10-13 06:35:28 UTC",
      "updated_at": "2022-10-13 13:33:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": 12672053,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2022-10-13 06:38:13 UTC",
      "internal": false,
      "id": 1134071928,
      "namespace_id": null
    },
    {
      "note": "Completely agree @amandarueda! @somarandos So glad you continue to engage in this discussion as I definitely am not one one side or the other. I see both.\n\nAs a designer, I love the idea of making design a first class citizen and that some work is decidedly design first or based! I just had a similar conversation with one of my designers.\n\nI also see the road we're heading down where everything is being considered a work item. We do need user informed and validated definitions as we push forward in this territory.",
      "noteable_type": "Epic",
      "author_id": 9676400,
      "created_at": "2022-10-13 17:26:05 UTC",
      "updated_at": "2022-10-14 02:15:51 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "cb645904a5bbbe38cc3fcf12b105df1c88e86f7f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1135069691,
      "namespace_id": null
    },
    {
      "note": "Hello @EHickson! Thank you for letting us know that the customer is very interested in our initiative!\n\nWe are actively working on feature parity in work items for epics and issues. As of now, we are targeting migration of epics this calendar year with migration of issues shortly thereafter, but please note that timelines may be subject to adjustments as we progress.\n\nOur team is committed to delivering the best possible solution, and we appreciate any feedback that can help us enhance the product. Could you kindly provide more insights into the customer's specific pain points or use cases related to this initiative? Understanding their needs will enable us to prioritize and optimize value.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-07-25 15:02:41 UTC",
      "updated_at": "2023-07-25 15:02:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3811584f5297d6b246a7bcadc28f192053b35f6f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1487390960,
      "namespace_id": null
    },
    {
      "note": "Hi @amandarueda, is this still a possibility for Q3, or is there an updated roadmap for it? A customer is very interested and has been looking into the documentation. Thanks!",
      "noteable_type": "Epic",
      "author_id": 12045345,
      "created_at": "2023-07-24 17:03:17 UTC",
      "updated_at": "2023-07-25 15:02:41 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 273703,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "3811584f5297d6b246a7bcadc28f192053b35f6f",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1485793144,
      "namespace_id": null
    }
  ],
  "note_authors": [
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 10219953,
      "username": "nmarsh2",
      "name": "Nicholas Marsh"
    },
    {
      "id": 3507264,
      "username": "donaldcook",
      "name": "Donald Cook"
    },
    {
      "id": 4669960,
      "username": "cdybenko",
      "name": "Christen Dybenko"
    },
    {
      "id": 4669960,
      "username": "cdybenko",
      "name": "Christen Dybenko"
    },
    {
      "id": 13640713,
      "username": "cu00oe",
      "name": "Cuoooe"
    },
    {
      "id": 13640713,
      "username": "cu00oe",
      "name": "Cuoooe"
    },
    {
      "id": 3617348,
      "username": "uhlexsis",
      "name": "Alexis Ginsberg"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 4669960,
      "username": "cdybenko",
      "name": "Christen Dybenko"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 4418630,
      "username": "johnhope",
      "name": "John Hope"
    },
    {
      "id": 3483274,
      "username": "acroitor",
      "name": "Alexandru Croitor"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 3507264,
      "username": "donaldcook",
      "name": "Donald Cook"
    },
    {
      "id": 5965371,
      "username": "jlear",
      "name": "Jake Lear"
    },
    {
      "id": 3483274,
      "username": "acroitor",
      "name": "Alexandru Croitor"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 5961404,
      "username": "euko",
      "name": "Eulyeon Ko"
    },
    {
      "id": 907418,
      "username": "abitrolly",
      "name": "Anatoli Babenia"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 4261879,
      "username": "dzalbo",
      "name": "Vladimir Dzalbo"
    },
    {
      "id": 3617348,
      "username": "uhlexsis",
      "name": "Alexis Ginsberg"
    },
    {
      "id": 11166071,
      "username": "akashsaini21",
      "name": "Akash Saini"
    },
    {
      "id": 10188931,
      "username": "Rwarcards762",
      "name": "Christopher Rice"
    },
    {
      "id": 7690791,
      "username": "rachel_fuerst",
      "name": "Rachel Fuerst"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 3659089,
      "username": "ccasella",
      "name": "Cristiano Casella"
    },
    {
      "id": 11166071,
      "username": "akashsaini21",
      "name": "Akash Saini"
    },
    {
      "id": 12249784,
      "username": "jess_perry",
      "name": "Jess Perry"
    },
    {
      "id": 3617348,
      "username": "uhlexsis",
      "name": "Alexis Ginsberg"
    },
    {
      "id": 5534214,
      "username": "dnsmichi",
      "name": "Michael Friedrich"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 10735508,
      "username": "rajkga",
      "name": "Rajesh Kumar G"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 4810535,
      "username": "shoyle1",
      "name": "Sean John Hoyle"
    },
    {
      "id": 13640713,
      "username": "cu00oe",
      "name": "Cuoooe"
    },
    {
      "id": 12672053,
      "username": "somarandos",
      "name": "soma randos"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 4587943,
      "username": "jrreid",
      "name": "Jamie Reid"
    },
    {
      "id": 1873771,
      "username": "pherlihy",
      "name": "Patrick Herlihy"
    },
    {
      "id": 107951,
      "username": "vermeeren",
      "name": "Melvin Vermeeren"
    },
    {
      "id": 3483274,
      "username": "acroitor",
      "name": "Alexandru Croitor"
    },
    {
      "id": 4669960,
      "username": "cdybenko",
      "name": "Christen Dybenko"
    },
    {
      "id": 5965371,
      "username": "jlear",
      "name": "Jake Lear"
    },
    {
      "id": 4669960,
      "username": "cdybenko",
      "name": "Christen Dybenko"
    },
    {
      "id": 3483274,
      "username": "acroitor",
      "name": "Alexandru Croitor"
    },
    {
      "id": 4867274,
      "username": "msedlakjakubowski",
      "name": "Marcin Sedlak-Jakubowski"
    },
    {
      "id": 11166071,
      "username": "akashsaini21",
      "name": "Akash Saini"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 10166363,
      "username": "marius_ruter",
      "name": "Marius Aarsnes"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 4587943,
      "username": "jrreid",
      "name": "Jamie Reid"
    },
    {
      "id": 3483274,
      "username": "acroitor",
      "name": "Alexandru Croitor"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 411701,
      "username": "kushalpandya",
      "name": "Kushal Pandya"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 13640713,
      "username": "cu00oe",
      "name": "Cuoooe"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 4669960,
      "username": "cdybenko",
      "name": "Christen Dybenko"
    },
    {
      "id": 10166363,
      "username": "marius_ruter",
      "name": "Marius Aarsnes"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 12672053,
      "username": "somarandos",
      "name": "soma randos"
    },
    {
      "id": 12672053,
      "username": "somarandos",
      "name": "soma randos"
    },
    {
      "id": 12672053,
      "username": "somarandos",
      "name": "soma randos"
    },
    {
      "id": 9676400,
      "username": "badnewsblair",
      "name": "Blair Christopher"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 12045345,
      "username": "EHickson",
      "name": "Ellie Hickson"
    }
  ],
  "namespace_hierarchy": [
    {
      "id": 9970,
      "name": "GitLab.org",
      "path": "gitlab-org",
      "type": "Group"
    }
  ]
}
