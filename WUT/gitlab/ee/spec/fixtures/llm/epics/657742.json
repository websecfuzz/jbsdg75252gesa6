{
  "data": {
    "id": 657742,
    "group_id": 9970,
    "author_id": 2890431,
    "assignee_id": null,
    "iid": 9290,
    "updated_by_id": 2890431,
    "last_edited_by_id": 2890431,
    "lock_version": 28,
    "start_date": "2023-08-01",
    "end_date": "2023-10-31",
    "last_edited_at": "2023-06-15 16:32:16 UTC",
    "created_at": "2022-11-17 21:14:25 UTC",
    "updated_at": "2023-10-23 20:06:12 UTC",
    "title": "✈️ Work Items - Migrate Epics to Work Items",
    "description": "## Summary\n\nEpics are a flexible tool to support the portfolio planning process. Regardless of your planning methodology, we think epics can be a critical part of your planning toolkit. However, our legacy epics architecture was built as a standalone object separate from other features like issues and requirements. Given this, we're inefficient with our development efforts of common widgets and limited in building scalable relational models.\n\nAs part of our move to [work items](https://gitlab.com/groups/gitlab-org/-/epics/6033 \"[INITIATIVE] Work Items\") we will migrate the legacy epic features, related boards, views and data to the new architecture.\n\nFor most features, we are conscious to not change the user’s mental model so the transition to the work items framework is not abrasive. For some features however, we must implement the feature in a new way due to the functional differences between the work items layout and the issuables layout. Additionally, there are some features which need UX improvement, like designs uploads. In this case, we will look for opportunities to improve known usability challenges as we build the feature on work items.\n\nMigrating epics to work items will unlock dozens of feature improvements and bug issues just by being on the shared work items framework. Notable improvements on day 1 will be assignees, milestones, and nesting that carries through to tasks which will allow for rolled up features like total weight of an epic.\n\nThis epic will be used to track the work needed for epic migration.\n\n## General Work Item Context\n\nDifferent object types require different fields and different context, depending on what job they are being used to accomplish. Instead of each object type diverging into a separate model, we can standardize on an underlying common model that we can customize with the widgets (one or more attributes) it contains. Epics, issues, requirements, and others all have similar but just subtle enough differences in common interactions that the user needs to hold a complicated mental model of how they each behave. Transitioning all three will provide a more efficient user experience.",
    "start_date_sourcing_milestone_id": null,
    "due_date_sourcing_milestone_id": null,
    "start_date_fixed": "2023-08-01",
    "due_date_fixed": "2023-10-31",
    "start_date_is_fixed": true,
    "due_date_is_fixed": true,
    "closed_by_id": null,
    "closed_at": null,
    "parent_id": 273703,
    "relative_position": -43989,
    "state_id": 1,
    "start_date_sourcing_epic_id": null,
    "due_date_sourcing_epic_id": null,
    "external_key": null,
    "confidential": false,
    "color": "#217645",
    "total_opened_issue_weight": 48,
    "total_closed_issue_weight": 188,
    "total_opened_issue_count": 56,
    "total_closed_issue_count": 128
  },
  "author": {
    "id": 2890431,
    "username": "amandarueda",
    "name": "Amanda Rueda"
  },
  "labels": [
    {
      "id": 29655839,
      "title": "CPO Interest",
      "color": "#36454f",
      "project_id": null,
      "created_at": "2023-03-21 19:51:00 UTC",
      "updated_at": "2023-03-21 19:51:00 UTC",
      "template": false,
      "description": "",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 27355480,
      "title": "FY24",
      "color": "#c21e56",
      "project_id": null,
      "created_at": "2022-10-14 15:07:27 UTC",
      "updated_at": "2022-10-14 15:07:52 UTC",
      "template": false,
      "description": "",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 28630294,
      "title": "FY24::Q3",
      "color": "#c21e56",
      "project_id": null,
      "created_at": "2023-01-09 19:50:43 UTC",
      "updated_at": "2023-01-09 19:50:43 UTC",
      "template": false,
      "description": "Efforts Targeted For Release Between Aug-Oct 2023",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 29821275,
      "title": "Now",
      "color": "#8fbc8f",
      "project_id": null,
      "created_at": "2023-04-04 14:14:17 UTC",
      "updated_at": "2023-04-04 14:14:17 UTC",
      "template": false,
      "description": "Features that are part of short-term planning.",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 1672342,
      "title": "customer+",
      "color": "#ad4363",
      "project_id": null,
      "created_at": "2017-03-10 22:25:11 UTC",
      "updated_at": "2023-05-30 01:57:26 UTC",
      "template": false,
      "description": "Features and bugs reported by large enterprise customers. This label is in use by the product org, please post in #product Slack channel if you have questions.",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 3103451,
      "title": "devops::plan",
      "color": "#E44D2A",
      "project_id": null,
      "created_at": "2017-12-01 19:00:23 UTC",
      "updated_at": "2022-05-11 06:40:37 UTC",
      "template": false,
      "description": "Issues for the Plan stage of the DevOps lifecycle (e.g. Project Management, Agile Portfolio Management, Requirements Management)",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 10690700,
      "title": "group::product planning",
      "color": "#A8D695",
      "project_id": null,
      "created_at": "2019-05-22 19:55:52 UTC",
      "updated_at": "2020-10-16 19:33:41 UTC",
      "template": false,
      "description": "Issues belonging to the Product Planning group of the Plan stage of the DevOps lifecycle. See https://about.gitlab.com/handbook/product/product-categories/#product-planning-group",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 14918378,
      "title": "section::dev",
      "color": "#F0AD4E",
      "project_id": null,
      "created_at": "2020-05-11 22:11:57 UTC",
      "updated_at": "2020-05-11 22:11:57 UTC",
      "template": false,
      "description": "Issues related to the Dev section",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 10230929,
      "title": "type::feature",
      "color": "#009966",
      "project_id": null,
      "created_at": "2019-04-09 12:29:58 UTC",
      "updated_at": "2022-03-28 23:33:53 UTC",
      "template": false,
      "description": "Any issue/MR that contains work to support the implementation of a feature and/or results in an improvement in the user experience. Read more at https://about.gitlab.com/handbook/engineering/metrics/#work-type-classification",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    },
    {
      "id": 25541419,
      "title": "work items",
      "color": "#428BCA",
      "project_id": null,
      "created_at": "2022-06-13 14:41:30 UTC",
      "updated_at": "2022-06-13 14:41:30 UTC",
      "template": false,
      "description": "Related to the Work Items feature",
      "type": "GroupLabel",
      "group_id": 9970,
      "lock_on_merge": false
    }
  ],
  "start_date_sourcing_milestone": null,
  "due_date_sourcing_milestone": null,
  "notes": [
    {
      "note": "Thanks for creating this @amandarueda :star2: !\n\nSome comments/questions \n- Start and end date (including inheritance) is missing\n- Roadmap color is missing\n- Milestones are not part of epics today, so it's not a blocker\n- Are there specific gaps with todos and notifications? I believe that a lot has been built out for Tasks already.",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2022-11-29 22:09:15 UTC",
      "updated_at": "2022-11-29 22:09:15 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "46c472121ec6efb0a9c80f5f7e5c768111501414",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1190281519,
      "namespace_id": null
    },
    {
      "note": "@amandarueda Y'all made a ton of progress toward epic migration by building OKRs. Is there an iteration path that allow is to have an opt-in/beta experience for new epics powered by work items without migrating old data ahead of Q3? What would be the bare minimum MVC for an epic-like experience that allows parenting of issues at the project level?",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2023-01-31 03:20:44 UTC",
      "updated_at": "2023-02-01 16:20:26 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6fd70846d24cfd0f32b0f8a32ec87043754c887b",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1258499422,
      "namespace_id": null
    },
    {
      "note": "> Can we ignore them? Is this behind a feature flag?\n\n@felipe_artur Yes, we could just ignore them and no this is not behind a feature flag, anyone could use the GraphQL API to create a work item of type Epic. We could just ignore them and then when the sync mechanism is implemented some of them won't show up in the legacy epics and while that might be alright, perhaps we should reduce the impact of this by putting creation and listing behind a feature flag",
      "noteable_type": "Epic",
      "author_id": 8110537,
      "created_at": "2023-10-19 17:49:48 UTC",
      "updated_at": "2023-10-19 17:49:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "644d8011ed79e4817cb39481e1ae3e595482abb1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1611196624,
      "namespace_id": 9970
    },
    {
      "note": "Yes, I can do this, @jprovaznik. I think this can potentially reduce the impact of a single direction migration from epics into work items in the future",
      "noteable_type": "Epic",
      "author_id": 8110537,
      "created_at": "2023-10-19 17:50:56 UTC",
      "updated_at": "2023-10-19 17:50:56 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "233b12f118489da84c8a0b3f6844130e48e1a816",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1611198180,
      "namespace_id": 9970
    },
    {
      "note": "@mushakov interesting idea. What would be the goal of the early MVC? To obtain feedback with the intention of acting on it prior to GA?\n\nI'd definitely like to work with @uhlexsis on what we could consider the minimal version of the feature-set, then I can get back to you on whether it is feasible, pros/cons, etc. Understanding the goal of the effort would be helpful though.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-02-01 16:20:26 UTC",
      "updated_at": "2023-02-01 16:20:26 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6fd70846d24cfd0f32b0f8a32ec87043754c887b",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1261616941,
      "namespace_id": null
    },
    {
      "note": "@amandarueda The goals would be to:\n- Get feedback earlier \n- Unlock value for customers that won't use epics today because of the limitation of being group only",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2023-02-01 16:30:07 UTC",
      "updated_at": "2023-02-01 16:44:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6fd70846d24cfd0f32b0f8a32ec87043754c887b",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1261634345,
      "namespace_id": null
    },
    {
      "note": "Also, I am definitely aware that there would be cons and tradeoffs to be considered! Let me know your thoughts on whether there's an approach here that is feasible and would provide enough benefits.",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2023-02-01 16:31:20 UTC",
      "updated_at": "2023-02-01 16:45:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6fd70846d24cfd0f32b0f8a32ec87043754c887b",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1261636659,
      "namespace_id": null
    },
    {
      "note": "@mushakov I don't follow, do you mean the POC drawer on the listing page? I wasn't planning on implementing that until after epic migration.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-06-15 20:56:58 UTC",
      "updated_at": "2023-06-15 20:56:58 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cf1bcff87174e886287aea4837109c844bbad27",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1433111137,
      "namespace_id": null
    },
    {
      "note": "@mushakov @uhlexsis @kushalpandya I created this epic to specifically track the activities required for migrating Epics to work items. Please lmk if anything is missing.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2022-11-22 14:37:11 UTC",
      "updated_at": "2022-11-29 22:09:15 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "46c472121ec6efb0a9c80f5f7e5c768111501414",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1181530268,
      "namespace_id": null
    },
    {
      "note": "Thanks so much for the review and feedback @mushakov! Updates have been made. Regarding todos and notifications, it's my understanding that they are feature-based, so we need to create the triggering of the event in the new infrastructure. I'll leave them on the list for now just so we can ensure we have those covered for epics.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2022-12-06 16:28:21 UTC",
      "updated_at": "2023-01-31 03:16:59 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "46c472121ec6efb0a9c80f5f7e5c768111501414",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1198474235,
      "namespace_id": null
    },
    {
      "note": "@amandarueda @gweaver I added https://gitlab.com/groups/gitlab-org/-/epics/8308+ to this table since it is critical path for epics moving to work items :pencil:",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2023-01-09 22:18:35 UTC",
      "updated_at": "2023-01-11 15:48:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": null,
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "14090dfdff2ddf52ac3c520c11bdcb8d6f1d1781",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1232982136,
      "namespace_id": null
    },
    {
      "note": "Thanks @mushakov! I've created https://gitlab.com/groups/gitlab-org/-/epics/9815 to track the discussion. I'll get back to you when I have something to share.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-02-01 16:46:18 UTC",
      "updated_at": "2023-02-01 21:28:56 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6fd70846d24cfd0f32b0f8a32ec87043754c887b",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1261660109,
      "namespace_id": null
    },
    {
      "note": "@kushalpandya I've moved all work which blocks epic migration to this parent. Can you please review and see if we're missing anything?",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-06-15 18:09:01 UTC",
      "updated_at": "2023-06-16 08:13:49 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "d8057f13c86dd97d88438e23e96776bc670b477e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1432954426,
      "namespace_id": null
    },
    {
      "note": "@amandarueda @nickbrandt that we should consider as part of changing the experience for epics is if we should have something that tells users about the new drawer. Have ya'll discussed this yet? What are your thoughts?\n\ncc: @gweaver since we will likely need something similar for issues and @jackib for awareness.",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2023-06-15 19:59:42 UTC",
      "updated_at": "2023-06-16 14:57:01 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cf1bcff87174e886287aea4837109c844bbad27",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1433059500,
      "namespace_id": null
    },
    {
      "note": "@amandarueda what i mean is that with work items the experience for epics will change. The UI will look different, some items might have changed locations, and you potentially will be introducing new functionality for epics. When we launched Tasks, we implemented this : https://gitlab.com/gitlab-org/gitlab/-/issues/366687",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2023-06-15 21:58:16 UTC",
      "updated_at": "2023-06-15 21:58:16 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cf1bcff87174e886287aea4837109c844bbad27",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1433175319,
      "namespace_id": null
    },
    {
      "note": "Ah, got it, thanks @mushakov. Below is my plan, I'll open a rollout issue to document, I welcome your feedback!\n\n- TBD: Offer users a toggle between experiences. This is a **maybe** based on LOE, but is possible since we'll maintain the existing epics tables.\n- Create a blog post explaining the change, highlighting the improvements available and those to come.\n- Pop a banner for the first 45 days which links to the blog post.\n- Add something to the [what's new](https://docs.gitlab.com/ee/administration/whats-new.html) menu, linking to the blog post.",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-06-15 22:05:51 UTC",
      "updated_at": "2023-06-16 14:56:58 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cf1bcff87174e886287aea4837109c844bbad27",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1433179594,
      "namespace_id": null
    },
    {
      "note": "@amandarueda I think that @jackib will have a good perspective here since she was part of the Growth team.  \n\nAlso, take a look at the work that the Service Desk team is planning for toggling experiences. https://gitlab.com/gitlab-org/gitlab/-/issues/414313. You might be able to re-use some of it :heart_eyes_cat:.",
      "noteable_type": "Epic",
      "author_id": 5709669,
      "created_at": "2023-06-15 22:08:32 UTC",
      "updated_at": "2023-06-15 22:10:00 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cf1bcff87174e886287aea4837109c844bbad27",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1433181259,
      "namespace_id": null
    },
    {
      "note": "Thanks @amandarueda! I see the order of items in this Epic is looking correct and all we're missing is some issues in child Epics so I'll create and add those. :thumbsup:",
      "noteable_type": "Epic",
      "author_id": 411701,
      "created_at": "2023-06-16 08:13:49 UTC",
      "updated_at": "2023-06-16 13:43:48 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "d8057f13c86dd97d88438e23e96776bc670b477e",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1433581618,
      "namespace_id": null
    },
    {
      "note": "@amandarueda A good model could be the navigation. Nick worked on that so you could check with him on how the rollout went and what communication seemed most effective.\n\nI hope that we will have several rounds of internal and external feedback that we can use to inform the best rollout plan - based on feedback we could do more or less than what you have planned so far.",
      "noteable_type": "Epic",
      "author_id": 4089849,
      "created_at": "2023-06-20 18:11:42 UTC",
      "updated_at": "2023-06-20 18:25:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "6cf1bcff87174e886287aea4837109c844bbad27",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1438489558,
      "namespace_id": null
    },
    {
      "note": "@amandarueda @kushalpandya I'm asking for confirmation from ~\"group::project management\" engineers, but I think we'll be done with https://gitlab.com/groups/gitlab-org/-/epics/8771+ and https://gitlab.com/groups/gitlab-org/-/epics/8778+ in the 16.4/16.5 range (sep 22/oct 22). \n\nAre there things that ~\"group::product planning\" can be working on in parallel to help accelerate the migration? Things that come to mind:\n\n - https://gitlab.com/groups/gitlab-org/-/epics/8194+\n - https://gitlab.com/groups/gitlab-org/-/epics/7459+\n - https://gitlab.com/groups/gitlab-org/-/epics/10845+ (more context/discussion around this here -- https://gitlab.com/groups/gitlab-org/-/epics/9673#note_1427378890)\n - Conducting a spike to establish the implementation path for the migration.\n - ...What other things are on the riskier side that we should mitigate sooner rather than later?",
      "noteable_type": "Epic",
      "author_id": 4303289,
      "created_at": "2023-07-25 15:34:02 UTC",
      "updated_at": "2023-07-25 15:51:29 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "11e164faee1d4f9402fdb8b70e0afc0eac16988a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1487458818,
      "namespace_id": null
    },
    {
      "note": "Hey @gweaver thanks for the timeline! We haven't expressed that we are blocked by the group level work items, I think the motivation of the request was to ensure the migration schedule was still valid based on remaining work.\n\nWe've started spiking on linked items, but cannot move much else forward since we're down 2 engineers. All of this to say, we definitely have enough work to do. :sweat_smile:",
      "noteable_type": "Epic",
      "author_id": 2890431,
      "created_at": "2023-07-25 15:51:29 UTC",
      "updated_at": "2023-07-26 11:45:28 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "11e164faee1d4f9402fdb8b70e0afc0eac16988a",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1487488813,
      "namespace_id": null
    },
    {
      "note": "Makes sense. Maybe we should bring this to the next sync call.",
      "noteable_type": "Epic",
      "author_id": 426128,
      "created_at": "2023-10-20 14:50:14 UTC",
      "updated_at": "2023-10-20 14:50:14 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "644d8011ed79e4817cb39481e1ae3e595482abb1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1612556029,
      "namespace_id": 9970
    },
    {
      "note": "Actually, just realized that because epic policies only exist at the group level, there is no way to create an issue or work item with an epic issue type at the project level. So no need to add another feature flag since the only way to create an epic work item type is at the group level and if the `namespace_level_work_items` is enabled",
      "noteable_type": "Epic",
      "author_id": 8110537,
      "created_at": "2023-10-20 21:03:08 UTC",
      "updated_at": "2023-10-20 21:03:08 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "233b12f118489da84c8a0b3f6844130e48e1a816",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1613012841,
      "namespace_id": 9970
    },
    {
      "note": "> So we could add any missing attributes/mapping to widgets iteratively after starting syncing epic with the work item\n\nI agree with doing it incrementally too, although it seems that widgets are not far from being ready\n\n- Color :x: (will not be present in WI)\n- Start/Due Dates :x: (spike scheduled for %\"16.6\")\n- Labels :white_check_mark:\n- Notifications :white_check_mark: \n- Todos :white_check_mark: \n- Award Emoji :white_check_mark:\n- Notes :white_check_mark: \n- Linked epics :white_check_mark: \n- Hierarchy :white_check_mark: \n\nEach widget will present its own difficulties though, so starting with a bare record sounds reasonable to me.",
      "noteable_type": "Epic",
      "author_id": 3860200,
      "created_at": "2023-10-19 11:14:17 UTC",
      "updated_at": "2023-10-19 11:14:17 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "04276a4ce19719f160f67830a8a794899173b5dd",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1610524119,
      "namespace_id": 9970
    },
    {
      "note": "During the sync-up call today, it was mentioned that before we start syncing epic's work item record, it would be good to have all needed columns created.  I thought steps for implementing syncing would be something like:\n\n* start creating/updating work item record for each newly created epic (behind a feature flag enabled for testing only). Because work items use widgets, we would sync only bare minimum - title, description, confidentiality flag, state\n* sync work item's iid + namespace id when epic is moved\n* iteratively work on syncing additional attributes - these would be synced to work item's widget data (color, dates, )\n* all of above is done behind a feature flag enabled only for testing group. When we have all syncing logic done and it's verified, we roll out this flag so syncing is done for all new epics\n* once verified that syncing works as expected for new epics, we proceed with a bg migration which backfills/creates synced work item record also for existing epics\n* handle associations - we may need to rather move these than duplicate to mirrored object because we need to preserve note/label references, so we may need to support loading these either through legacy record or work item record depending on migration status\n\nSo we could add any missing attributes/mapping to widgets iteratively after starting syncing epic with work item, but it's entirely possible that this was already discussed before and a different approach would be better - I'd live to know more details.\n\n/cc @engwan @mcelicalderonG @kushalpandya @felipe_artur @egrieff WDYT?",
      "noteable_type": "Epic",
      "author_id": 1642716,
      "created_at": "2023-10-18 16:03:55 UTC",
      "updated_at": "2023-10-18 18:08:29 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "04276a4ce19719f160f67830a8a794899173b5dd",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1609248791,
      "namespace_id": 9970
    },
    {
      "note": "@jprovaznik Yes, agree. I was also with this same thought, I think we don't need to block the sync because of fields that only exist on epics. We could do it incrementally.\n\n> start creating/updating work item record for each newly created epic (behind a feature flag enabled for testing only). Because work items use widgets, we would sync only bare minimum - title, description, confidentiality flag, state  \n\nWe should also include deletion sync within this phase to avoid stale records on DB. As the epic work item type already exists I think this task is ready for development.   \n\n> sync work item's iid + namespace id when epic is moved  \n\nI think we cannot move/clone epics between namespaces, is this possible on the work-item side?",
      "noteable_type": "Epic",
      "author_id": 426128,
      "created_at": "2023-10-18 18:08:29 UTC",
      "updated_at": "2023-10-18 18:52:22 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": 426128,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "04276a4ce19719f160f67830a8a794899173b5dd",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": "2023-10-18 18:52:22 UTC",
      "internal": false,
      "id": 1609417902,
      "namespace_id": 9970
    },
    {
      "note": "> We should also include deletion sync within this phase to avoid stale records on DB. As the epic work item type already exists I think this task is ready for development.\n\nGood point :thumbsup: \n\n> I think we cannot move/clone epics between namespaces, is this possible on the work-item side?\n\nYou are right, on epic side this is not possible.",
      "noteable_type": "Epic",
      "author_id": 1642716,
      "created_at": "2023-10-19 06:05:24 UTC",
      "updated_at": "2023-10-19 06:05:24 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "04276a4ce19719f160f67830a8a794899173b5dd",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1609975415,
      "namespace_id": 9970
    },
    {
      "note": "I agree it would be easiest to put creation/listing of \"Epic\" work items behind a feature flag until syncing is completed, if possible.\n\nIdeally we would allow access to \"Epic\" work items through work items API in the last phase of migration, when the underlying \"Epic\" work item is used as SSOT (when we ignore attributes on Epic record and delegate everything to the work item record) - then perhaps we could avoid bi-directional syncing?",
      "noteable_type": "Epic",
      "author_id": 1642716,
      "created_at": "2023-10-19 06:22:42 UTC",
      "updated_at": "2023-10-19 17:50:56 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "233b12f118489da84c8a0b3f6844130e48e1a816",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": null,
      "internal": false,
      "id": 1609990043,
      "namespace_id": 9970
    },
    {
      "note": "@mcelicalderonG   \n\n> One of the steps of the migration already requires us to create a record in the issues table for each of the epics we have in the epics table. Before this happens, we should probably already have the sync mechanism in place? That way updates to epics on the legacy interface would create the record in the issues table.\n\nYes. Having the sync before running the migration also saves us from having to create epic work-items which are already up to date.\n\n> For those work items created during this period where we still don't have a sync mechanism, would we need to migrate/sync with those in the epics table after the sync mechanism is implemented?  \n\nCan we ignore them? Is this behind a feature flag? If so can we could roll it out to customers after the sync is in place or even later?",
      "noteable_type": "Epic",
      "author_id": 426128,
      "created_at": "2023-10-19 13:22:33 UTC",
      "updated_at": "2023-10-19 13:22:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": null,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "644d8011ed79e4817cb39481e1ae3e595482abb1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": false,
      "last_edited_at": null,
      "internal": false,
      "id": 1610753515,
      "namespace_id": 9970
    },
    {
      "note": "Following up on the sync discussion question\n\n### Should we prevent users from creating/listing epics through the GraphQL API? (Currently the only place where this is possible)\n\nMaybe this is not necessary, but we just need to be aware of what could happen with those epics that are created on the issues table before the syncing mechanism is implemented.\n\n- One of the steps of the migration already requires us to create a record in the issues table for each of the epics we have in the epics table. Before this happens, we should probably already have the sync mechanism in place? That way updates to epics on the legacy interface would create the record in the issues table.\n- Right now we allow creating/listing work items of type epic through the GraphQL work items API.\n- For those work items created during this period where we still don't have a sync mechanism, would we need to migrate/sync with those in the epics table after the sync mechanism is implemented? We could argue that \"no\", since the GraphQL API is still in alpha? I guess the sync mechanism would still create records for those work item epics that get updated in the future. The only ones left behind in the legacy interface would be those that were created on the issues table during this period and never got updated after the sync mechanism is implemented.\n- What we could do to prevent what's described above is to prevent the creation of epics in the issues table behind a feature flag. This way we limit the impact this could potentially have in customers. But again, maybe note really necessary and what I'd like to get your opinion on.\n\n/cc @engwan @mcelicalderonG @kushalpandya @felipe_artur @egrieff @donaldcook WDYT?",
      "noteable_type": "Epic",
      "author_id": 8110537,
      "created_at": "2023-10-18 16:26:17 UTC",
      "updated_at": "2023-10-19 13:22:33 UTC",
      "project_id": null,
      "attachment": null,
      "line_code": null,
      "commit_id": null,
      "noteable_id": 657742,
      "st_diff": null,
      "system": false,
      "updated_by_id": 8110537,
      "type": "DiscussionNote",
      "position": null,
      "original_position": null,
      "resolved_at": null,
      "resolved_by_id": null,
      "discussion_id": "644d8011ed79e4817cb39481e1ae3e595482abb1",
      "change_position": null,
      "resolved_by_push": null,
      "review_id": null,
      "confidential": null,
      "last_edited_at": "2023-10-18 16:26:30 UTC",
      "internal": false,
      "id": 1609280911,
      "namespace_id": 9970
    }
  ],
  "note_authors": [
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 8110537,
      "username": "mcelicalderonG",
      "name": "Mario Celi"
    },
    {
      "id": 8110537,
      "username": "mcelicalderonG",
      "name": "Mario Celi"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 5709669,
      "username": "mushakov",
      "name": "Melissa Ushakov"
    },
    {
      "id": 411701,
      "username": "kushalpandya",
      "name": "Kushal Pandya"
    },
    {
      "id": 4089849,
      "username": "jackib",
      "name": "Jacki Bauer"
    },
    {
      "id": 4303289,
      "username": "gweaver",
      "name": "Gabe Weaver"
    },
    {
      "id": 2890431,
      "username": "amandarueda",
      "name": "Amanda Rueda"
    },
    {
      "id": 426128,
      "username": "felipe_artur",
      "name": "Felipe Artur"
    },
    {
      "id": 8110537,
      "username": "mcelicalderonG",
      "name": "Mario Celi"
    },
    {
      "id": 3860200,
      "username": "egrieff",
      "name": "Eugenia Grieff"
    },
    {
      "id": 1642716,
      "username": "jprovaznik",
      "name": "Jan Provaznik"
    },
    {
      "id": 426128,
      "username": "felipe_artur",
      "name": "Felipe Artur"
    },
    {
      "id": 1642716,
      "username": "jprovaznik",
      "name": "Jan Provaznik"
    },
    {
      "id": 1642716,
      "username": "jprovaznik",
      "name": "Jan Provaznik"
    },
    {
      "id": 426128,
      "username": "felipe_artur",
      "name": "Felipe Artur"
    },
    {
      "id": 8110537,
      "username": "mcelicalderonG",
      "name": "Mario Celi"
    }
  ],
  "namespace_hierarchy": [
    {
      "id": 9970,
      "name": "GitLab.org",
      "path": "gitlab-org",
      "type": "Group"
    }
  ]
}
