# frozen_string_literal: true

require 'spec_helper'

RSpec.describe ::Search::Elastic::VulnerabilitySorts, feature_category: :global_search do
  let(:query_hash) { {} }

  describe '#sort_by' do
    using RSpec::Parameterized::TableSyntax

    subject(:sort_by) { described_class.sort_by(query_hash: query_hash, options: options) }

    where(:sort, :expected) do
      :severity_asc | { sort: { severity: { order: 'asc' }, vulnerability_id: { order: 'desc' } } }
      :severity_desc | { sort: { severity: { order: 'desc' }, vulnerability_id: { order: 'desc' } } }
      :detected_asc | { sort: { vulnerability_id: { order: 'asc' } } }
      :detected_desc | { sort: { vulnerability_id: { order: 'desc' } } }
      nil | { sort: {} }
    end

    with_them do
      let(:options) { { sort: sort } }

      it { is_expected.to eq(expected) }
    end
  end
end
