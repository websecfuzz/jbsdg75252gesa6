# frozen_string_literal: true

require 'spec_helper'

RSpec.describe Gitlab::Llm::Chain::Tools::ExplainVulnerability::Prompts::Anthropic, feature_category: :duo_chat do
  describe '.prompt' do
    subject(:result) do
      described_class.prompt(
        language_info: 'language info',
        title: 'title',
        identifiers: 'vulnerabilities',
        vulnerability_info: 'vulnerable code',
        vulnerability_description: 'vulnerability description'
      )
    end

    it 'returns prompt', :aggregate_failures do
      prompt = result[:prompt]

      expected_system_prompt = <<~PROMPT.chomp
        You are a software vulnerability developer.
        You can explain vulnerabilities in code.
        language info
      PROMPT

      expected_user_prompt = <<~PROMPT.chomp
        First, carefully review the vulnerability report:

        <vulnerability_report>
        Name: title
        Description: vulnerability description
        </vulnerability_report>

        vulnerabilities

        Now, explain the vulnerability "title - (vulnerabilities)".
        vulnerable code
        Provide a code example with syntax highlighting on how an attacker can take advantage of the vulnerability.
        Provide a code example with syntax highlighting on how to fix it.
        Provide the response in markdown format with headers.
      PROMPT

      expected_prompt = [
        {
          role: :system, content: expected_system_prompt
        },
        {
          role: :user, content: expected_user_prompt
        }
      ]
      expect(prompt).to eq(expected_prompt)
    end

    it 'sets the haiku model' do
      model = result[:options][:model]

      expect(model).to eq(::Gitlab::Llm::Concerns::AvailableModels::CLAUDE_3_HAIKU)
    end
  end
end
