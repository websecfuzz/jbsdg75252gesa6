# frozen_string_literal: true

require 'spec_helper'

RSpec.describe Gitlab::VulnerabilityScanning::DependencyScanning::AffectedVersionRangeMatcher, feature_category: :vulnerability_management do
  using RSpec::Parameterized::TableSyntax

  subject(:affected) do
    described_class.new(
      purl_type: purl_type, range: range
    ).affected?(version)
  end

  context 'when version is in range' do
    where(:purl_type, :range, :version) do
      'composer' | '<=2.2.1' | '2.2.1'
      'conan' | '<=2.2.1' | '2.2.1'
      'gem' | '<=2.2.1.pre' | '2.2.1.pre'
      'golang' | '<=2.2.1' | '2.2.1'
      'maven' | '[,2.5]' | '2.5'
      'npm' | '<=2.2.1' | '2.2.1'
      'nuget' | '[,1.2.3.0]' | '1.2.3.0'
      'pypi' | '<=1.11.0' | '1.11'
    end

    with_them do
      specify do
        expect(affected).to be_truthy
      end
    end
  end

  context 'when version is not in range' do
    where(:purl_type, :range, :version) do
      'composer' | '<=2.2.1' | '2.2.2'
      'conan' | '<=2.2.1' | '2.2.2'
      'gem' | '<=2.2.1.pre' | '2.2.1'
      'golang' | '<=2.2.1' | '2.2.2'
      'maven' | '[,2.5]' | '2.6'
      'npm' | '<=2.2.1' | '2.2.2'
      'nuget' | '[,1.2.3.0]' | '1.2.3.1'
      'pypi' | '<=1.11.0' | '1.11.1'
    end

    with_them do
      specify do
        expect(affected).to be_falsey
      end
    end
  end

  context 'when version is invalid' do
    where(:purl_type, :range, :version) do
      'composer' | '<1.0.0' | 'dev-master'
      'conan' | '<1.0.0' | 'x'
      'gem' | '<1.0.0' | '1.2.3.*'
      'golang' | '<1.0.0' | '1.2.3x'
      'maven' | '[,1.0.0]' | '?'
      'npm' | '<1.0.0' | '1.2.3x'
      'nuget' | '<1.0.0' | '1.2.3x'
      'pypi' | '<1.0.0' | 'x'
    end

    with_them do
      specify do
        expect { affected }.to raise_error(SemverDialects::InvalidVersionError)
      end
    end
  end

  context 'when range is invalid' do
    let(:version) { '1.2.3' }

    where(:purl_type, :range) do
      'composer' | '<dev-master'
      'conan' | '-'
      'gem' | '<1.2.3.*'
      'golang' | '<1.2.3x'
      'maven' | '-'
      'npm' | '<1.2.3x'
      'nuget' | '<1.2.3x'
      'pypi' | '[,1.0.0]'
    end

    with_them do
      specify do
        expect { affected }.to raise_error(SemverDialects::InvalidConstraintError)
      end
    end
  end
end
