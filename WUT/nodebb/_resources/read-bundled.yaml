openapi: 3.0.0
info:
  title: NodeBB Read API
  version: 3.0.0
  contact:
    email: support@nodebb.org
  license:
    name: GPL-3.0
  description: |-
    # Overview
    The following document outlines every Read API route available via NodeBB. Unlike the write API, the v1.x API was coded organically, and is **not** strictly RESTful. These shortcomings will be addressed in time as the APIs mature.
    ## Shortcomings
    The Read API is named because its primary use is by NodeBB itself when navigating between pages. Therefore, the routes almost universally always follow the same path as actual pages on NodeBB itself. There are also a small number of non-`GET` routes, which do not make sense in a Read API. These will be merged into the Write API in time.
    ## Authentication
    There are a multitude of ways to authenticate with the Read API.
    ### Cookie Authentication
    By default, the API will attempt to find a valid session in the browser's cookies. A valid login session is required for API calls that pertain to operations involving a logged-in user. For example, `/api/unread` is a route showing unread topics, and is not accessible by guest users.
    Most data transfer utilities like cURL will allow you to construct something like a cookie, to be sent alongside the request, to function much like a browser cookie. This should work with the API.
    ### Bearer Authentication
    Both the Read API and Write API offer bearer authentication, as administered through the administration panel.

      * Up until v1.14.3, this is provided by [`nodebb-plugin-write-api`](https://github.com/NodeBB/nodebb-plugin-write-api). The Write API plugin needs to be installed before authentication via bearer token is enabled on routes provided by the Read API.
      * From NodeBB v1.15.0 onwards, the Write API is available in core, and bearer authentication is available out-of-the-box

    In both cases, a bearer token is issued in the NodeBB admin panel in order to grant access to the API.
    There are two types of tokens:
      * A *user token* is associated with a specific uid, and all calls made are made in the name of that user
      * A *master token* is not associated with any specific uid, though a `_uid` parameter is required in the request, and then all calls are made in the name of *that* user.
        This is the only difference between the two tokens. A master token with `_uid` set to a non-administrator will not allow you to make administrative calls.
tags:
  - name: home
    description: Routes used at the forum index only
  - name: categories
    description: Category hierarchy and navigation
  - name: topics
  - name: posts
  - name: users
  - name: authentication
    description: User authentication (e.g. login/registration)
  - name: groups
    description: User groups
  - name: admin
    description: Administrative Control Panel (ACP) routing
  - name: emails
    description: Email utilities
  - name: flags
    description: Reporting of content by users
  - name: notifications
    description: Real-time notifications
  - name: search
  - name: tags
    description: Disparate method of categorizing topics
  - name: shorthand
    description: Convenience and utility routes for accessing other part of the API
  - name: other
    description: Other one-off routes that do not fit in a section of their own
paths:
  /api/v3/search/categories:
    get:
      summary: Search categories
      description: Returns a list of categories that match the search query.
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
            example: Electronics
          description: The search term to filter categories.
      responses:
        '200':
          description: A list of matching categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: Electronics
        '400':
          description: Invalid search query.
        '500':
          description: Internal server error.
  /sping:
    get:
      tags:
        - ping
      summary: Check if NodeBB is up
      description: This route returns "healthy" and 200 status code if NodeBB is up and running.
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: healthy
  /ping:
    get:
      tags:
        - ping
      summary: Check if NodeBB is up
      description: This route returns "200" and 200 status code if NodeBB is up and running.
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '200'
  /api/:
    get:
      tags:
        - home
      description: |
        This route is used to populate the homepage of NodeBB. It is the main access point of the forum, and shows a list of categories for navigation purposes.
      summary: Get forum index data
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                        description: The page title
                      selectCategoryLabel:
                        type: string
                        description: Label to use for the category selector
                      categories:
                        description: A collection of category data objects
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/CategoryObject'
                            - type: object
                              properties:
                                tagWhitelist:
                                  type: array
                                  items:
                                    type: string
                                unread:
                                  type: boolean
                                  description: True if category or it's children have unread topics
                                unread-class:
                                  type: string
                                children:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: '#/components/schemas/CategoryObject'
                                      - type: object
                                        properties:
                                          tagWhitelist:
                                            type: array
                                            items:
                                              type: string
                                          unread-class:
                                            type: string
                                          children:
                                            type: array
                                            items:
                                              $ref: '#/components/schemas/CategoryObject'
                                          parent:
                                            allOf:
                                              - $ref: '#/components/schemas/CategoryObject'
                                              - type: object
                                                properties:
                                                  tagWhitelist:
                                                    type: array
                                                    items:
                                                      type: string
                                                  unread-class:
                                                    type: string
                                          posts:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                pid:
                                                  type: number
                                                timestamp:
                                                  type: number
                                                content:
                                                  type: string
                                                timestampISO:
                                                  type: string
                                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                                                user:
                                                  type: object
                                                  properties:
                                                    uid:
                                                      type: number
                                                      description: A user identifier
                                                    username:
                                                      type: string
                                                      description: A friendly name for a given user account
                                                    displayname:
                                                      type: string
                                                      description: This is either username or fullname depending on forum and user settings
                                                    userslug:
                                                      type: string
                                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                                    picture:
                                                      nullable: true
                                                      type: string
                                                    icon:text:
                                                      type: string
                                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                                    icon:bgColor:
                                                      type: string
                                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                                      example: '#f44336'
                                                index:
                                                  type: number
                                                cid:
                                                  type: number
                                                  description: A category identifier
                                                parentCid:
                                                  type: number
                                                  description: The category identifier for the category that is the immediate ancestor of the current category
                                                topic:
                                                  type: object
                                                  properties:
                                                    slug:
                                                      type: string
                                                    title:
                                                      type: string
                                          imageClass:
                                            type: string
                                          timesClicked:
                                            type: number
                                posts:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      pid:
                                        type: number
                                      tid:
                                        type: number
                                      timestamp:
                                        type: number
                                      content:
                                        type: string
                                      sourceContent:
                                        type: string
                                        nullable: true
                                      timestampISO:
                                        type: string
                                        description: An ISO 8601 formatted date string (complementing `timestamp`)
                                      user:
                                        type: object
                                        properties:
                                          uid:
                                            type: number
                                            description: A user identifier
                                          username:
                                            type: string
                                            description: A friendly name for a given user account
                                          displayname:
                                            type: string
                                            description: This is either username or fullname depending on forum and user settings
                                          userslug:
                                            type: string
                                            description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                          picture:
                                            nullable: true
                                            type: string
                                          icon:text:
                                            type: string
                                            description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                          icon:bgColor:
                                            type: string
                                            description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                            example: '#f44336'
                                          isLocal:
                                            type: boolean
                                            description: Whether the user belongs to the local installation or not.
                                      index:
                                        type: number
                                      cid:
                                        type: number
                                        description: A category identifier
                                      topic:
                                        type: object
                                        properties:
                                          tid:
                                            type: number
                                          slug:
                                            type: string
                                          title:
                                            type: string
                                teaser:
                                  type: object
                                  properties:
                                    url:
                                      type: string
                                    timestampISO:
                                      type: string
                                      description: An ISO 8601 formatted date string (complementing `timestamp`)
                                    pid:
                                      type: number
                                    tid:
                                      type: number
                                    index:
                                      type: number
                                      description: The index of the post
                                    topic:
                                      type: object
                                      properties:
                                        tid:
                                          type: number
                                        slug:
                                          type: string
                                        title:
                                          type: string
                                    user:
                                      type: object
                                      properties:
                                        uid:
                                          type: number
                                          example: 1
                                        username:
                                          type: string
                                          example: Dragon Fruit
                                        userslug:
                                          type: string
                                          example: dragon-fruit
                                        picture:
                                          type: string
                                          example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
                                          nullable: true
                                        displayname:
                                          type: string
                                          description: This is either username or fullname depending on forum and user settings
                                          example: Dragon Fruit
                                        icon:text:
                                          type: string
                                          example: D
                                        icon:bgColor:
                                          type: string
                                          example: '#9c27b0'
                                        isLocal:
                                          type: boolean
                                          description: Whether the user belongs to the local installation or not.
                                imageClass:
                                  type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin:
    get:
      tags:
        - admin
      summary: Get administrative index
      description: |
        Internally, NodeBB will redirect you to a different page based on your privilege levels.

        The default is "dashboard" for superadmins and those with the "dashboard" privilege. If the requesting user is neither, then they will be redirected to a page that they have privileges to view (e.g. `/categories`, `/privileges`, `/users`, or `/settings/general`).

        Failing that, the request will be denied.
      responses:
        '200':
          description: |
            A JSON object containing data for the default admin index.
          content:
            application/json:
              schema:
                properties: {}
                additionalProperties: {}
  /api/admin/dashboard:
    get:
      tags:
        - admin
      summary: Get administrative dashboard
      responses:
        '200':
          description: A JSON object containing dashboard data
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      version:
                        type: string
                      lookupFailed:
                        type: boolean
                      latestVersion:
                        type: string
                        nullable: true
                      hideAllTime:
                        type: boolean
                      upgradeAvailable:
                        type: boolean
                        nullable: true
                      currentPrerelease:
                        type: boolean
                      notices:
                        type: array
                        items:
                          type: object
                          properties:
                            done:
                              type: boolean
                            doneText:
                              type: string
                            notDoneText:
                              type: string
                            tooltip:
                              type: string
                            link:
                              type: string
                          required:
                            - done
                      canRestart:
                        type: boolean
                      lastrestart:
                        nullable: true
                        type: object
                        properties:
                          uid:
                            type: number
                            description: A user identifier
                          ip:
                            type: string
                          timestamp:
                            type: number
                          user:
                            $ref: '#/components/schemas/UserObject'
                          timestampISO:
                            type: string
                            description: An ISO 8601 formatted date string (complementing `timestamp`)
                      showSystemControls:
                        type: boolean
                      popularSearches:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                              description: The search term
                            score:
                              type: number
                              description: How many times it has been queried
                  - $ref: '#/components/schemas/Stats'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/dashboard/logins:
    get:
      tags:
        - admin
      summary: Get detailed login analytics
      responses:
        '200':
          description: A JSON object containing more detailed analytics related to user login sessions.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      set:
                        type: string
                        description: The analytics set that is being queried
                      query:
                        additionalProperties:
                          description: An object containing the query string parameters, if any
                      summary:
                        type: object
                        properties:
                          day:
                            type: number
                          week:
                            type: number
                          month:
                            type: number
                      sessions:
                        type: array
                        items:
                          type: object
                          properties:
                            ip:
                              type: string
                            uuid:
                              type: string
                            datetime:
                              type: number
                            platform:
                              type: string
                            browser:
                              type: string
                            version:
                              type: string
                            current:
                              type: boolean
                            datetimeISO:
                              type: string
                            user:
                              $ref: '#/components/schemas/UserObj'
                      loginDays:
                        type: number
                  - $ref: '#/components/schemas/Stats'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/dashboard/users:
    get:
      tags:
        - admin
      summary: Get detailed user registration analytics
      responses:
        '200':
          description: A JSON object containing more detailed analytics related to user registrations.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      set:
                        type: string
                        description: The analytics set that is being queried
                      query:
                        additionalProperties:
                          description: An object containing the query string parameters, if any
                      summary:
                        type: object
                        properties:
                          day:
                            type: number
                          week:
                            type: number
                          month:
                            type: number
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserObject'
                  - $ref: '#/components/schemas/Stats'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/dashboard/topics:
    get:
      tags:
        - admin
      summary: Get detailed topic creation analytics
      responses:
        '200':
          description: A JSON object containing more detailed analytics related to topic creations.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      set:
                        type: string
                        description: The analytics set that is being queried
                      query:
                        additionalProperties:
                          description: An object containing the query string parameters, if any
                      summary:
                        type: object
                        properties:
                          day:
                            type: number
                          week:
                            type: number
                          month:
                            type: number
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                  - $ref: '#/components/schemas/Stats'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/dashboard/searches:
    get:
      tags:
        - admin
      summary: Get detailed search analytics
      responses:
        '200':
          description: A JSON object containing popular searches.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      searches:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                              description: The string that was searched
                            score:
                              type: number
                              description: Number of times this string has been searched
                      startDate:
                        type: string
                        description: A UNIX timestamp of the start date
                        nullable: true
                      endDate:
                        type: string
                        description: A UNIX timestamp of the end date
                        nullable: true
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/general:
    get:
      tags:
        - admin
      summary: Get system settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      routes:
                        type: array
                      postSharing:
                        type: array
                      languages:
                        type: array
                      autoDetectLang:
                        type: number
                    additionalProperties:
                      type: object
                      description: Most of the settings pages have their values loaded on the client-side, so the settings are not exposed server-side.
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/navigation:
    get:
      tags:
        - admin
      summary: Get navigation bar settings
      responses:
        '200':
          description: A JSON object containing navigation settings
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      enabled:
                        type: array
                        items:
                          type: object
                          properties:
                            route:
                              type: string
                              description: Relative URL to the page the navigation item goes to
                            title:
                              type: string
                              description: Tooltip text
                            enabled:
                              type: boolean
                            iconClass:
                              type: string
                              description: A FontAwesome icon string
                            textClass:
                              type: string
                              description: HTML class applied to the text label for this navigation item
                            text:
                              type: string
                              description: Label text for this navigation item
                            order:
                              type: integer
                              description: Ordinality of this item, lower value appears earlier
                            groups:
                              type: array
                              items:
                                type: object
                                properties:
                                  displayName:
                                    type: string
                                  selected:
                                    type: boolean
                            index:
                              type: integer
                              description: Seemingly identical to order, but an integer instead of a string
                            selected:
                              type: boolean
                      available:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Unique ID that will be added to the navigation element's `id` property in the DOM
                            route:
                              type: string
                              description: Relative URL to the page the navigation item goes to
                            title:
                              type: string
                              description: Tooltip text
                            enabled:
                              type: boolean
                            iconClass:
                              type: string
                              description: A FontAwesome icon string
                            textClass:
                              type: string
                              description: HTML class applied to the text label for this navigation item
                            text:
                              type: string
                              description: Label text for this navigation item
                            core:
                              type: boolean
                              description: Whether the navigation item is provided by core or not (a plugin)
                            groups:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  displayName:
                                    type: string
                            targetBlank:
                              type: boolean
                          required:
                            - id
                            - route
                            - title
                            - enabled
                            - iconClass
                            - textClass
                            - text
                            - core
                            - groups
                      groups:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            displayName:
                              type: string
                      navigation:
                        type: array
                        description: A clone of `enabled`
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/user:
    get:
      tags:
        - admin
      summary: Get user settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      groupsExemptFromNewUserRestrictions:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupDataObject'
                      notificationSettings:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The notification type
                            label:
                              type: string
                              description: The language key for the notification type (for localisation client-side)
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/reputation:
    get:
      tags:
        - admin
      summary: Get reputation settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/group:
    get:
      tags:
        - admin
      summary: Get group settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/tags:
    get:
      tags:
        - admin
      summary: Get tag settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/post:
    get:
      tags:
        - admin
      summary: Get post settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      groupsExemptFromPostQueue:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupDataObject'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/activitypub:
    get:
      tags:
        - admin
      summary: Get federation (ActivityPub) settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      instanceCount:
                        type: number
                        description: The number of ActivityPub-enabled instances that this forum knows about.
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/uploads:
    get:
      tags:
        - admin
      summary: Get upload settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/email:
    get:
      tags:
        - admin
      summary: Get emailer settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            path:
                              type: string
                              description: The name of the email template
                            fullpath:
                              type: string
                              description: Full system path to the email template
                            text:
                              type: string
                              description: Customized email template text, if applicable, otherwise identical to `original`
                            original:
                              type: string
                              description: The email template text as provided by NodeBB core
                            isCustom:
                              type: boolean
                      sendable:
                        type: array
                        items:
                          type: string
                          description: The name of the email template
                      services:
                        type: array
                        items:
                          type: string
                          description: A list of email services which can be used to send emails on behalf of NodeBB
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/chat:
    get:
      tags:
        - admin
      summary: Get chat settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/pagination:
    get:
      tags:
        - admin
      summary: Get pagination settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/notifications:
    get:
      tags:
        - admin
      summary: Get notification settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/api:
    get:
      tags:
        - admin
      summary: Get API token settings
      responses:
        '200':
          description: A JSON object containing API tokens and settings
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      tokens:
                        type: array
                        items:
                          $ref: '#/components/schemas/TokenObject'
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/cookies:
    get:
      tags:
        - admin
      summary: Get cookie settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/web-crawler:
    get:
      tags:
        - admin
      summary: Get web crawler settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/settings/advanced:
    get:
      tags:
        - admin
      summary: Get advanced settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      groupsExemptFromMaintenanceMode:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupDataObject'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/categories:
    get:
      tags:
        - admin
      summary: Get category management settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      categoriesPerPage:
                        type: number
                      selectCategoryLabel:
                        type: string
                      categoriesTree:
                        type: array
                        items:
                          type: object
                          properties:
                            cid:
                              type: number
                              description: A category identifier
                            name:
                              type: string
                            description:
                              type: string
                            disabled:
                              type: number
                            icon:
                              type: string
                            link:
                              type: string
                            parentCid:
                              type: number
                              description: The category identifier for the category that is the immediate ancestor of the current category
                            color:
                              type: string
                            bgColor:
                              type: string
                            backgroundImage:
                              type: string
                              nullable: true
                            imageClass:
                              type: string
                            order:
                              type: number
                            subCategoriesPerPage:
                              type: number
                            children:
                              type: array
                              description: Array of children categories
                            subCategoriesLeft:
                              type: number
                            hasMoreSubCategories:
                              type: boolean
                            showMorePage:
                              type: number
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/categories/{category_id}:
    get:
      tags:
        - admin
      summary: Get category settings
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      category:
                        allOf:
                          - $ref: '#/components/schemas/CategoryObject'
                          - type: object
                            properties:
                              tagWhitelist:
                                type: array
                                items:
                                  type: string
                              unread-class:
                                type: string
                              parent:
                                $ref: '#/components/schemas/CategoryObject'
                      selectedCategory:
                        $ref: '#/components/schemas/CategoryObject'
                      customClasses:
                        type: array
                        items:
                          type: string
                      postQueueEnabled:
                        type: boolean
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/categories/{category_id}/analytics:
    get:
      tags:
        - admin
      summary: Get category anayltics
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      name:
                        type: string
                      analytics:
                        type: object
                        properties:
                          pageviews:hourly:
                            type: array
                            items:
                              type: number
                          pageviews:daily:
                            type: array
                            items:
                              type: number
                          topics:daily:
                            type: array
                            items:
                              type: number
                          posts:daily:
                            type: array
                            items:
                              type: number
                      selectedCategory:
                        $ref: '#/components/schemas/CategoryObject'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/categories/{category_id}/federation:
    get:
      tags:
        - admin
      summary: Get category anayltics
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      cid:
                        type: number
                      enabled:
                        type: number
                        description: Whether ActivityPub integration is enabled in site settings
                      name:
                        type: string
                      following:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: The activity+json uri of the followed actor
                            approved:
                              type: boolean
                              description: Whether the follow request has been accepted
                      followers:
                        type: array
                        items:
                          type: object
                          properties:
                            userslug:
                              type: string
                              description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                              example: dragon-fruit
                            picture:
                              type: string
                              description: A URL pointing to a picture to be used as the user's avatar
                              example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
                              nullable: true
                            uid:
                              type: number
                              description: A user identifier
                              example: 1
                      selectedCategory:
                        $ref: '#/components/schemas/CategoryObject'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/privileges/{cid}:
    get:
      tags:
        - admin
      summary: Get category privileges
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      privileges:
                        type: object
                        properties:
                          labels:
                            type: object
                            properties:
                              users:
                                type: array
                                items:
                                  type: string
                                  description: Language key of the privilege name's user-friendly name
                              groups:
                                type: array
                                items:
                                  type: string
                                  description: Language key of the privilege name's user-friendly name
                          labelData:
                            type: array
                            items:
                              type: object
                              properties:
                                label:
                                  type: string
                                  description: the name of the privilege displayed in the ACP dashboard
                                type:
                                  type: string
                                  description: type of the privilege (one of viewing, posting, moderation or other)
                          keys:
                            type: object
                            properties:
                              users:
                                type: array
                                items:
                                  type: string
                              groups:
                                type: array
                                items:
                                  type: string
                          users:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                nameEscaped:
                                  type: string
                                privileges:
                                  type: object
                                  additionalProperties:
                                    type: boolean
                                    description: Each privilege will have a key in this object
                          groups:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                nameEscaped:
                                  type: string
                                privileges:
                                  type: object
                                  additionalProperties:
                                    type: boolean
                                    description: Each privilege will have a key in this object
                                types:
                                  type: object
                                  description: Each privilege will have a key in this object, the value will be the type of the privilege (viewing, posting, moderation or other)
                                isPrivate:
                                  type: boolean
                                isSystem:
                                  type: boolean
                          columnCountUserOther:
                            type: number
                          columnCountGroupOther:
                            type: number
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            cid:
                              type: number
                              description: A category identifier
                            name:
                              type: string
                            icon:
                              type: string
                            selected:
                              type: boolean
                            level:
                              type: string
                            parentCid:
                              type: number
                              description: The category identifier for the category that is the immediate ancestor of the current category
                            color:
                              type: string
                            bgColor:
                              type: string
                            imageClass:
                              type: string
                          required:
                            - cid
                            - name
                            - icon
                            - selected
                      selectedCategory:
                        $ref: '#/components/schemas/CategoryObject'
                      cid:
                        type: number
                        description: A category identifier
                      group:
                        type: string
                      isAdminPriv:
                        type: boolean
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/tags:
    get:
      tags:
        - admin
      summary: Get tag settings
      responses:
        '200':
          description: A JSON object containing tag settings
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      tags:
                        type: array
                        items:
                          $ref: '#/components/schemas/TagObject'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/users:
    get:
      tags:
        - admin
      summary: Get users
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserObjectACP'
                      customUserFields:
                        type: array
                        description: array of custom user fields
                      page:
                        type: number
                      pageCount:
                        type: number
                      resultsPerPage:
                        type: number
                      reverse:
                        type: boolean
                      sortBy:
                        type: string
                      sort_lastonline:
                        type: boolean
                      userCount:
                        type: number
                      showInviteButton:
                        type: boolean
                      inviteOnly:
                        type: boolean
                      adminInviteOnly:
                        type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/users/custom-fields:
    get:
      tags:
        - admin
      summary: Manage custom fields for users
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      fields:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            select-options:
                              type: string
                            type:
                              type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/registration:
    get:
      tags:
        - admin
      summary: Get registration queue/invites
      responses:
        '200':
          description: A JSON object containing the registration queue and invites
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      registrationQueueCount:
                        type: number
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            username:
                              type: string
                            email:
                              type: string
                            ip:
                              type: string
                            timestampISO:
                              type: string
                            usernameEscaped:
                              type: string
                            ipMatch:
                              type: array
                              items:
                                type: object
                                properties:
                                  username:
                                    type: string
                                    description: A friendly name for a given user account
                                  userslug:
                                    type: string
                                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                  picture:
                                    type: string
                                  uid:
                                    type: number
                                    description: A user identifier
                                  icon:text:
                                    type: string
                                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                  icon:bgColor:
                                    type: string
                                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                    example: '#f44336'
                            customActions:
                              type: array
                              items:
                                type: object
                                properties:
                                  title:
                                    type: string
                                  id:
                                    type: string
                                  class:
                                    type: string
                                  icon:
                                    type: string
                      customHeaders:
                        type: array
                      invites:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                            invitations:
                              type: array
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/admins-mods:
    get:
      tags:
        - admin
      summary: Get administrators and moderators
      responses:
        '200':
          description: A JSON object containing administrators and moderators globally and per-category
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      admins:
                        $ref: '#/components/schemas/GroupFullObject'
                      globalMods:
                        $ref: '#/components/schemas/GroupFullObject'
                      categoryMods:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/CategoryObject'
                            - type: object
                              properties:
                                moderators:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/UserObjectSlim'
                                subCategoryCount:
                                  type: number
                      selectedCategory:
                        nullable: true
                        anyOf:
                          - $ref: '#/components/schemas/CategoryObject'
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/groups:
    get:
      tags:
        - admin
      summary: Get user groups
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      groups:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            description:
                              type: string
                            deleted:
                              oneOf:
                                - type: number
                                - type: string
                            hidden:
                              type: number
                            system:
                              type: number
                            userTitle:
                              type: string
                            userTitleEscaped:
                              type: string
                            icon:
                              type: string
                            labelColor:
                              type: string
                            slug:
                              type: string
                            createtime:
                              type: number
                            memberCount:
                              type: number
                            private:
                              type: number
                            cover:url:
                              type: string
                            cover:position:
                              type: string
                            userTitleEnabled:
                              type: number
                            disableJoinRequests:
                              type: number
                            disableLeave:
                              type: number
                            nameEncoded:
                              type: string
                            displayName:
                              type: string
                            textColor:
                              type: string
                            createtimeISO:
                              type: string
                            cover:thumb:url:
                              type: string
                            ownerUid:
                              type: number
                            memberPostCids:
                              type: string
                            memberPostCidsArray:
                              type: array
                              items:
                                type: number
                                example:
                                  - 1
                                  - 2
                                  - 3
                          required:
                            - name
                            - description
                            - hidden
                            - system
                            - userTitle
                            - icon
                            - labelColor
                            - slug
                            - createtime
                            - memberCount
                            - private
                            - cover:url
                            - cover:position
                            - userTitleEnabled
                            - disableJoinRequests
                            - disableLeave
                            - nameEncoded
                            - displayName
                            - textColor
                            - createtimeISO
                            - cover:thumb:url
                      yourid:
                        type: number
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/groups/{slug}:
    get:
      tags:
        - admin
      summary: Get user group details
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: administrators
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      group:
                        $ref: '#/components/schemas/GroupFullObject'
                      groupNames:
                        type: array
                        items:
                          type: object
                          properties:
                            encodedName:
                              type: string
                            displayName:
                              type: string
                            slug:
                              type: string
                            selected:
                              type: boolean
                      allowPrivateGroups:
                        type: number
                      maximumGroupNameLength:
                        type: number
                      maximumGroupTitleLength:
                        type: number
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/uploads:
    get:
      tags:
        - admin
      summary: Get uploaded files
      parameters:
        - in: query
          name: dir
          schema:
            type: string
          description: Path of the folder, relative to `public/uploads/`
          example: /
      responses:
        '200':
          description: A JSON object containing uploaded files
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      currentFolder:
                        type: string
                        description: Path of the folder, relative to `public/uploads/`
                      showPids:
                        type: boolean
                        description: Whether or not the post identifiers should be shown (this is `true` only for `public/uploads/files/`, as that is where post uploads go)
                      files:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            path:
                              type: string
                              description: Path relative to `currentFolder`
                            url:
                              type: string
                              description: Relative URL ready to be combined with `config.relative_path` on the client-side or templates
                            fileCount:
                              type: number
                              description: For directories, the number of files inside
                            size:
                              type: number
                              description: The size of the file/directory
                            sizeHumanReadable:
                              type: string
                            isDirectory:
                              type: boolean
                            isFile:
                              type: boolean
                            mtime:
                              type: number
                              description: Last modified time of the file, down to the microsecond (expressed as a UNIX timestamp)
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/manage/digest:
    get:
      tags:
        - admin
      summary: Get system digest info/settings
      responses:
        '200':
          description: A JSON object containing recent digest sends and settings
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      delivery:
                        type: array
                        items:
                          type: object
                          properties:
                            username:
                              type: string
                              description: A friendly name for a given user account
                            displayname:
                              type: string
                              description: This is either username or fullname depending on forum and user settings
                            picture:
                              nullable: true
                              type: string
                            uid:
                              type: number
                              description: A user identifier
                            icon:text:
                              type: string
                              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                            icon:bgColor:
                              type: string
                              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                              example: '#f44336'
                            lastDelivery:
                              type: string
                            setting:
                              type: boolean
                            isLocal:
                              type: boolean
                              description: Whether the user belongs to the local installation or not.
                      default:
                        type: string
                    required:
                      - title
                      - delivery
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/appearance/themes:
    get:
      tags:
        - admin
      summary: Get appearance settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonProps'
  /api/admin/appearance/skins:
    get:
      tags:
        - admin
      summary: Get appearance settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonProps'
  /api/admin/appearance/customise:
    get:
      tags:
        - admin
      summary: Get appearance settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonProps'
  /api/admin/extend/plugins:
    get:
      tags:
        - admin
      summary: Get system plugin settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      installed:
                        type: array
                        items:
                          type: object
                          properties:
                            latest:
                              type: string
                            description:
                              type: string
                            name:
                              type: string
                            updated:
                              type: string
                            url:
                              type: string
                            numInstalls:
                              type: number
                            isCompatible:
                              type: boolean
                            id:
                              type: string
                            installed:
                              type: boolean
                            active:
                              type: boolean
                            isTheme:
                              type: boolean
                            error:
                              type: boolean
                            version:
                              type: string
                            license:
                              type: object
                              properties:
                                name:
                                  type: string
                                text:
                                  type: string
                              nullable: true
                            outdated:
                              type: boolean
                            settingsRoute:
                              type: string
                          required:
                            - latest
                            - description
                            - name
                            - id
                            - installed
                            - active
                            - isTheme
                            - error
                            - version
                            - license
                            - outdated
                      installedCount:
                        type: number
                      active:
                        type: array
                        items:
                          type: object
                          properties:
                            latest:
                              type: string
                            description:
                              type: string
                            name:
                              type: string
                            updated:
                              type: string
                            url:
                              type: string
                            numInstalls:
                              type: number
                            isCompatible:
                              type: boolean
                            id:
                              type: string
                            installed:
                              type: boolean
                            active:
                              type: boolean
                            isTheme:
                              type: boolean
                            error:
                              type: boolean
                            version:
                              type: string
                            license:
                              type: object
                              properties:
                                name:
                                  type: string
                                text:
                                  type: string
                              nullable: true
                            downloads:
                              type: number
                            outdated:
                              type: boolean
                            settingsRoute:
                              type: string
                          required:
                            - latest
                            - description
                            - name
                            - id
                            - installed
                            - active
                            - isTheme
                            - error
                            - version
                            - license
                            - outdated
                      activeCount:
                        type: number
                      inactive:
                        type: array
                        items:
                          type: object
                          properties:
                            latest:
                              type: string
                            description:
                              type: string
                            name:
                              type: string
                            updated:
                              type: string
                            url:
                              type: string
                            numInstalls:
                              type: number
                            isCompatible:
                              type: boolean
                            id:
                              type: string
                            installed:
                              type: boolean
                            active:
                              type: boolean
                            isTheme:
                              type: boolean
                            error:
                              type: boolean
                            version:
                              type: string
                            license:
                              type: object
                              properties:
                                name:
                                  type: string
                                text:
                                  type: string
                              nullable: true
                            downloads:
                              type: number
                            outdated:
                              type: boolean
                            settingsRoute:
                              type: string
                          required:
                            - latest
                            - description
                            - name
                            - id
                            - installed
                            - active
                            - isTheme
                            - error
                            - version
                            - license
                            - outdated
                      inactiveCount:
                        type: number
                      canChangeState:
                        type: boolean
                      upgradeCount:
                        type: number
                      download:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            updated:
                              type: string
                            description:
                              type: string
                            latest:
                              type: string
                            url:
                              type: string
                            numInstalls:
                              type: number
                            isCompatible:
                              type: boolean
                            id:
                              type: string
                            installed:
                              type: boolean
                            active:
                              type: boolean
                          required:
                            - name
                            - updated
                            - latest
                            - url
                            - numInstalls
                            - isCompatible
                            - id
                            - installed
                            - active
                      upgrade:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            updated:
                              type: string
                            description:
                              type: string
                            latest:
                              type: string
                            url:
                              type: string
                            numInstalls:
                              type: number
                            isCompatible:
                              type: boolean
                            id:
                              type: string
                            installed:
                              type: boolean
                            active:
                              type: boolean
                            isTheme:
                              type: boolean
                            error:
                              type: boolean
                            version:
                              type: string
                            license:
                              type: object
                              properties:
                                name:
                                  type: string
                                text:
                                  type: string
                            outdated:
                              type: boolean
                          required:
                            - name
                            - updated
                            - latest
                            - url
                            - numInstalls
                            - isCompatible
                            - id
                            - installed
                            - active
                            - isTheme
                            - version
                            - license
                            - outdated
                      incompatible:
                        type: array
                        items:
                          type: object
                          properties:
                            latest:
                              type: string
                            description:
                              type: string
                            name:
                              type: string
                            updated:
                              type: string
                            url:
                              type: string
                            numInstalls:
                              type: number
                            isCompatible:
                              type: boolean
                            id:
                              type: string
                            installed:
                              type: boolean
                            active:
                              type: boolean
                            downloads:
                              type: number
                          required:
                            - name
                            - updated
                            - latest
                            - url
                            - numInstalls
                            - isCompatible
                            - id
                            - installed
                            - active
                      trending:
                        type: array
                        items:
                          type: object
                          properties:
                            latest:
                              type: string
                            description:
                              type: string
                            name:
                              type: string
                            updated:
                              type: string
                            url:
                              type: string
                            numInstalls:
                              type: number
                            isCompatible:
                              type: boolean
                            id:
                              type: string
                            installed:
                              type: boolean
                            active:
                              type: boolean
                            isTheme:
                              type: boolean
                            error:
                              type: boolean
                            version:
                              type: string
                            license:
                              type: object
                              properties:
                                name:
                                  type: string
                                text:
                                  type: string
                              nullable: true
                            outdated:
                              type: boolean
                            settingsRoute:
                              type: string
                            downloads:
                              type: number
                          required:
                            - latest
                            - description
                            - name
                            - id
                            - installed
                            - active
                            - downloads
                      submitPluginUsage:
                        type: number
                      version:
                        type: string
                      isStarterPlan:
                        type: boolean
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/extend/widgets:
    get:
      tags:
        - admin
      summary: Get widget settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      templates:
                        type: array
                        items:
                          type: object
                          properties:
                            template:
                              type: string
                            areas:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  location:
                                    type: string
                            widgetCount:
                              type: number
                              description: Number of widgets on this template
                      areas:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            template:
                              type: string
                            location:
                              type: string
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  widget:
                                    type: string
                                  data:
                                    type: object
                                    properties:
                                      html:
                                        type: string
                                      cid:
                                        type: string
                                      title:
                                        type: string
                                      container:
                                        type: string
                                      groups:
                                        type: array
                                        items: {}
                                      groupsHideFrom:
                                        type: array
                                        items: {}
                                      hide-mobile:
                                        type: string
                                      numTags:
                                        type: string
                                      numUsers:
                                        type: string
                                      text:
                                        type: string
                                      parseAsPost:
                                        type: string
                                      numTopics:
                                        type: string
                      availableWidgets:
                        type: array
                        items:
                          type: object
                          properties:
                            widget:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            content:
                              type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/extend/rewards:
    get:
      tags:
        - admin
      summary: Get rewards settings
      responses:
        '200':
          description: A JSON object containing rewards and their settings
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      active:
                        type: array
                        items:
                          type: object
                          properties:
                            condition:
                              type: string
                            conditional:
                              type: string
                            value:
                              type: number
                            rid:
                              type: string
                            claimable:
                              type: string
                            id:
                              type: string
                            disabled:
                              type: boolean
                            rewards:
                              type: array
                              items:
                                additionalProperties: {}
                                description: Reward-specific properties
                      conditions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            condition:
                              type: string
                      conditionals:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            conditional:
                              type: string
                      rewards:
                        type: array
                        items:
                          type: object
                          properties:
                            rid:
                              type: string
                            name:
                              type: string
                            inputs:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  values:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/advanced/database:
    get:
      tags:
        - admin
      summary: Get database information
      responses:
        '200':
          description: A JSON object with database status information
          content:
            application/json:
              schema:
                properties: {}
                additionalProperties:
                  type: object
                  description: Each database configured will have an entry here with information about its runtime status
  /api/admin/advanced/events:
    get:
      tags:
        - admin
      summary: Get event log
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Event name to filter by
          example: config-change
        - in: query
          name: start
          schema:
            type: string
          description: Start date to filter by
          example: ''
        - in: query
          name: end
          schema:
            type: string
          description: End date to filter by
          example: ''
        - in: query
          name: perPage
          schema:
            type: string
          description: Limit the number of events returned per page
          example: 20
      responses:
        '200':
          description: 'A JSON object containing '
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      events:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                          additionalProperties:
                            description: Each individual event as added by core/plugins can append their own metadata related to the event
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      types:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                            count:
                              type: number
                      query:
                        additionalProperties:
                          description: An object containing the query string parameters, if any
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/advanced/hooks:
    get:
      tags:
        - admin
      summary: Get active plugin hooks
      responses:
        '200':
          description: A JSON object containing all hooks with active listeners
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      hooks:
                        type: array
                        items:
                          type: object
                          properties:
                            hookName:
                              type: string
                              description: The name of the hook (also the name used in code)
                            methods:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    description: Plugin listening to this hook
                                  priority:
                                    type: number
                                    description: Priority level, lower priorities are executed earlier
                                  method:
                                    type: string
                                    description: Stringified method for examination
                                  index:
                                    type: string
                                    description: Internal counter used for DOM element ids
                            index:
                              type: string
                              description: Internal counter used for DOM element ids
                            count:
                              type: number
                              description: The number of listeners subscribed to this hook
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/advanced/logs:
    get:
      tags:
        - admin
      summary: Get server-side log output
      responses:
        '200':
          description: A JSON object containing the server-side log
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: string
                        description: Output of the server-side log file
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/advanced/errors:
    get:
      tags:
        - admin
      summary: Get server-side errors
      responses:
        '200':
          description: A JSON object containing server-side errors
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      not-found:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                              description: Path to the requested URL that returned a 404
                            score:
                              type: number
                              description: The number of times that URL was requested
                      analytics:
                        type: object
                        properties:
                          not-found:
                            type: array
                            description: 404 responses groups by day, from 6 days ago, to present day
                            items:
                              type: number
                          toobusy:
                            type: array
                            description: 503 responses groups by day, from 6 days ago, to present day
                            items:
                              type: number
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/advanced/errors/export:
    get:
      tags:
        - admin
      summary: Export errors (.csv)
      responses:
        '200':
          description: A CSV file containing server-side errors
          content:
            text/csv:
              schema:
                type: string
                format: binary
  /api/admin/advanced/cache:
    get:
      tags:
        - admin
      summary: Get system cache info
      parameters:
        - in: query
          name: name
          schema:
            type: string
            enum:
              - post
              - object
              - group
              - local
          required: false
          description: Specify cache to dump if calling `/dump`
          example: post
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      caches:
                        type: object
                        properties:
                          postCache:
                            type: object
                            properties:
                              length:
                                type: number
                              max:
                                type: number
                                nullable: true
                              maxSize:
                                type: number
                              itemCount:
                                type: number
                              percentFull:
                                type: number
                              hits:
                                type: string
                              hitsPerSecond:
                                type: number
                              misses:
                                type: string
                              hitRatio:
                                type: string
                              enabled:
                                type: boolean
                              ttl:
                                type: number
                          groupCache:
                            type: object
                            properties:
                              length:
                                type: number
                              max:
                                type: number
                                nullable: true
                              maxSize:
                                type: number
                              itemCount:
                                type: number
                              percentFull:
                                type: number
                              hits:
                                type: string
                              misses:
                                type: string
                              hitRatio:
                                type: string
                              enabled:
                                type: boolean
                              ttl:
                                type: number
                          localCache:
                            type: object
                            properties:
                              length:
                                type: number
                              max:
                                type: number
                                nullable: true
                              maxSize:
                                type: number
                              itemCount:
                                type: number
                              percentFull:
                                type: number
                              hits:
                                type: string
                              misses:
                                type: string
                              hitRatio:
                                type: string
                              enabled:
                                type: boolean
                              ttl:
                                type: number
                          objectCache:
                            type: object
                            properties:
                              length:
                                type: number
                              max:
                                type: number
                                nullable: true
                              maxSize:
                                type: number
                              itemCount:
                                type: number
                              percentFull:
                                type: number
                              hits:
                                type: string
                              misses:
                                type: string
                              hitRatio:
                                type: string
                              enabled:
                                type: boolean
                              ttl:
                                type: number
                    required:
                      - postCache
                      - groupCache
                      - localCache
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/advanced/cache/dump:
    get:
      tags:
        - admin
      summary: Get system cache info
      parameters:
        - in: query
          name: name
          schema:
            type: string
            enum:
              - post
              - object
              - group
              - local
          required: false
          description: Specify cache to dump if calling `/dump`
          example: post
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties:
                  description: The type of response is dependent on the database used. Please examine the output.
  /api/admin/development/logger:
    get:
      tags:
        - admin
      summary: Get system logger settings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonProps'
  /api/admin/development/info:
    get:
      tags:
        - admin
      summary: Get process/system information
      responses:
        '200':
          description: A JSON object containing process and system information
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      info:
                        type: array
                        items:
                          type: object
                          properties:
                            process:
                              type: object
                              properties:
                                port:
                                  description: An array containing the port numbers configured to be used by NodeBB processes
                                  oneOf:
                                    - type: array
                                      items:
                                        oneOf:
                                          - type: string
                                          - type: number
                                    - type: string
                                    - type: number
                                pid:
                                  type: number
                                  description: Process id
                                title:
                                  type: number
                                  description: Executable
                                version:
                                  type: number
                                  description: NodeBB version
                                memoryUsage:
                                  type: object
                                  properties:
                                    rss:
                                      type: number
                                    heapTotal:
                                      type: number
                                    heapUsed:
                                      type: number
                                    external:
                                      type: number
                                    arrayBuffers:
                                      type: number
                                    humanReadable:
                                      type: number
                                  required:
                                    - rss
                                    - heapTotal
                                    - heapUsed
                                    - external
                                    - humanReadable
                                uptime:
                                  type: number
                                uptimeHumanReadable:
                                  type: string
                                cpuUsage:
                                  type: number
                            os:
                              type: object
                              properties:
                                hostname:
                                  type: string
                                type:
                                  type: string
                                platform:
                                  type: string
                                arch:
                                  type: string
                                release:
                                  type: string
                                load:
                                  type: string
                                  description: CPU load
                                freemem:
                                  type: string
                                totalmem:
                                  type: string
                                usedmem:
                                  type: string
                            nodebb:
                              type: object
                              properties:
                                isPrimary:
                                  type: boolean
                                isCluster:
                                  type: boolean
                                runJobs:
                                  type: boolean
                                jobsDisabled:
                                  type: boolean
                                acpPluginInstallDisabled:
                                  type: boolean
                            git:
                              type: object
                              properties:
                                hash:
                                  type: string
                                hashShort:
                                  type: string
                                branch:
                                  type: string
                            stats:
                              type: object
                              properties:
                                onlineGuestCount:
                                  type: number
                                onlineRegisteredCount:
                                  type: number
                                socketCount:
                                  type: number
                                connectionCount:
                                  type: number
                                users:
                                  type: object
                                  properties:
                                    categories:
                                      type: number
                                    recent:
                                      type: number
                                    unread:
                                      type: number
                                    topics:
                                      type: number
                                    category:
                                      type: number
                                topics:
                                  type: array
                            id:
                              type: string
                      infoJSON:
                        type: string
                        description: '`info`, but stringified'
                      host:
                        type: string
                        description: Server hostname
                      port:
                        description: An array containing the port numbers configured to be used by NodeBB processes
                        oneOf:
                          - type: array
                            items:
                              oneOf:
                                - type: string
                                - type: number
                          - type: string
                          - type: number
                      nodeCount:
                        type: number
                        description: The number of NodeBB application processes currently running
                      timeout:
                        type: number
                      ip:
                        type: string
                      loggedIn:
                        type: boolean
                      relative_path:
                        type: string
                  - $ref: '#/components/schemas/CommonProps'
  /api/admin/users/csv:
    get:
      tags:
        - admin
      summary: Get users export (.csv)
      parameters:
        - in: header
          name: referer
          schema:
            type: string
          required: true
          example: /admin/manage/users
      responses:
        '200':
          description: A CSV file containing all registered users
          content:
            text/csv:
              schema:
                type: string
                format: binary
  /api/admin/groups/{groupname}/csv:
    get:
      tags:
        - admin
      summary: Get members of a group (.csv)
      parameters:
        - in: header
          name: referer
          schema:
            type: string
          required: true
          example: /admin/manage/groups
        - in: path
          name: groupname
          schema:
            type: string
          required: true
          example: registered-users
      responses:
        '200':
          description: A CSV file containing all users in the group
          content:
            text/csv:
              schema:
                type: string
                format: binary
  /api/admin/analytics:
    get:
      tags:
        - admin
      summary: Get site analytics
      parameters:
        - in: query
          name: units
          schema:
            type: string
            enum:
              - hours
              - days
          description: Whether to display dashboard data segmented daily or hourly
          example: days
        - in: query
          name: until
          schema:
            type: number
          description: A UNIX timestamp denoting the end of the analytics reporting period
          example: ''
        - in: query
          name: count
          schema:
            type: number
          description: The number of entries to return (e.g. if `units` is `hourly`, and `count` is `24`, the result set will contain 24 hours' worth of analytics)
          example: 20
      responses:
        '200':
          description: A JSON object containing analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    additionalProperties:
                      description: The query string passed in
                  result:
                    type: object
                    properties:
                      uniquevisitors:
                        type: array
                        items:
                          type: number
                      pageviews:
                        type: array
                        items:
                          type: number
                      pageviews:registered:
                        type: array
                        items:
                          type: number
                      pageviews:bot:
                        type: array
                        items:
                          type: number
                      pageviews:guest:
                        type: array
                        items:
                          type: number
  /api/admin/category/uploadpicture:
    post:
      tags:
        - admin
      summary: Update category picture (via image upload)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cid:
                  type: number
                  description: Category identifier whose picture will be set after successful upload
                  example: 1
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - cid
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded image for use client-side
  /api/admin/uploadfavicon:
    post:
      tags:
        - admin
      summary: Upload favicon
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded image for use client-side
  /api/admin/uploadTouchIcon:
    post:
      tags:
        - admin
      summary: Upload Touch Icon
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded logo for the Homescreen/Touch Icon to enable PWA
  /api/admin/uploadMaskableIcon:
    post:
      tags:
        - admin
      summary: Upload Maskable Icon
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded logo for the Maskable Icon entry for PWA / A2HS
  /api/admin/uploadlogo:
    post:
      tags:
        - admin
      summary: Upload site logo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded image for use client-side
  /api/admin/uploadOgImage:
    post:
      tags:
        - admin
      summary: Upload site-wide Open Graph Image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded image for use client-side
  /api/admin/upload/file:
    post:
      tags:
        - admin
      summary: Upload a file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                folder:
                  type: string
                  description: The folder to upload the files to (relative to `public/uploads/`)
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: File uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded file for use client-side
  /api/admin/uploadDefaultAvatar:
    post:
      tags:
        - admin
      summary: Upload default avatar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded image for use client-side
  /api/admin/config:
    get:
      tags:
        - admin
      summary: Get forum settings and admin only settings
      description: This route retrieves forum settings and user-specific settings for client-side and admin-side options on the forum.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  relative_path:
                    type: string
                  upload_url:
                    type: string
                  assetBaseUrl:
                    type: string
                  asset_base_url:
                    type: string
                  siteTitle:
                    type: string
                  browserTitle:
                    type: string
                  description:
                    type: string
                  keywords:
                    type: string
                  brand:logo:
                    type: string
                  titleLayout:
                    type: string
                  showSiteTitle:
                    type: boolean
                  maintenanceMode:
                    type: boolean
                  postQueue:
                    type: number
                  minimumTitleLength:
                    type: number
                  maximumTitleLength:
                    type: number
                  minimumPostLength:
                    type: number
                  maximumPostLength:
                    type: number
                  minimumTagsPerTopic:
                    type: number
                  maximumTagsPerTopic:
                    type: number
                  minimumTagLength:
                    type: number
                  undoTimeout:
                    type: number
                  maximumTagLength:
                    type: number
                  useOutgoingLinksPage:
                    type: boolean
                  allowGuestHandles:
                    type: boolean
                  allowTopicsThumbnail:
                    type: boolean
                  usePagination:
                    type: boolean
                  disableChat:
                    type: boolean
                  disableChatMessageEditing:
                    type: boolean
                  maximumChatMessageLength:
                    type: number
                  socketioTransports:
                    type: array
                    items:
                      type: string
                  socketioOrigins:
                    type: string
                  websocketAddress:
                    type: string
                  maxReconnectionAttempts:
                    type: number
                  reconnectionDelay:
                    type: number
                  topicsPerPage:
                    type: number
                  postsPerPage:
                    type: number
                  maximumFileSize:
                    type: number
                  theme:id:
                    type: string
                  theme:src:
                    type: string
                  defaultLang:
                    type: string
                  userLang:
                    type: string
                  loggedIn:
                    type: boolean
                  uid:
                    type: number
                    description: A user identifier
                  cache-buster:
                    type: string
                  topicPostSort:
                    type: string
                  categoryTopicSort:
                    type: string
                  csrf_token:
                    type: string
                  searchEnabled:
                    type: boolean
                  searchDefaultInQuick:
                    type: string
                  disableCustomUserSkins:
                    type: boolean
                  bootswatchSkin:
                    type: string
                  defaultBootswatchSkin:
                    type: string
                  composer:showHelpTab:
                    type: boolean
                  enablePostHistory:
                    type: boolean
                  timeagoCutoff:
                    type: number
                  timeagoCodes:
                    type: array
                    items:
                      type: string
                  cookies:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      message:
                        type: string
                      dismiss:
                        type: string
                      link:
                        type: string
                      link_url:
                        type: string
                  thumbs:
                    type: object
                    properties:
                      size:
                        type: number
                  activitypub:
                    type: object
                    properties:
                      probe:
                        type: number
                  acpLang:
                    type: string
                  openOutgoingLinksInNewTab:
                    type: boolean
                  topicSearchEnabled:
                    type: boolean
                  hideSubCategories:
                    type: boolean
                  hideCategoryLastPost:
                    type: boolean
                  enableQuickReply:
                    type: boolean
                  emailPrompt:
                    type: number
                  useragent:
                    type: object
                    properties:
                      isSafari:
                        type: boolean
                  composer-default:
                    type: object
                  fontawesome:
                    type: object
                    properties:
                      pro:
                        type: boolean
                      styles:
                        type: array
                        items:
                          type: string
                      version:
                        type: string
  /api/config:
    get:
      tags:
        - home
      summary: Get forum settings
      description: This route retrieves forum settings and user-specific settings for client-side options on the forum.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  relative_path:
                    type: string
                  upload_url:
                    type: string
                  assetBaseUrl:
                    type: string
                  asset_base_url:
                    type: string
                  siteTitle:
                    type: string
                  browserTitle:
                    type: string
                  description:
                    type: string
                  keywords:
                    type: string
                  brand:logo:
                    type: string
                  titleLayout:
                    type: string
                  showSiteTitle:
                    type: boolean
                  maintenanceMode:
                    type: boolean
                  postQueue:
                    type: number
                  minimumTitleLength:
                    type: number
                  maximumTitleLength:
                    type: number
                  minimumPostLength:
                    type: number
                  maximumPostLength:
                    type: number
                  minimumTagsPerTopic:
                    type: number
                  maximumTagsPerTopic:
                    type: number
                  minimumTagLength:
                    type: number
                  undoTimeout:
                    type: number
                  maximumTagLength:
                    type: number
                  useOutgoingLinksPage:
                    type: boolean
                  allowGuestHandles:
                    type: boolean
                  allowTopicsThumbnail:
                    type: boolean
                  usePagination:
                    type: boolean
                  disableChat:
                    type: boolean
                  disableChatMessageEditing:
                    type: boolean
                  maximumChatMessageLength:
                    type: number
                  socketioTransports:
                    type: array
                    items:
                      type: string
                  socketioOrigins:
                    type: string
                  websocketAddress:
                    type: string
                  maxReconnectionAttempts:
                    type: number
                  reconnectionDelay:
                    type: number
                  topicsPerPage:
                    type: number
                  postsPerPage:
                    type: number
                  maximumFileSize:
                    type: number
                  theme:id:
                    type: string
                  theme:src:
                    type: string
                  defaultLang:
                    type: string
                  userLang:
                    type: string
                  loggedIn:
                    type: boolean
                  uid:
                    type: number
                    description: A user identifier
                  cache-buster:
                    type: string
                  topicPostSort:
                    type: string
                  categoryTopicSort:
                    type: string
                  csrf_token:
                    type: string
                  searchEnabled:
                    type: boolean
                  searchDefaultInQuick:
                    type: string
                  disableCustomUserSkins:
                    type: boolean
                  bootswatchSkin:
                    type: string
                  defaultBootswatchSkin:
                    type: string
                  composer:showHelpTab:
                    type: boolean
                  enablePostHistory:
                    type: boolean
                  timeagoCutoff:
                    type: number
                  timeagoCodes:
                    type: array
                    items:
                      type: string
                  cookies:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      message:
                        type: string
                      dismiss:
                        type: string
                      link:
                        type: string
                      link_url:
                        type: string
                  thumbs:
                    type: object
                    properties:
                      size:
                        type: number
                  acpLang:
                    type: string
                  openOutgoingLinksInNewTab:
                    type: boolean
                  topicSearchEnabled:
                    type: boolean
                  hideSubCategories:
                    type: boolean
                  hideCategoryLastPost:
                    type: boolean
                  enableQuickReply:
                    type: boolean
                  emailPrompt:
                    type: number
                  useragent:
                    type: object
                    properties:
                      isSafari:
                        type: boolean
                  composer-default:
                    type: object
                  fontawesome:
                    type: object
                    properties:
                      pro:
                        type: boolean
                      styles:
                        type: array
                        items:
                          type: string
                      version:
                        type: string
                  activitypub:
                    type: object
                    properties:
                      probe:
                        type: number
  /api/users:
    get:
      tags:
        - users
      summary: Get users
      parameters:
        - in: query
          name: section
          schema:
            type: string
            enum:
              - joindate
              - online
              - sort-posts
              - sort-reputation
              - banned
              - flagged
          required: false
          description: Allows filtering of the user list via pre-defined sections
          example: joindate
        - in: query
          name: term
          schema:
            type: string
          required: false
          description: Allows for searching of user list
          example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                              description: A user identifier
                            isLocal:
                              type: boolean
                              description: Whether the user belongs to the local installation or not.
                            username:
                              type: string
                              description: A friendly name for a given user account
                            displayname:
                              type: string
                              description: This is either username or fullname depending on forum and user settings
                            userslug:
                              type: string
                              description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                            picture:
                              nullable: true
                              type: string
                            status:
                              type: string
                            postcount:
                              type: number
                            reputation:
                              type: number
                            email:confirmed:
                              type: number
                              description: Whether the user has confirmed their email address or not
                            lastonline:
                              type: number
                            flags:
                              nullable: true
                            banned:
                              type: number
                            banned:expire:
                              type: number
                            joindate:
                              type: number
                              description: A UNIX timestamp representing the moment the user's account was created
                            icon:text:
                              type: string
                              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                            icon:bgColor:
                              type: string
                              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                              example: '#f44336'
                            joindateISO:
                              type: string
                            lastonlineISO:
                              type: string
                            banned_until:
                              type: number
                            banned_until_readable:
                              type: string
                      userCount:
                        type: number
                      title:
                        type: string
                      isAdminOrGlobalMod:
                        type: boolean
                      isAdmin:
                        type: boolean
                      isGlobalMod:
                        type: boolean
                      displayUserSearch:
                        type: boolean
                      section_joindate:
                        type: boolean
                      maximumInvites:
                        type: number
                      inviteOnly:
                        type: boolean
                      adminInviteOnly:
                        type: boolean
                      invites:
                        type: number
                      showInviteButton:
                        type: boolean
                      reputation:disabled:
                        type: number
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/uid/{uid}:
    get:
      tags:
        - users
      summary: Get user by uid
      description: This route retrieves a user's public profile data. If the calling user is the same as the profile, then it will also return data the user elected to hide (e.g. email/fullname)
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
  /api/user/username/{username}:
    get:
      tags:
        - users
      summary: Get user by username
      description: This route retrieves a user's public profile data. If the calling user is the same as the profile, then it will also return data the user elected to hide (e.g. email/fullname)
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
  /api/user/email/{email}:
    get:
      tags:
        - users
      summary: Get user by email
      description: |
        This route retrieves a user's public profile data. If the calling user is the same as the profile, then it will also return data the user elected to hide (e.g. email/fullname).
        Additionally, this route will only return data if the calling user is an admin or global moderator, or if the end user has elected to make their email public. Otherwise, it will simply return a `404 Not Found`.
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          example: test@example.org
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
  /api/categories:
    get:
      tags:
        - categories
      summary: Get a list of categories
      description: |
        This route retrieve the list of categories currently available to the accessing user. It doesn't necessarily mean that the user can *enter* the category, as that is a separate privilege. Specifically, this route will return all categories that grant the calling user the "Find Category" privilege.

        Subcategories are also returned, nested under a category's `children` property.
      responses:
        '200':
          description: A list of category objects currently available to the accessing user
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        description: The page title
                        type: string
                      selectCategoryLabel:
                        type: string
                        description: Label to use for the category selector
                      categories:
                        description: A collection of category data objects
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/CategoryObject'
                            - type: object
                              properties:
                                tagWhitelist:
                                  type: array
                                  items:
                                    type: string
                                unread:
                                  type: boolean
                                  description: True if category or it's children have unread topics
                                unread-class:
                                  type: string
                                children:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: '#/components/schemas/CategoryObject'
                                      - type: object
                                        properties:
                                          tagWhitelist:
                                            type: array
                                            items:
                                              type: string
                                          unread-class:
                                            type: string
                                          children:
                                            type: array
                                            items:
                                              $ref: '#/components/schemas/CategoryObject'
                                          parent:
                                            allOf:
                                              - $ref: '#/components/schemas/CategoryObject'
                                              - type: object
                                                properties:
                                                  tagWhitelist:
                                                    type: array
                                                    items:
                                                      type: string
                                                  unread-class:
                                                    type: string
                                          posts:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                pid:
                                                  type: number
                                                timestamp:
                                                  type: number
                                                content:
                                                  type: string
                                                timestampISO:
                                                  type: string
                                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                                                user:
                                                  type: object
                                                  properties:
                                                    uid:
                                                      type: number
                                                      description: A user identifier
                                                    username:
                                                      type: string
                                                      description: A friendly name for a given user account
                                                    userslug:
                                                      type: string
                                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                                    picture:
                                                      nullable: true
                                                      type: string
                                                    icon:text:
                                                      type: string
                                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                                    icon:bgColor:
                                                      type: string
                                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                                      example: '#f44336'
                                                index:
                                                  type: number
                                                cid:
                                                  type: number
                                                  description: A category identifier
                                                topic:
                                                  type: object
                                                  properties:
                                                    slug:
                                                      type: string
                                                    title:
                                                      type: string
                                          imageClass:
                                            type: string
                                          timesClicked:
                                            type: number
                                posts:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      pid:
                                        type: number
                                      tid:
                                        type: number
                                      timestamp:
                                        type: number
                                      content:
                                        type: string
                                      sourceContent:
                                        type: string
                                        nullable: true
                                      timestampISO:
                                        type: string
                                        description: An ISO 8601 formatted date string (complementing `timestamp`)
                                      user:
                                        type: object
                                        properties:
                                          uid:
                                            type: number
                                            description: A user identifier
                                          isLocal:
                                            type: boolean
                                            description: Whether the user belongs to the local installation or not.
                                          username:
                                            type: string
                                            description: A friendly name for a given user account
                                          displayname:
                                            type: string
                                            description: This is either username or fullname depending on forum and user settings
                                          userslug:
                                            type: string
                                            description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                          picture:
                                            nullable: true
                                            type: string
                                          icon:text:
                                            type: string
                                            description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                          icon:bgColor:
                                            type: string
                                            description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                            example: '#f44336'
                                      index:
                                        type: number
                                      cid:
                                        type: number
                                        description: A category identifier
                                      topic:
                                        type: object
                                        properties:
                                          tid:
                                            type: number
                                          slug:
                                            type: string
                                          title:
                                            type: string
                                teaser:
                                  type: object
                                  properties:
                                    url:
                                      type: string
                                    timestampISO:
                                      type: string
                                      description: An ISO 8601 formatted date string (complementing `timestamp`)
                                    pid:
                                      type: number
                                    tid:
                                      type: number
                                    index:
                                      type: number
                                      description: The index of the post
                                    topic:
                                      type: object
                                      properties:
                                        tid:
                                          type: number
                                        slug:
                                          type: string
                                        title:
                                          type: string
                                    user:
                                      type: object
                                      properties:
                                        uid:
                                          type: number
                                          example: 1
                                        isLocal:
                                          type: boolean
                                          description: Whether the user belongs to the local installation or not.
                                        username:
                                          type: string
                                          example: Dragon Fruit
                                        userslug:
                                          type: string
                                          example: dragon-fruit
                                        picture:
                                          type: string
                                          example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
                                          nullable: true
                                        displayname:
                                          type: string
                                          description: This is either username or fullname depending on forum and user settings
                                          example: Dragon Fruit
                                        icon:text:
                                          type: string
                                          example: D
                                        icon:bgColor:
                                          type: string
                                          example: '#9c27b0'
                                imageClass:
                                  type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/categories/{cid}/moderators:
    get:
      tags:
        - categories
      summary: Get mods for a category
      description: |
        This route returns an array of uids that correspond to the moderators for the category in question.
      parameters:
        - name: cid
          description: The category identifier for the category you wish to look up
          in: path
          required: true
          schema:
            type: number
          example: 1
      responses:
        '200':
          description: An array of moderators for the requested category
          content:
            application/json:
              schema:
                type: object
                properties:
                  moderators:
                    type: array
              example:
                moderators:
                  - 1
                  - 2
                  - 3
  /api/topic/{topic_id}/{slug}:
    get:
      tags:
        - topics
      summary: Get topic data
      parameters:
        - name: topic_id
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: slug
          description: This parameter is not required. If omitted, the request will be automatically redirected with the proper topic slug.
          in: path
          required: true
          schema:
            type: string
          example: test-topic
        - name: post_index
          description: This parameter is not required. If omitted, the request will presume that you want the first post. The API response is largely unaffected by this parameter, it is used client-side (to send the user to the requested post), and changes the meta/link tags in the server-side generated HTML.
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TopicObjectSlim'
                  - type: object
                    properties:
                      title:
                        type: string
                      slug:
                        type: string
                      teaserPid:
                        type: number
                        nullable: true
                      titleRaw:
                        type: string
                      tags:
                        type: array
                        items:
                          $ref: '#/components/schemas/TagObject'
                      posts:
                        type: array
                        items:
                          $ref: '#/components/schemas/PostDataObject'
                      category:
                        $ref: '#/components/schemas/CategoryObject'
                      tagWhitelist:
                        type: array
                        items:
                          type: string
                      minTags:
                        type: number
                      maxTags:
                        type: number
                      thread_tools:
                        type: array
                        items:
                          type: object
                          properties:
                            class:
                              type: string
                            title:
                              type: string
                            icon:
                              type: string
                      isFollowing:
                        type: boolean
                      isNotFollowing:
                        type: boolean
                      isIgnoring:
                        type: boolean
                      bookmark:
                        nullable: true
                      postSharing:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            class:
                              type: string
                            activated:
                              type: boolean
                      deleter:
                        nullable: true
                      merger:
                        nullable: true
                      forker:
                        nullable: true
                      related:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      unreplied:
                        type: boolean
                      icons:
                        type: array
                        items:
                          type: string
                          description: HTML that is rendered by the theme
                      privileges:
                        type: object
                        properties:
                          topics:reply:
                            type: boolean
                          topics:read:
                            type: boolean
                          topics:schedule:
                            type: boolean
                          topics:tag:
                            type: boolean
                          topics:delete:
                            type: boolean
                          posts:edit:
                            type: boolean
                          posts:history:
                            type: boolean
                          posts:upvote:
                            type: boolean
                          posts:downvote:
                            type: boolean
                          posts:delete:
                            type: boolean
                          posts:view_deleted:
                            type: boolean
                          read:
                            type: boolean
                          purge:
                            type: boolean
                          view_thread_tools:
                            type: boolean
                          editable:
                            type: boolean
                          deletable:
                            type: boolean
                          view_deleted:
                            type: boolean
                          view_scheduled:
                            type: boolean
                          isAdminOrMod:
                            type: boolean
                          disabled:
                            type: number
                          tid:
                            type: string
                          uid:
                            type: number
                            description: A user identifier
                      topicStaleDays:
                        type: number
                      reputation:disabled:
                        type: number
                      downvote:disabled:
                        type: number
                      upvoteVisibility:
                        type: string
                      downvoteVisibility:
                        type: string
                      feeds:disableRSS:
                        type: number
                      signatures:hideDuplicates:
                        type: number
                      bookmarkThreshold:
                        type: number
                      necroThreshold:
                        type: number
                      postEditDuration:
                        type: number
                      postDeleteDuration:
                        type: number
                      scrollToMyPost:
                        type: boolean
                      updateUrlWithPostIndex:
                        type: boolean
                      allowMultipleBadges:
                        type: boolean
                      privateUploads:
                        type: boolean
                      showPostPreviewsOnHover:
                        type: boolean
                      sortOptionLabel:
                        type: string
                      rssFeedUrl:
                        type: string
                      postIndex:
                        type: number
                      author:
                        type: object
                        required:
                          - username
                          - uid
                        properties:
                          username:
                            type: string
                          userslug:
                            type: string
                          uid:
                            type: number
                          fullname:
                            type: string
                          displayname:
                            type: string
                          isLocal:
                            type: boolean
                            description: Whether the user belongs to the local installation or not.
                  - type: object
                    description: Optional properties that may or may not be present (except for `tid`, which is always present, and is only here as a hack to pass validation)
                    properties:
                      tid:
                        type: number
                        description: A topic identifier
                      thumb:
                        type: string
                        description: An uploaded topic thumbnail
                      loggedInUser:
                        $ref: '#/components/schemas/UserObject'
                    required:
                      - tid
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/topic/{topic_id}/{slug}/{post_index}:
    get:
      tags:
        - topics
      summary: Get topic data
      parameters:
        - name: topic_id
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: slug
          description: This parameter is not required. If omitted, the request will be automatically redirected with the proper topic slug.
          in: path
          required: true
          schema:
            type: string
          example: test-topic
        - name: post_index
          description: This parameter is not required. If omitted, the request will presume that you want the first post. The API response is largely unaffected by this parameter, it is used client-side (to send the user to the requested post), and changes the meta/link tags in the server-side generated HTML.
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TopicObjectSlim'
                  - type: object
                    properties:
                      title:
                        type: string
                      slug:
                        type: string
                      teaserPid:
                        type: number
                        nullable: true
                      titleRaw:
                        type: string
                      tags:
                        type: array
                        items:
                          $ref: '#/components/schemas/TagObject'
                      posts:
                        type: array
                        items:
                          $ref: '#/components/schemas/PostDataObject'
                      category:
                        $ref: '#/components/schemas/CategoryObject'
                      tagWhitelist:
                        type: array
                        items:
                          type: string
                      minTags:
                        type: number
                      maxTags:
                        type: number
                      thread_tools:
                        type: array
                        items:
                          type: object
                          properties:
                            class:
                              type: string
                            title:
                              type: string
                            icon:
                              type: string
                      isFollowing:
                        type: boolean
                      isNotFollowing:
                        type: boolean
                      isIgnoring:
                        type: boolean
                      bookmark:
                        nullable: true
                      postSharing:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            class:
                              type: string
                            activated:
                              type: boolean
                      deleter:
                        nullable: true
                      merger:
                        nullable: true
                      forker:
                        nullable: true
                      related:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      unreplied:
                        type: boolean
                      icons:
                        type: array
                        items:
                          type: string
                          description: HTML that is rendered by the theme
                      privileges:
                        type: object
                        properties:
                          topics:reply:
                            type: boolean
                          topics:read:
                            type: boolean
                          topics:schedule:
                            type: boolean
                          topics:tag:
                            type: boolean
                          topics:delete:
                            type: boolean
                          posts:edit:
                            type: boolean
                          posts:history:
                            type: boolean
                          posts:upvote:
                            type: boolean
                          posts:downvote:
                            type: boolean
                          posts:delete:
                            type: boolean
                          posts:view_deleted:
                            type: boolean
                          read:
                            type: boolean
                          purge:
                            type: boolean
                          view_thread_tools:
                            type: boolean
                          editable:
                            type: boolean
                          deletable:
                            type: boolean
                          view_deleted:
                            type: boolean
                          view_scheduled:
                            type: boolean
                          isAdminOrMod:
                            type: boolean
                          disabled:
                            type: number
                          tid:
                            type: string
                          uid:
                            type: number
                            description: A user identifier
                      topicStaleDays:
                        type: number
                      reputation:disabled:
                        type: number
                      downvote:disabled:
                        type: number
                      upvoteVisibility:
                        type: string
                      downvoteVisibility:
                        type: string
                      feeds:disableRSS:
                        type: number
                      signatures:hideDuplicates:
                        type: number
                      bookmarkThreshold:
                        type: number
                      necroThreshold:
                        type: number
                      postEditDuration:
                        type: number
                      postDeleteDuration:
                        type: number
                      scrollToMyPost:
                        type: boolean
                      updateUrlWithPostIndex:
                        type: boolean
                      allowMultipleBadges:
                        type: boolean
                      privateUploads:
                        type: boolean
                      showPostPreviewsOnHover:
                        type: boolean
                      sortOptionLabel:
                        type: string
                      rssFeedUrl:
                        type: string
                      postIndex:
                        type: number
                      author:
                        type: object
                        required:
                          - username
                          - uid
                        properties:
                          username:
                            type: string
                          userslug:
                            type: string
                          uid:
                            type: number
                          fullname:
                            type: string
                          displayname:
                            type: string
                          isLocal:
                            type: boolean
                            description: Whether the user belongs to the local installation or not.
                  - type: object
                    description: Optional properties that may or may not be present (except for `tid`, which is always present, and is only here as a hack to pass validation)
                    properties:
                      tid:
                        type: number
                        description: A topic identifier
                      thumb:
                        type: string
                        description: An uploaded topic thumbnail
                      loggedInUser:
                        $ref: '#/components/schemas/UserObject'
                    required:
                      - tid
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/recent:
    get:
      tags:
        - topics
      summary: Get recent topics
      description: Returns a list of topics sorted by timestamp.
      responses:
        '200':
          description: An array of topic objects sorted by timestamp.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      nextStart:
                        type: number
                      topicCount:
                        type: number
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      tids:
                        type: array
                        items:
                          type: number
                      canPost:
                        type: boolean
                      showSelect:
                        type: boolean
                      showTopicTools:
                        type: boolean
                      allCategoriesUrl:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          bgColor:
                            type: string
                        nullable: true
                      selectedCids:
                        type: array
                        items:
                          type: number
                      selectedTag:
                        type: object
                        properties:
                          label:
                            type: string
                        nullable: true
                      selectedTags:
                        type: array
                        items:
                          type: string
                      feeds:disableRSS:
                        type: number
                      rssFeedUrl:
                        type: string
                      title:
                        type: string
                      filters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            selected:
                              type: boolean
                            filter:
                              type: string
                            icon:
                              type: string
                      selectedFilter:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          selected:
                            type: boolean
                          filter:
                            type: string
                          icon:
                            type: string
                      terms:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            selected:
                              type: boolean
                            term:
                              type: string
                      selectedTerm:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          selected:
                            type: boolean
                          term:
                            type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/recent/posts/{term}:
    get:
      tags:
        - posts
      summary: Get recent posts
      parameters:
        - name: term
          in: path
          required: true
          schema:
            type: string
          example: day
          description: term is used to limit the returned posts to a specific term. Valid values are day, week, month. If you don't pass it in all posts will be returned.
        - name: page
          in: query
          required: false
          schema:
            type: number
          example: page=1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsObject'
  /api/unread:
    get:
      tags:
        - topics
      summary: Get unread topics
      description: Returns a list of the current user's unread topics, sorted by the last post's timestamp.
      responses:
        '200':
          description: An array of unread topic objects sorted by the last post's timestamp.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      canPost:
                        type: boolean
                      showSelect:
                        type: boolean
                      showTopicTools:
                        type: boolean
                      nextStart:
                        type: number
                      topics:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/TopicObjectSlim'
                            - type: object
                              properties:
                                title:
                                  type: string
                                slug:
                                  type: string
                                teaserPid:
                                  type: number
                                  nullable: true
                                titleRaw:
                                  type: string
                                category:
                                  type: object
                                  properties:
                                    cid:
                                      type: number
                                      description: A category identifier
                                    name:
                                      type: string
                                    slug:
                                      type: string
                                    icon:
                                      type: string
                                    backgroundImage:
                                      nullable: true
                                    imageClass:
                                      nullable: true
                                      type: string
                                    bgColor:
                                      type: string
                                    color:
                                      type: string
                                    disabled:
                                      type: number
                                user:
                                  type: object
                                  properties:
                                    uid:
                                      type: number
                                      description: A user identifier
                                    isLocal:
                                      type: boolean
                                      description: Whether the user belongs to the local installation or not.
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    displayname:
                                      type: string
                                      description: This is either username or fullname depending on forum and user settings
                                    fullname:
                                      type: string
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    reputation:
                                      type: number
                                    postcount:
                                      type: number
                                    picture:
                                      nullable: true
                                      type: string
                                    signature:
                                      nullable: true
                                      type: string
                                    banned:
                                      type: number
                                    status:
                                      type: string
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                    banned_until_readable:
                                      type: string
                                  required:
                                    - uid
                                    - username
                                    - userslug
                                    - reputation
                                    - postcount
                                    - picture
                                    - signature
                                    - banned
                                    - status
                                    - icon:text
                                    - icon:bgColor
                                    - banned_until_readable
                                teaser:
                                  type: object
                                  nullable: true
                                  properties:
                                    pid:
                                      type: number
                                    uid:
                                      type: number
                                      description: A user identifier
                                    timestamp:
                                      type: number
                                    tid:
                                      type: number
                                      description: A topic identifier
                                    content:
                                      type: string
                                    timestampISO:
                                      type: string
                                      description: An ISO 8601 formatted date string (complementing `timestamp`)
                                    user:
                                      type: object
                                      properties:
                                        uid:
                                          type: number
                                          description: A user identifier
                                        username:
                                          type: string
                                          description: A friendly name for a given user account
                                        userslug:
                                          type: string
                                          description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                        picture:
                                          nullable: true
                                          type: string
                                        icon:text:
                                          type: string
                                          description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                        icon:bgColor:
                                          type: string
                                          description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                          example: '#f44336'
                                    index:
                                      type: number
                                tags:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/TagObject'
                                isOwner:
                                  type: boolean
                                ignored:
                                  type: boolean
                                followed:
                                  type: boolean
                                unread:
                                  type: boolean
                                bookmark:
                                  nullable: true
                                unreplied:
                                  type: boolean
                                icons:
                                  type: array
                                  items:
                                    type: string
                                index:
                                  type: number
                      topicCount:
                        type: number
                      title:
                        type: string
                      pageCount:
                        type: number
                      allCategoriesUrl:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          bgColor:
                            type: string
                        nullable: true
                      selectCategoryLabel:
                        type: string
                      selectCategoryIcon:
                        type: string
                      showCategorySelectLabel:
                        type: boolean
                      selectedCids:
                        type: array
                        items:
                          type: number
                      selectedTag:
                        type: object
                        properties:
                          label:
                            type: string
                        nullable: true
                      selectedTags:
                        type: array
                        items:
                          type: string
                      filters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            selected:
                              type: boolean
                            filter:
                              type: string
                            icon:
                              type: string
                      selectedFilter:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          selected:
                            type: boolean
                          filter:
                            type: string
                          icon:
                            type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/unread/total:
    get:
      tags:
        - topics
      summary: Get number of unread topics
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: number
  /api/topic/teaser/{topic_id}:
    get:
      tags:
        - topics
      summary: Get a topic's teaser post
      parameters:
        - name: topic_id
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: A JSON object containing the teaser post for a topic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsObject'
  /api/topic/pagination/{topic_id}:
    get:
      tags:
        - topics
      summary: Get topic pagination data
      description: This route retrieves pagination data for a given topic. It is used mainly client-side, as it return data necessary to update a pagination block client-side.
      parameters:
        - name: topic_id
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination'
  /api/post/upload:
    post:
      tags:
        - posts
      summary: Upload a file to a specific post
      description: Provided by NodeBB core and used mainly by the composer, this route allows you to upload an image or file to a post.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      images:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
  /api/topic/thumb/upload:
    post:
      tags:
        - topics
      summary: Upload topic thumb
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - files
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The filename
                  url:
                    type: string
                    description: URL of the uploaded image for use client-side
                  path:
                    type: string
                    description: Path to the file in the local file system
  /api/login:
    get:
      tags:
        - authentication
      summary: Log in a user
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      loginFormEntry:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              description: A label for the added block
                            html:
                              type: string
                              description: HTML to render on the login page
                            styleName:
                              type: string
                              description: Custom identifier (value is added to `input[id]` and `label[for]`)
                      alternate_logins:
                        type: boolean
                      authentication:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            callbackURL:
                              type: string
                            icon:
                              type: string
                            scope:
                              type: string
                            prompt:
                              type: string
                      allowRegistration:
                        type: boolean
                      allowLoginWith:
                        type: string
                      title:
                        type: string
                      allowPasswordReset:
                        type: boolean
                      allowLocalLogin:
                        type: boolean
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/register:
    get:
      tags:
        - authentication
      summary: Register a new user
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      register_window:spansize:
                        type: string
                      alternate_logins:
                        type: boolean
                      authentication:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            callbackURL:
                              type: string
                            icon:
                              type: string
                            scope:
                              type: string
                            prompt:
                              type: string
                      minimumUsernameLength:
                        type: number
                      maximumUsernameLength:
                        type: number
                      minimumPasswordLength:
                        type: number
                      minimumPasswordStrength:
                        type: number
                      regFormEntry:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                            html:
                              type: string
                            styleName:
                              type: string
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/register/complete:
    get:
      tags:
        - authentication
      summary: Complete a user's registration
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      errors:
                        type: array
                        items: {}
                      sections:
                        type: array
                        items:
                          type: string
                  - $ref: '#/components/schemas/CommonProps'
        '302':
          description: If there are no additional registration steps to complete, then the user is redirected back to the registration page (`/register`)
          headers:
            Location:
              schema:
                type: string
                example: /register
  /api/confirm/{code}:
    get:
      tags:
        - authentication
      summary: Verify an email address
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true
          description: a valid confirmation code
          example: f8c4a54a-47ae-40f5-a0a5-356d6a35c24e
      responses:
        '200':
          description: Email address verified, or confirmation code was incorrect
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      error:
                        type: string
                        description: Translation key for client-side localisation
                    required:
                      - title
                  - $ref: '#/components/schemas/CommonProps'
  /api/tos:
    get:
      tags:
        - authentication
      summary: Get forum terms of service
      description: This route allows you to view the forum terms of service.
      responses:
        '200':
          description: Terms of service retrieved.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      termsOfUse:
                        type: string
                        description: Full text of the configured terms of service/terms of use.
                  - $ref: '#/components/schemas/CommonProps'
  /api/search:
    get:
      tags:
        - search
      summary: Get search results
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      matchCount:
                        type: number
                      pageCount:
                        type: number
                      time:
                        type: string
                      multiplePages:
                        type: boolean
                      search_query:
                        type: string
                      showAsPosts:
                        type: boolean
                      showAsTopics:
                        type: boolean
                      title:
                        type: string
                      filters:
                        type: object
                      userFilterSelected:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                              description: A user identifier
                              example: 1
                            username:
                              type: string
                              description: A friendly name for a given user account
                              example: Dragon Fruit
                            displayname:
                              type: string
                              description: This is either username or fullname depending on forum and user settings
                              example: Dragon Fruit
                            userslug:
                              type: string
                              description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                              example: dragon-fruit
                            picture:
                              type: string
                              description: A URL pointing to a picture to be used as the user's avatar
                              example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
                              nullable: true
                            icon:text:
                              type: string
                              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                              example: D
                            icon:bgColor:
                              type: string
                              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                              example: '#9c27b0'
                      tagFilterSelected:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                            valueEscaped:
                              type: string
                            valueEncoded:
                              type: string
                            class:
                              type: string
                      searchDefaultSortBy:
                        type: string
                      searchDefaultIn:
                        type: string
                      privileges:
                        type: object
                        properties:
                          search:users:
                            type: boolean
                          search:content:
                            type: boolean
                          search:tags:
                            type: boolean
                    required:
                      - posts
                      - matchCount
                      - pageCount
                      - time
                      - multiplePages
                      - search_query
                      - allCategories
                      - allCategoriesCount
                      - expandSearch
                      - showAsPosts
                      - showAsTopics
                      - title
                      - searchDefaultSortBy
                      - permissions
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/reset:
    get:
      tags:
        - authentication
      summary: Get user password reset (step 1)
      responses:
        '200':
          description: A JSON object containing the 1st step of the user password reset flow
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        nullable: true
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/reset/{code}:
    get:
      tags:
        - authentication
      summary: Get user password reset (step 2)
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
          example: testCode
      responses:
        '200':
          description: A JSON object containing the 2nd step of the user password reset flow
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      valid:
                        type: boolean
                      code:
                        type: string
                      minimumPasswordLength:
                        type: number
                      minimumPasswordStrength:
                        type: number
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/email/unsubscribe/{token}:
    get:
      tags:
        - emails
      summary: Unsubscribe user from email type (user variant)
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          example: testToken
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      payload:
                        type: object
                        properties:
                          uid:
                            type: number
                          template:
                            type: string
                            description: The type of email template to unsubscribe from.
                            enum:
                              - digest
                              - notification
                          type:
                            type: string
                            description: Only used if `template` is `notification`, signifies the type of notification to unsubscribe from.
                            nullable: true
                          iat:
                            type: number
                            description: Reflection of the token's "issued at" claim
                        required:
                          - uid
                          - template
                  - $ref: '#/components/schemas/CommonProps'
        '500':
          description: Server-side error (likely token verification failure)
    post:
      tags:
        - emails
      summary: Unsubscribe user from email type (auto variant)
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          example: testToken
      responses:
        '200':
          description: Successfully unsubscribed
        '500':
          description: Server-side error (likely token verification failure)
  /api/post/{pid}:
    get:
      tags:
        - shorthand
      summary: Access a specific post
      description: This route comes in handy when all you have is the `pid`, and you want to redirect users to the canonical URL for the topic, with the appropriate topic slug and post index.
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: Canonical URL of topic
          content:
            text/plain:
              schema:
                type: string
  /api/flags:
    get:
      tags:
        - flags
      summary: Get flags list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      flags:
                        type: array
                        items:
                          type: object
                          properties:
                            state:
                              type: string
                            heat:
                              type: number
                              description: The number of reports that make up this flag
                            flagId:
                              type: number
                            type:
                              type: string
                            targetId:
                              oneOf:
                                - type: string
                                - type: number
                            targetUid:
                              type: number
                            datetime:
                              type: number
                            labelClass:
                              type: string
                            target_readable:
                              type: string
                            datetimeISO:
                              type: string
                            assignee:
                              type: string
                              nullable: true
                      count:
                        type: number
                        description: The count of returned flags (irrespective of the page count or number of flags per page).
                      analytics:
                        type: array
                        items:
                          type: number
                      hasFilter:
                        type: boolean
                      filters:
                        type: object
                        properties:
                          page:
                            type: number
                          perPage:
                            type: number
                      expanded:
                        type: boolean
                      sort:
                        type: string
                      title:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          bgColor:
                            type: string
                        nullable: true
                      selected:
                        type: object
                        properties:
                          assignee:
                            type: array
                            items:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                displayname:
                                  type: string
                                picture:
                                  nullable: true
                                  type: string
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                          reporterId:
                            type: array
                            items:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                displayname:
                                  type: string
                                picture:
                                  nullable: true
                                  type: string
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                          targetUid:
                            type: array
                            items:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                displayname:
                                  type: string
                                picture:
                                  nullable: true
                                  type: string
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/flags/{flagId}:
    get:
      tags:
        - flags
      summary: /api/flags/{flagId}
      parameters:
        - name: flagId
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/FlagObject'
                  - type: object
                    properties:
                      type_path:
                        type: string
                      assignees:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserObject'
                      type_bool:
                        type: object
                        properties:
                          post:
                            type: boolean
                          user:
                            type: boolean
                          empty:
                            type: boolean
                      title:
                        type: string
                      privileges:
                        type: object
                        properties: {}
                        additionalProperties:
                          description: A list of global and admin privileges, and whether the calling user has (or has inherited) them
                          type: boolean
                      states:
                        type: object
                        properties:
                          open:
                            type: object
                            properties:
                              label:
                                type: string
                              class:
                                type: string
                          wip:
                            type: object
                            properties:
                              label:
                                type: string
                              class:
                                type: string
                          resolved:
                            type: object
                            properties:
                              label:
                                type: string
                              class:
                                type: string
                          rejected:
                            type: object
                            properties:
                              label:
                                type: string
                              class:
                                type: string
                        additionalProperties:
                          type: object
                          description: Plugins are able to add additional flag states, and so their values would also be present here if so.
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/post-queue:
    get:
      tags:
        - admin
      summary: Get flag data
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      allCategoriesUrl:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          bgColor:
                            type: string
                        nullable: true
                      selectedCids:
                        type: array
                        items:
                          type: number
                      posts:
                        type: array
                        items:
                          allOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                                uid:
                                  type: number
                                  description: A user identifier
                                type:
                                  type: string
                                data:
                                  type: object
                                  properties:
                                    title:
                                      type: string
                                    content:
                                      type: string
                                    thumb:
                                      type: string
                                    cid:
                                      oneOf:
                                        - type: number
                                        - type: string
                                    tags:
                                      type: array
                                      items: {}
                                    uid:
                                      type: number
                                      description: A user identifier
                                    req:
                                      type: object
                                      properties:
                                        uid:
                                          type: number
                                          description: A user identifier
                                        ip:
                                          type: string
                                        host:
                                          type: string
                                        protocol:
                                          type: string
                                        secure:
                                          type: boolean
                                        url:
                                          type: string
                                        path:
                                          type: string
                                        headers:
                                          type: object
                                          properties:
                                            x-real-ip:
                                              type: string
                                            x-forwarded-for:
                                              type: string
                                            x-forwarded-proto:
                                              type: string
                                            host:
                                              type: string
                                            x-nginx-proxy:
                                              type: string
                                            connection:
                                              type: string
                                            accept:
                                              type: string
                                            user-agent:
                                              type: string
                                            sec-fetch-site:
                                              type: string
                                            sec-fetch-mode:
                                              type: string
                                            referer:
                                              type: string
                                            accept-encoding:
                                              type: string
                                            accept-language:
                                              type: string
                                            cookie:
                                              type: string
                                    timestamp:
                                      type: number
                                    fromQueue:
                                      type: boolean
                                    timestampISO:
                                      type: string
                                      description: An ISO 8601 formatted date string (complementing `timestamp`)
                                    rawContent:
                                      type: string
                                    tid:
                                      type: number
                                      description: A topic identifier
                                    toPid:
                                      nullable: true
                                user:
                                  type: object
                                  properties:
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    picture:
                                      nullable: true
                                      type: string
                                    uid:
                                      type: number
                                      description: A user identifier
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                topic:
                                  type: object
                                  properties:
                                    cid:
                                      type: number
                                    title:
                                      type: string
                                    titleRaw:
                                      type: string
                            - $ref: '#/components/schemas/CategoryObject'
                      isAdmin:
                        type: boolean
                      canAccept:
                        type: boolean
                      enabled:
                        type: number
                      singlePost:
                        type: boolean
                      privileges:
                        type: object
                        properties: {}
                        additionalProperties:
                          description: A list of global and admin privileges, and whether the calling user has (or has inherited) them
                          type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/post-queue/{id}:
    get:
      tags:
        - admin
      summary: Get flag data
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      allCategoriesUrl:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          bgColor:
                            type: string
                        nullable: true
                      selectedCids:
                        type: array
                        items:
                          type: number
                      posts:
                        type: array
                        items:
                          allOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                                uid:
                                  type: number
                                  description: A user identifier
                                type:
                                  type: string
                                data:
                                  type: object
                                  properties:
                                    title:
                                      type: string
                                    content:
                                      type: string
                                    thumb:
                                      type: string
                                    cid:
                                      oneOf:
                                        - type: number
                                        - type: string
                                    tags:
                                      type: array
                                      items: {}
                                    uid:
                                      type: number
                                      description: A user identifier
                                    req:
                                      type: object
                                      properties:
                                        uid:
                                          type: number
                                          description: A user identifier
                                        ip:
                                          type: string
                                        host:
                                          type: string
                                        protocol:
                                          type: string
                                        secure:
                                          type: boolean
                                        url:
                                          type: string
                                        path:
                                          type: string
                                        headers:
                                          type: object
                                          properties:
                                            x-real-ip:
                                              type: string
                                            x-forwarded-for:
                                              type: string
                                            x-forwarded-proto:
                                              type: string
                                            host:
                                              type: string
                                            x-nginx-proxy:
                                              type: string
                                            connection:
                                              type: string
                                            accept:
                                              type: string
                                            user-agent:
                                              type: string
                                            sec-fetch-site:
                                              type: string
                                            sec-fetch-mode:
                                              type: string
                                            referer:
                                              type: string
                                            accept-encoding:
                                              type: string
                                            accept-language:
                                              type: string
                                            cookie:
                                              type: string
                                    timestamp:
                                      type: number
                                    fromQueue:
                                      type: boolean
                                    timestampISO:
                                      type: string
                                      description: An ISO 8601 formatted date string (complementing `timestamp`)
                                    rawContent:
                                      type: string
                                    tid:
                                      type: number
                                      description: A topic identifier
                                    toPid:
                                      nullable: true
                                user:
                                  type: object
                                  properties:
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    picture:
                                      nullable: true
                                      type: string
                                    uid:
                                      type: number
                                      description: A user identifier
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                topic:
                                  type: object
                                  properties:
                                    cid:
                                      type: number
                                    title:
                                      type: string
                                    titleRaw:
                                      type: string
                            - $ref: '#/components/schemas/CategoryObject'
                      isAdmin:
                        type: boolean
                      canAccept:
                        type: boolean
                      enabled:
                        type: number
                      singlePost:
                        type: boolean
                      privileges:
                        type: object
                        properties: {}
                        additionalProperties:
                          description: A list of global and admin privileges, and whether the calling user has (or has inherited) them
                          type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/ip-blacklist:
    get:
      tags:
        - admin
      summary: Get IP blacklist settings
      responses:
        '418':
          description: 'TODO: A proper response needs to be added. It is not really a teapot | Copy response from corresponding admin route'
  /api/registration-queue:
    get:
      tags:
        - admin
      summary: Get registration queue
      responses:
        '418':
          description: 'TODO: A proper response needs to be added. It is not really a teapot | Copy response from corresponding admin route'
  /api/tags:
    get:
      tags:
        - tags
      summary: Get tags
      description: Returns a list of tags sorted by the most topics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      tags:
                        type: array
                        description: An array of tags sorted by the most topics
                        items:
                          $ref: '#/components/schemas/TagObject'
                      displayTagSearch:
                        type: boolean
                      nextStart:
                        type: number
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/tags/{tag}:
    get:
      tags:
        - tags
      summary: Get tag data
      description: Returns a list of topics that are tagged with {tag}
      parameters:
        - name: tag
          description: The tag used to retrieve the topics
          in: path
          required: true
          schema:
            type: string
          example: test
        - name: page
          description: Page number used in pagination
          in: query
          required: false
          schema:
            type: number
          example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      topics:
                        type: array
                        description: An array of topics that are all tagged with {tag}
                        items:
                          type: object
                          properties:
                            tid:
                              type: number
                              description: A topic identifier
                            uid:
                              type: number
                              description: A user identifier
                            cid:
                              type: number
                              description: A category identifier
                            mainPid:
                              type: number
                              description: The post id of the first post in this topic (also called the "original post")
                            title:
                              type: string
                            slug:
                              type: string
                            timestamp:
                              type: number
                            lastposttime:
                              type: number
                            postcount:
                              type: number
                            viewcount:
                              type: number
                            teaserPid:
                              oneOf:
                                - type: number
                                - type: string
                            deleted:
                              type: number
                            locked:
                              type: number
                            pinned:
                              type: number
                              description: Whether or not this particular topic is pinned to the top of the category
                            upvotes:
                              type: number
                            downvotes:
                              type: number
                            titleRaw:
                              type: string
                            timestampISO:
                              type: string
                              description: An ISO 8601 formatted date string (complementing `timestamp`)
                            lastposttimeISO:
                              type: string
                            votes:
                              type: number
                            category:
                              type: object
                              properties:
                                cid:
                                  type: number
                                  description: A category identifier
                                name:
                                  type: string
                                slug:
                                  type: string
                                icon:
                                  type: string
                                image:
                                  nullable: true
                                imageClass:
                                  nullable: true
                                  type: string
                                bgColor:
                                  type: string
                                color:
                                  type: string
                                disabled:
                                  type: number
                            user:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                reputation:
                                  type: number
                                postcount:
                                  type: number
                                picture:
                                  nullable: true
                                  type: string
                                signature:
                                  nullable: true
                                  type: string
                                banned:
                                  type: number
                                status:
                                  type: string
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                                banned_until_readable:
                                  type: string
                                fullname:
                                  type: string
                            teaser:
                              type: object
                              properties:
                                pid:
                                  type: number
                                uid:
                                  type: number
                                  description: A user identifier
                                timestamp:
                                  type: number
                                tid:
                                  type: number
                                  description: A topic identifier
                                content:
                                  type: string
                                timestampISO:
                                  type: string
                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                                user:
                                  type: object
                                  properties:
                                    uid:
                                      type: number
                                      description: A user identifier
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    picture:
                                      nullable: true
                                      type: string
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                index:
                                  type: number
                            tags:
                              type: array
                              items:
                                $ref: '#/components/schemas/TagObject'
                            isOwner:
                              type: boolean
                            ignored:
                              type: boolean
                            unread:
                              type: boolean
                            bookmark:
                              nullable: true
                            unreplied:
                              type: boolean
                            icons:
                              type: array
                              items: {}
                            index:
                              type: number
                            thumb:
                              type: string
                            isQuestion:
                              nullable: true
                              type: number
                            isSolved:
                              type: number
                      tag:
                        type: string
                      title:
                        type: string
                      canPost:
                        type: boolean
                      isFollowing:
                        type: boolean
                        description: true is user is following this tag
                      showSelect:
                        type: boolean
                      showTopicTools:
                        type: boolean
                      allCategoriesUrl:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          bgColor:
                            type: string
                        nullable: true
                      selectedCids:
                        type: array
                        items:
                          type: number
                      rssFeedUrl:
                        type: string
                      feeds:disableRSS:
                        type: boolean
                    required:
                      - topics
                      - tag
                      - title
                      - categories
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/popular:
    get:
      tags:
        - topics
      summary: Get popular topics
      description: Returns a list of topics sorted by most replies. In an event of a tie breaker, the topic with the most views. Can be filtered by All Time, Day, Week, or Month.
      responses:
        '200':
          description: An array of topic objects sorted by most replies and views.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      nextStart:
                        type: number
                      topicCount:
                        type: number
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      tids:
                        type: array
                        items:
                          type: number
                      canPost:
                        type: boolean
                      showSelect:
                        type: boolean
                      showTopicTools:
                        type: boolean
                      allCategoriesUrl:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          icon:
                            type: string
                          name:
                            type: string
                          bgColor:
                            type: string
                        nullable: true
                      selectedCids:
                        type: array
                        items:
                          type: number
                      selectedTag:
                        type: object
                        properties:
                          label:
                            type: string
                        nullable: true
                      selectedTags:
                        type: array
                        items:
                          type: string
                      feeds:disableRSS:
                        type: number
                      rssFeedUrl:
                        type: string
                      title:
                        type: string
                      filters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            selected:
                              type: boolean
                            filter:
                              type: string
                            icon:
                              type: string
                      selectedFilter:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          selected:
                            type: boolean
                          filter:
                            type: string
                          icon:
                            type: string
                      terms:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            selected:
                              type: boolean
                            term:
                              type: string
                      selectedTerm:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          selected:
                            type: boolean
                          term:
                            type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/top:
    get:
      tags:
        - topics
      summary: Get top topics
      description: Returns a list of topics sorted by most upvotes.
      responses:
        '200':
          description: An array of topic objects sorted by most upvotes.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      nextStart:
                        type: number
                      topicCount:
                        type: number
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      tids:
                        type: array
                        items:
                          type: number
                      canPost:
                        type: boolean
                      showSelect:
                        type: boolean
                      showTopicTools:
                        type: boolean
                      allCategoriesUrl:
                        type: string
                      selectedCategory:
                        type: object
                        properties:
                          cid:
                            type: number
                            description: A category identifier
                          name:
                            type: string
                          level:
                            type: string
                          icon:
                            type: string
                          parentCid:
                            type: number
                            description: The category identifier for the category that is the immediate ancestor of the current category
                          color:
                            type: string
                          bgColor:
                            type: string
                          selected:
                            type: boolean
                        nullable: true
                      selectedCids:
                        type: array
                        items:
                          type: number
                      selectedTag:
                        type: object
                        properties:
                          label:
                            type: string
                        nullable: true
                      selectedTags:
                        type: array
                        items:
                          type: string
                      feeds:disableRSS:
                        type: number
                      rssFeedUrl:
                        type: string
                      title:
                        type: string
                      filters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            selected:
                              type: boolean
                            filter:
                              type: string
                            icon:
                              type: string
                      selectedFilter:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          selected:
                            type: boolean
                          filter:
                            type: string
                          icon:
                            type: string
                      terms:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                            selected:
                              type: boolean
                            term:
                              type: string
                      selectedTerm:
                        type: object
                        properties:
                          name:
                            type: string
                          url:
                            type: string
                          selected:
                            type: boolean
                          term:
                            type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/category/{category_id}/{slug}:
    get:
      tags:
        - categories
      summary: Get a single category
      description: This route retrieves a single category's data, along with its children and the topics created inside of the category.
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: slug
          description: This parameter is not required. If omitted, the request will be automatically redirected with the proper category slug.
          in: path
          required: true
          schema:
            type: string
          example: test
        - name: topic_index
          description: This parameter is not required. If omitted, the request will presume that you want the first post. The API response is largely unaffected by this parameter, it is used client-side (to send the user to the requested post), and changes the meta/link tags in the server-side generated HTML.
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CategoryObject'
                  - type: object
                    properties:
                      tagWhitelist:
                        type: array
                        items:
                          type: string
                      unread:
                        type: boolean
                        description: True if category or it's children have unread topics
                      unread-class:
                        type: string
                      children:
                        type: array
                        items:
                          $ref: '#/components/schemas/CategoryObject'
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      nextStart:
                        type: number
                      isWatched:
                        type: boolean
                      isTracked:
                        type: boolean
                      isNotWatched:
                        type: boolean
                      isIgnored:
                        type: boolean
                      hasFollowers:
                        type: boolean
                        nullable: true
                      title:
                        type: string
                      selectCategoryLabel:
                        type: string
                        description: Label to use for the category selector
                      privileges:
                        type: object
                        properties:
                          topics:create:
                            type: boolean
                          topics:read:
                            type: boolean
                          topics:tag:
                            type: boolean
                          topics:schedule:
                            type: boolean
                          read:
                            type: boolean
                          posts:view_deleted:
                            type: boolean
                          cid:
                            type: string
                          uid:
                            type: number
                            description: A user identifier
                          editable:
                            type: boolean
                          view_deleted:
                            type: boolean
                          isAdminOrMod:
                            type: boolean
                      showSelect:
                        type: boolean
                      showTopicTools:
                        type: boolean
                      topicIndex:
                        type: number
                      rssFeedUrl:
                        type: string
                      feeds:disableRSS:
                        type: number
                      reputation:disabled:
                        type: number
                      selectedTag:
                        type: object
                        properties:
                          label:
                            type: string
                        nullable: true
                      selectedTags:
                        type: array
                        items:
                          type: string
                      sortOptionLabel:
                        type: string
                      handleFull:
                        type: string
                        description: |
                          The full webfinger addressable handle for the category.
                          This property is only present if the category privileges allow it to be accessed by the "fediverse" pseudo-user.
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/category/{category_id}/{slug}/{topic_index}:
    get:
      tags:
        - categories
      summary: Get a single category
      description: This route retrieves a single category's data, along with its children and the topics created inside of the category.
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: slug
          description: This parameter is not required. If omitted, the request will be automatically redirected with the proper category slug.
          in: path
          required: true
          schema:
            type: string
          example: test
        - name: topic_index
          description: This parameter is not required. If omitted, the request will presume that you want the first post. The API response is largely unaffected by this parameter, it is used client-side (to send the user to the requested post), and changes the meta/link tags in the server-side generated HTML.
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CategoryObject'
                  - type: object
                    properties:
                      tagWhitelist:
                        type: array
                        items:
                          type: string
                      unread:
                        type: boolean
                        description: True if category or it's children have unread topics
                      unread-class:
                        type: string
                      children:
                        type: array
                        items:
                          $ref: '#/components/schemas/CategoryObject'
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      nextStart:
                        type: number
                      isWatched:
                        type: boolean
                      isTracked:
                        type: boolean
                      isNotWatched:
                        type: boolean
                      isIgnored:
                        type: boolean
                      hasFollowers:
                        type: boolean
                        nullable: true
                      title:
                        type: string
                      selectCategoryLabel:
                        type: string
                        description: Label to use for the category selector
                      privileges:
                        type: object
                        properties:
                          topics:create:
                            type: boolean
                          topics:read:
                            type: boolean
                          topics:tag:
                            type: boolean
                          topics:schedule:
                            type: boolean
                          read:
                            type: boolean
                          posts:view_deleted:
                            type: boolean
                          cid:
                            type: string
                          uid:
                            type: number
                            description: A user identifier
                          editable:
                            type: boolean
                          view_deleted:
                            type: boolean
                          isAdminOrMod:
                            type: boolean
                      showSelect:
                        type: boolean
                      showTopicTools:
                        type: boolean
                      topicIndex:
                        type: number
                      rssFeedUrl:
                        type: string
                      feeds:disableRSS:
                        type: number
                      reputation:disabled:
                        type: number
                      selectedTag:
                        type: object
                        properties:
                          label:
                            type: string
                        nullable: true
                      selectedTags:
                        type: array
                        items:
                          type: string
                      sortOptionLabel:
                        type: string
                      handleFull:
                        type: string
                        description: |
                          The full webfinger addressable handle for the category.
                          This property is only present if the category privileges allow it to be accessed by the "fediverse" pseudo-user.
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/self:
    get:
      tags:
        - shorthand
      summary: Access your profile data
      description: This shorthand returns the data for the logged in user, identical to the data returned at this route /user/<userslug>
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObjectFull'
  /api/me:
    get:
      tags:
        - shorthand
      summary: Access your own profile's sub-pages
      description: This shorthand is useful if you want to link to pages in your own account profile, but do not want (or have) the `userslug`. It is also especially useful as a means to instruct users on how to do things, as you can easily redirect them to their own profile pages.
      responses:
        '200':
          description: Canonical URL to your requested profile page
  /api/me/*:
    get:
      tags:
        - shorthand
      summary: Access your own profile's sub-pages
      description: This shorthand is useful if you want to link to pages in your own account profile, but do not want (or have) the `userslug`. It is also especially useful as a means to instruct users on how to do things, as you can easily redirect them to their own profile pages.
      responses:
        '200':
          description: Canonical URL to your requested profile page
  /api/uid/{uid*}:
    get:
      tags:
        - shorthand
      summary: Access a user's profile pages
      description: |-
        This particular shorthand is useful if you are looking to redirect to a user's profile (or other associated pages), but do not know or want to retrieve their userslug, which is part of the canonical url.
        For example, to go to `uid` 15's list of topics made, you can navigate to `/api/uid/15/topics`, which will send you to the appropriate canonical URL for that user's topics.
      parameters:
        - name: uid*
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: Canonical URL of user profile page
  /api/user/{userslug}:
    get:
      tags:
        - users
      summary: Get user profile
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      latestPosts:
                        $ref: '#/components/schemas/PostsObject'
                      bestPosts:
                        $ref: '#/components/schemas/PostsObject'
                      hasPrivateChat:
                        type: number
                      title:
                        type: string
                      allowCoverPicture:
                        type: boolean
                      customUserFields:
                        type: array
                      selectedGroup:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            createtime:
                              type: number
                            userTitle:
                              type: string
                            description:
                              type: string
                            memberCount:
                              type: number
                            deleted:
                              type: string
                            hidden:
                              type: number
                            system:
                              type: number
                            private:
                              type: number
                            ownerUid:
                              type: number
                            icon:
                              type: string
                            labelColor:
                              type: string
                            cover:url:
                              type: string
                            cover:position:
                              type: string
                            userTitleEnabled:
                              type: number
                            disableJoinRequests:
                              type: number
                            disableLeave:
                              type: number
                            nameEncoded:
                              type: string
                            displayName:
                              type: string
                            textColor:
                              type: string
                            createtimeISO:
                              type: string
                            cover:thumb:url:
                              type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/following:
    get:
      tags:
        - users
      summary: Get followed users
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
        - name: page
          in: query
          schema:
            type: number
          example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      title:
                        type: string
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                              description: A user identifier
                            username:
                              type: string
                              description: A friendly name for a given user account
                            userslug:
                              type: string
                              description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                            picture:
                              nullable: true
                              type: string
                            status:
                              type: string
                            postcount:
                              type: number
                            reputation:
                              type: number
                            email:confirmed:
                              type: number
                              description: Whether the user has confirmed their email address or not
                            lastonline:
                              type: number
                            flags:
                              nullable: true
                            banned:
                              type: number
                            banned:expire:
                              type: number
                            joindate:
                              type: number
                              description: A UNIX timestamp representing the moment the user's account was created
                            icon:text:
                              type: string
                              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                            icon:bgColor:
                              type: string
                              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                              example: '#f44336'
                            joindateISO:
                              type: string
                            lastonlineISO:
                              type: string
                            banned_until:
                              type: number
                            banned_until_readable:
                              type: string
                            administrator:
                              type: boolean
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/followers:
    get:
      tags:
        - users
      summary: Get followers
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
        - name: page
          in: query
          schema:
            type: number
          example: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      title:
                        type: string
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                              description: A user identifier
                            username:
                              type: string
                              description: A friendly name for a given user account
                            userslug:
                              type: string
                              description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                            picture:
                              nullable: true
                              type: string
                            status:
                              type: string
                            postcount:
                              type: number
                            reputation:
                              type: number
                            email:confirmed:
                              type: number
                              description: Whether the user has confirmed their email address or not
                            lastonline:
                              type: number
                            flags:
                              nullable: true
                            banned:
                              type: number
                            banned:expire:
                              type: number
                            joindate:
                              type: number
                              description: A UNIX timestamp representing the moment the user's account was created
                            icon:text:
                              type: string
                              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                            icon:bgColor:
                              type: string
                              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                              example: '#f44336'
                            joindateISO:
                              type: string
                            lastonlineISO:
                              type: string
                            banned_until:
                              type: number
                            banned_until_readable:
                              type: string
                            administrator:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/categories:
    get:
      tags:
        - users
      summary: Get user's watched categories
      description: This route retrieves the list of categories and their watch states
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            cid:
                              type: number
                              description: A category identifier
                            name:
                              type: string
                            level:
                              type: string
                            icon:
                              type: string
                            parentCid:
                              type: number
                              description: The category identifier for the category that is the immediate ancestor of the current category
                            color:
                              type: string
                            bgColor:
                              type: string
                            descriptionParsed:
                              type: string
                            depth:
                              type: number
                            slug:
                              type: string
                            isIgnored:
                              type: boolean
                            isWatched:
                              type: boolean
                            isTracked:
                              type: boolean
                            isNotWatched:
                              type: boolean
                            imageClass:
                              type: string
                      title:
                        type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/tags:
    get:
      tags:
        - users
      summary: Get user's watched tags
      description: This route retrieves the list of tags the user is watching
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      tags:
                        type: array
                        items:
                          type: string
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/posts:
    get:
      tags:
        - users
      summary: Get a user's posts
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/topics:
    get:
      tags:
        - users
      summary: Get a user's topics
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/shares:
    get:
      tags:
        - users
      summary: Get a user's shared topics
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/best:
    get:
      tags:
        - users
      summary: Get a user's best performing posts
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/controversial:
    get:
      tags:
        - users
      summary: Get a user's worse performing posts ("controversial")
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/groups:
    get:
      tags:
        - users
      summary: Get user's groups
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      title:
                        type: string
                      template:
                        type: object
                        properties:
                          name:
                            type: string
                          account/groups:
                            type: boolean
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/bookmarks:
    get:
      tags:
        - users
      summary: Get user's bookmarks
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/watched:
    get:
      tags:
        - users
      summary: Get user's watched topics
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      moderationNote:
                        type: string
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/ignored:
    get:
      tags:
        - users
      summary: Get user's ignored topics
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/read:
    get:
      tags:
        - users
      summary: Get a user's read topics
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/upvoted:
    get:
      tags:
        - users
      summary: Get user's upvoted posts
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                        description: Translation key for message notifying user that there were no posts found
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                    required:
                      - posts
                      - nextStart
                      - noItemsFoundKey
                      - title
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/downvoted:
    get:
      tags:
        - users
      summary: Get user's downvoted posts
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      nextStart:
                        type: number
                      noItemsFoundKey:
                        type: string
                        description: Translation key for message notifying user that there were no posts found
                      title:
                        type: string
                      showSort:
                        type: boolean
                      sortOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                    required:
                      - posts
                      - nextStart
                      - noItemsFoundKey
                      - title
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/edit:
    get:
      tags:
        - users
      summary: Get user profile for editing
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      maximumSignatureLength:
                        type: number
                      maximumAboutMeLength:
                        type: number
                      maximumProfileImageSize:
                        type: number
                      allowProfilePicture:
                        type: boolean
                      allowCoverPicture:
                        type: boolean
                      allowProfileImageUploads:
                        type: number
                      allowedProfileImageExtensions:
                        type: string
                      allowMultipleBadges:
                        type: boolean
                      allowAccountDelete:
                        type: boolean
                      allowAboutMe:
                        type: boolean
                      allowSignature:
                        type: boolean
                      profileImageDimension:
                        type: number
                      defaultAvatar:
                        type: string
                      sso:
                        type: array
                        items:
                          type: object
                          properties:
                            associated:
                              type: boolean
                            url:
                              type: string
                            name:
                              type: string
                            icon:
                              type: string
                            deauthUrl:
                              type: string
                      groupSelectSize:
                        type: number
                      title:
                        type: string
                      customUserFields:
                        type: array
                      editButtons:
                        type: array
                        items:
                          type: object
                          properties:
                            link:
                              type: string
                              description: A relative path to the page linked to
                            text:
                              type: string
                              description: Button label
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/edit/username:
    get:
      tags:
        - users
      summary: Get configs for username editing
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      hasPassword:
                        type: boolean
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/edit/email:
    get:
      tags:
        - users
      summary: Get configs for email editing
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
                description: A relative path to the registration interstitial page so they can add or update an email for their account
                example: /register/complete
        '302':
          description: Redirects the user to a registration interstitial page so they can add or update an email for their account
          headers:
            Location:
              schema:
                type: string
                example: /register/complete
  /api/user/{userslug}/edit/password:
    get:
      tags:
        - users
      summary: Get configs for password editing
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      hasPassword:
                        type: boolean
                      minimumPasswordLength:
                        type: number
                      minimumPasswordStrength:
                        type: number
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/info:
    get:
      tags:
        - users
      summary: Get user moderation info
      description: Administrators and Global Moderators get access to the `/info` page, which shows some backend data that is useful from a moderation point-of-view (such as IP addresses, recent bans, moderation history, etc).
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      history:
                        type: object
                        properties:
                          flags:
                            type: array
                            items:
                              type: object
                              properties:
                                pid:
                                  type: number
                                timestamp:
                                  type: number
                                timestampISO:
                                  type: string
                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                              additionalProperties:
                                description: Contextual data is added to this object (such as topic data, etc.)
                          bans:
                            $ref: '#/components/schemas/BanMuteArray'
                          mutes:
                            $ref: '#/components/schemas/BanMuteArray'
                      sessions:
                        type: array
                        items:
                          type: object
                          properties:
                            ip:
                              type: string
                            uuid:
                              type: string
                            datetime:
                              type: number
                            platform:
                              type: string
                            browser:
                              type: string
                            version:
                              type: string
                            current:
                              type: boolean
                            datetimeISO:
                              type: string
                      usernames:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                            byUid:
                              type: string
                            timestamp:
                              type: number
                            timestampISO:
                              type: string
                              description: An ISO 8601 formatted date string (complementing `timestamp`)
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                            byUid:
                              type: string
                            byUser:
                              type: object
                            timestamp:
                              type: number
                            timestampISO:
                              type: string
                              description: An ISO 8601 formatted date string (complementing `timestamp`)
                      moderationNotes:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                            note:
                              type: string
                            timestamp:
                              type: number
                            timestampISO:
                              type: string
                            user:
                              type: object
                              properties:
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  type: string
                                uid:
                                  type: number
                                  description: A user identifier
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                      title:
                        type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/settings:
    get:
      tags:
        - users
      summary: Get user's settings
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      settings:
                        $ref: '#/components/schemas/Settings'
                      languages:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            code:
                              type: string
                            dir:
                              type: string
                            selected:
                              type: boolean
                      acpLanguages:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            code:
                              type: string
                            dir:
                              type: string
                            selected:
                              type: boolean
                      customSettings:
                        type: array
                        items:
                          type: object
                          properties: {}
                          additionalProperties: {}
                      homePageRoutes:
                        type: array
                        items:
                          type: object
                          properties:
                            route:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                      notificationSettings:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            label:
                              type: string
                            none:
                              type: boolean
                            notification:
                              type: boolean
                            email:
                              type: boolean
                            notificationemail:
                              type: boolean
                      disableEmailSubscriptions:
                        type: number
                      dailyDigestFreqOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                            name:
                              type: string
                            selected:
                              type: boolean
                      bootswatchSkinOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                            selected:
                              type: boolean
                      upvoteNotifFreq:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            selected:
                              type: boolean
                      categoryWatchState:
                        type: object
                        properties:
                          tracking:
                            type: boolean
                      disableCustomUserSkins:
                        type: number
                      allowUserHomePage:
                        type: number
                      hideFullname:
                        type: number
                      hideEmail:
                        type: number
                      inTopicSearchAvailable:
                        type: boolean
                      maxTopicsPerPage:
                        type: number
                      maxPostsPerPage:
                        type: number
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/uploads:
    get:
      tags:
        - users
      summary: Get user's uploads
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      uploads:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            url:
                              type: string
                      privateUploads:
                        type: boolean
                      title:
                        type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/consent:
    get:
      tags:
        - users
      summary: Get user's GDPR consent settings
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      gdpr_consent:
                        type: boolean
                      digest:
                        type: object
                        properties:
                          frequency:
                            type: string
                          enabled:
                            type: boolean
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/blocks:
    get:
      tags:
        - users
      summary: Get user's blocks
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserObjectSlim'
                      title:
                        type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/sessions:
    get:
      tags:
        - users
      summary: Get user's active sessions
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserObjectFull'
                  - type: object
                    properties:
                      sessions:
                        type: array
                        items:
                          type: object
                          properties:
                            ip:
                              type: string
                            uuid:
                              type: string
                            datetime:
                              type: number
                            platform:
                              type: string
                            browser:
                              type: string
                            version:
                              type: string
                            current:
                              type: boolean
                            datetimeISO:
                              type: string
                      title:
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/session/{uuid}:
    delete:
      tags:
        - users
      summary: Revoke a user session
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
        - name: uuid
          in: path
          required: true
          schema:
            type: string
          example: testuuid
      responses:
        '200':
          description: User session revoked
  /api/notifications:
    get:
      tags:
        - notifications
      summary: Get notifications
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      notifications:
                        type: array
                        items:
                          type: object
                          properties:
                            bodyShort:
                              type: string
                            path:
                              type: string
                            nid:
                              type: string
                            from:
                              type: number
                            importance:
                              type: number
                            datetime:
                              type: number
                            datetimeISO:
                              type: string
                            user:
                              type: object
                              properties:
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                displayname:
                                  type: string
                                  description: This is either username or fullname depending on forum and user settings
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  type: string
                                  nullable: true
                                uid:
                                  type: number
                                  description: A user identifier
                                isLocal:
                                  type: boolean
                                  description: Whether the user belongs to the local installation or not.
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                            image:
                              type: string
                              nullable: true
                            read:
                              type: boolean
                            readClass:
                              type: string
                      filters:
                        $ref: '#/components/schemas/FiltersArray'
                      regularFilters:
                        $ref: '#/components/schemas/FiltersArray'
                      moderatorFilters:
                        $ref: '#/components/schemas/FiltersArray'
                      selectedFilter:
                        $ref: '#/components/schemas/FiltersObject'
                      title:
                        type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/chats/{roomid}:
    get:
      tags:
        - users
      summary: Get chat room
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
        - name: roomid
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: index
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      roomId:
                        type: number
                      roomName:
                        type: string
                      public:
                        type: boolean
                      userCount:
                        type: number
                      messageCount:
                        type: number
                      scrollToIndex:
                        type: number
                        nullable: true
                      icon:
                        type: string
                      groups:
                        type: array
                      timestamp:
                        type: number
                        description: Timestamp of when room was created
                      notificationSetting:
                        type: number
                      notificationOptions:
                        type: array
                      notificationOptionsIcon:
                        type: string
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            content:
                              type: string
                            timestamp:
                              type: number
                            fromuid:
                              type: number
                            roomId:
                              type: string
                            deleted:
                              type: number
                            system:
                              type: number
                            edited:
                              type: number
                            timestampISO:
                              type: string
                              description: An ISO 8601 formatted date string (complementing `timestamp`)
                            editedISO:
                              type: string
                            mid:
                              type: number
                            messageId:
                              type: number
                            fromUser:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                isLocal:
                                  type: boolean
                                  description: Whether the user belongs to the local installation or not.
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                displayname:
                                  type: string
                                  description: This is either username or fullname depending on forum and user settings
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  type: string
                                  nullable: true
                                status:
                                  type: string
                                banned:
                                  type: boolean
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                                banned_until_readable:
                                  type: string
                                deleted:
                                  type: boolean
                            self:
                              type: number
                            newSet:
                              type: boolean
                            index:
                              type: number
                            isOwner:
                              type: boolean
                      isOwner:
                        type: boolean
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                              description: A user identifier
                            isLocal:
                              type: boolean
                              description: Whether the user belongs to the local installation or not.
                            username:
                              type: string
                              description: A friendly name for a given user account
                            displayname:
                              type: string
                              description: This is either username or fullname depending on forum and user settings
                            picture:
                              type: string
                              nullable: true
                            status:
                              type: string
                            online:
                              type: boolean
                            icon:text:
                              type: string
                              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                            icon:bgColor:
                              type: string
                              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                              example: '#f44336'
                            isOwner:
                              type: boolean
                            index:
                              type: number
                      canReply:
                        type: boolean
                      canUpload:
                        type: boolean
                      groupChat:
                        type: boolean
                      usernames:
                        type: string
                      maximumUsersInChatRoom:
                        type: number
                      maximumChatMessageLength:
                        type: number
                      showUserInput:
                        type: boolean
                      isAdminOrGlobalMod:
                        type: boolean
                      isAdmin:
                        type: boolean
                      rooms:
                        type: array
                        items:
                          type: object
                          properties:
                            roomId:
                              type: number
                            roomName:
                              type: string
                            public:
                              type: boolean
                            userCount:
                              type: number
                            messageCount:
                              type: number
                            groups:
                              type: array
                            timestamp:
                              type: number
                              description: Timestamp of when room was created
                            users:
                              type: array
                              items:
                                type: object
                                properties:
                                  uid:
                                    type: number
                                    description: A user identifier
                                  isLocal:
                                    type: boolean
                                    description: Whether the user belongs to the local installation or not.
                                  username:
                                    type: string
                                    description: A friendly name for a given user account
                                  displayname:
                                    type: string
                                    description: This is either username or fullname depending on forum and user settings
                                  userslug:
                                    type: string
                                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                  picture:
                                    nullable: true
                                    type: string
                                  status:
                                    type: string
                                  lastonline:
                                    type: number
                                  icon:text:
                                    type: string
                                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                  icon:bgColor:
                                    type: string
                                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                    example: '#f44336'
                                  lastonlineISO:
                                    type: string
                            groupChat:
                              type: boolean
                            unread:
                              type: boolean
                            teaser:
                              type: object
                              properties:
                                roomId:
                                  type: number
                                fromuid:
                                  type: number
                                content:
                                  type: string
                                timestamp:
                                  type: number
                                timestampISO:
                                  type: string
                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                                user:
                                  type: object
                                  properties:
                                    uid:
                                      type: number
                                      description: A user identifier
                                    isLocal:
                                      type: boolean
                                      description: Whether the user belongs to the local installation or not.
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    displayname:
                                      type: string
                                      description: This is either username or fullname depending on forum and user settings
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    picture:
                                      nullable: true
                                      type: string
                                    status:
                                      type: string
                                    lastonline:
                                      type: number
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                    lastonlineISO:
                                      type: string
                              nullable: true
                            lastUser:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                isLocal:
                                  type: boolean
                                  description: Whether the user belongs to the local installation or not.
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                displayname:
                                  type: string
                                  description: This is either username or fullname depending on forum and user settings
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  nullable: true
                                  type: string
                                status:
                                  type: string
                                lastonline:
                                  type: number
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                                lastonlineISO:
                                  type: string
                            usernames:
                              type: string
                            chatWithMessage:
                              type: string
                            notificationSetting:
                              type: number
                      publicRooms:
                        type: array
                        items:
                          type: object
                          properties:
                            owner:
                              oneOf:
                                - type: number
                                - type: string
                            roomId:
                              type: number
                            roomName:
                              type: string
                            public:
                              type: boolean
                            users:
                              type: array
                              items:
                                type: object
                                properties:
                                  uid:
                                    type: number
                                    description: A user identifier
                                  isLocal:
                                    type: boolean
                                    description: Whether the user belongs to the local installation or not.
                                  username:
                                    type: string
                                    description: A friendly name for a given user account
                                  displayname:
                                    type: string
                                    description: This is either username or fullname depending on forum and user settings
                                  userslug:
                                    type: string
                                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                  picture:
                                    nullable: true
                                    type: string
                                  status:
                                    type: string
                                  lastonline:
                                    type: number
                                  icon:text:
                                    type: string
                                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                  icon:bgColor:
                                    type: string
                                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                    example: '#f44336'
                                  lastonlineISO:
                                    type: string
                            groupChat:
                              type: boolean
                            unread:
                              type: boolean
                            teaser:
                              type: object
                              properties:
                                fromuid:
                                  type: number
                                content:
                                  type: string
                                timestamp:
                                  type: number
                                timestampISO:
                                  type: string
                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                                user:
                                  type: object
                                  properties:
                                    uid:
                                      type: number
                                      description: A user identifier
                                    isLocal:
                                      type: boolean
                                      description: Whether the user belongs to the local installation or not.
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    displayname:
                                      type: string
                                      description: This is either username or fullname depending on forum and user settings
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    picture:
                                      nullable: true
                                      type: string
                                    status:
                                      type: string
                                    lastonline:
                                      type: number
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                    lastonlineISO:
                                      type: string
                              nullable: true
                            lastUser:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                isLocal:
                                  type: boolean
                                  description: Whether the user belongs to the local installation or not.
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                displayname:
                                  type: string
                                  description: This is either username or fullname depending on forum and user settings
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  nullable: true
                                  type: string
                                status:
                                  type: string
                                lastonline:
                                  type: number
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                                lastonlineISO:
                                  type: string
                            usernames:
                              type: string
                            chatWithMessage:
                              type: string
                      privateRoomCount:
                        type: number
                      nextStart:
                        type: number
                      title:
                        type: string
                      uid:
                        type: number
                        description: A user identifier
                      userslug:
                        type: string
                        description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                      canViewInfo:
                        type: boolean
                      chatWithMessage:
                        type: string
                      bodyClasses:
                        type: array
                      composerActions:
                        type: array
                        description: A list of buttons that are added next to the send message button by plugins
                  - $ref: '#/components/schemas/CommonProps'
  /api/user/{userslug}/chats/{roomid}/{index}:
    get:
      tags:
        - users
      summary: Get chat room
      parameters:
        - name: userslug
          in: path
          required: true
          schema:
            type: string
          example: admin
        - name: roomid
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: index
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      roomId:
                        type: number
                      roomName:
                        type: string
                      public:
                        type: boolean
                      userCount:
                        type: number
                      messageCount:
                        type: number
                      scrollToIndex:
                        type: number
                        nullable: true
                      icon:
                        type: string
                      groups:
                        type: array
                      timestamp:
                        type: number
                        description: Timestamp of when room was created
                      notificationSetting:
                        type: number
                      notificationOptions:
                        type: array
                      notificationOptionsIcon:
                        type: string
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            content:
                              type: string
                            timestamp:
                              type: number
                            fromuid:
                              type: number
                            roomId:
                              type: string
                            deleted:
                              type: number
                            system:
                              type: number
                            edited:
                              type: number
                            timestampISO:
                              type: string
                              description: An ISO 8601 formatted date string (complementing `timestamp`)
                            editedISO:
                              type: string
                            mid:
                              type: number
                            messageId:
                              type: number
                            fromUser:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                isLocal:
                                  type: boolean
                                  description: Whether the user belongs to the local installation or not.
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                displayname:
                                  type: string
                                  description: This is either username or fullname depending on forum and user settings
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  type: string
                                  nullable: true
                                status:
                                  type: string
                                banned:
                                  type: boolean
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                                banned_until_readable:
                                  type: string
                                deleted:
                                  type: boolean
                            self:
                              type: number
                            newSet:
                              type: boolean
                            index:
                              type: number
                            isOwner:
                              type: boolean
                      isOwner:
                        type: boolean
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            uid:
                              type: number
                              description: A user identifier
                            isLocal:
                              type: boolean
                              description: Whether the user belongs to the local installation or not.
                            username:
                              type: string
                              description: A friendly name for a given user account
                            displayname:
                              type: string
                              description: This is either username or fullname depending on forum and user settings
                            picture:
                              type: string
                              nullable: true
                            status:
                              type: string
                            online:
                              type: boolean
                            icon:text:
                              type: string
                              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                            icon:bgColor:
                              type: string
                              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                              example: '#f44336'
                            isOwner:
                              type: boolean
                            index:
                              type: number
                      canReply:
                        type: boolean
                      canUpload:
                        type: boolean
                      groupChat:
                        type: boolean
                      usernames:
                        type: string
                      maximumUsersInChatRoom:
                        type: number
                      maximumChatMessageLength:
                        type: number
                      showUserInput:
                        type: boolean
                      isAdminOrGlobalMod:
                        type: boolean
                      isAdmin:
                        type: boolean
                      rooms:
                        type: array
                        items:
                          type: object
                          properties:
                            roomId:
                              type: number
                            roomName:
                              type: string
                            public:
                              type: boolean
                            userCount:
                              type: number
                            messageCount:
                              type: number
                            groups:
                              type: array
                            timestamp:
                              type: number
                              description: Timestamp of when room was created
                            users:
                              type: array
                              items:
                                type: object
                                properties:
                                  uid:
                                    type: number
                                    description: A user identifier
                                  isLocal:
                                    type: boolean
                                    description: Whether the user belongs to the local installation or not.
                                  username:
                                    type: string
                                    description: A friendly name for a given user account
                                  displayname:
                                    type: string
                                    description: This is either username or fullname depending on forum and user settings
                                  userslug:
                                    type: string
                                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                  picture:
                                    nullable: true
                                    type: string
                                  status:
                                    type: string
                                  lastonline:
                                    type: number
                                  icon:text:
                                    type: string
                                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                  icon:bgColor:
                                    type: string
                                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                    example: '#f44336'
                                  lastonlineISO:
                                    type: string
                            groupChat:
                              type: boolean
                            unread:
                              type: boolean
                            teaser:
                              type: object
                              properties:
                                roomId:
                                  type: number
                                fromuid:
                                  type: number
                                content:
                                  type: string
                                timestamp:
                                  type: number
                                timestampISO:
                                  type: string
                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                                user:
                                  type: object
                                  properties:
                                    uid:
                                      type: number
                                      description: A user identifier
                                    isLocal:
                                      type: boolean
                                      description: Whether the user belongs to the local installation or not.
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    displayname:
                                      type: string
                                      description: This is either username or fullname depending on forum and user settings
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    picture:
                                      nullable: true
                                      type: string
                                    status:
                                      type: string
                                    lastonline:
                                      type: number
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                    lastonlineISO:
                                      type: string
                              nullable: true
                            lastUser:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                isLocal:
                                  type: boolean
                                  description: Whether the user belongs to the local installation or not.
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                displayname:
                                  type: string
                                  description: This is either username or fullname depending on forum and user settings
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  nullable: true
                                  type: string
                                status:
                                  type: string
                                lastonline:
                                  type: number
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                                lastonlineISO:
                                  type: string
                            usernames:
                              type: string
                            chatWithMessage:
                              type: string
                            notificationSetting:
                              type: number
                      publicRooms:
                        type: array
                        items:
                          type: object
                          properties:
                            owner:
                              oneOf:
                                - type: number
                                - type: string
                            roomId:
                              type: number
                            roomName:
                              type: string
                            public:
                              type: boolean
                            users:
                              type: array
                              items:
                                type: object
                                properties:
                                  uid:
                                    type: number
                                    description: A user identifier
                                  isLocal:
                                    type: boolean
                                    description: Whether the user belongs to the local installation or not.
                                  username:
                                    type: string
                                    description: A friendly name for a given user account
                                  displayname:
                                    type: string
                                    description: This is either username or fullname depending on forum and user settings
                                  userslug:
                                    type: string
                                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                  picture:
                                    nullable: true
                                    type: string
                                  status:
                                    type: string
                                  lastonline:
                                    type: number
                                  icon:text:
                                    type: string
                                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                  icon:bgColor:
                                    type: string
                                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                    example: '#f44336'
                                  lastonlineISO:
                                    type: string
                            groupChat:
                              type: boolean
                            unread:
                              type: boolean
                            teaser:
                              type: object
                              properties:
                                fromuid:
                                  type: number
                                content:
                                  type: string
                                timestamp:
                                  type: number
                                timestampISO:
                                  type: string
                                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                                user:
                                  type: object
                                  properties:
                                    uid:
                                      type: number
                                      description: A user identifier
                                    isLocal:
                                      type: boolean
                                      description: Whether the user belongs to the local installation or not.
                                    username:
                                      type: string
                                      description: A friendly name for a given user account
                                    displayname:
                                      type: string
                                      description: This is either username or fullname depending on forum and user settings
                                    userslug:
                                      type: string
                                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                    picture:
                                      nullable: true
                                      type: string
                                    status:
                                      type: string
                                    lastonline:
                                      type: number
                                    icon:text:
                                      type: string
                                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                    icon:bgColor:
                                      type: string
                                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                      example: '#f44336'
                                    lastonlineISO:
                                      type: string
                              nullable: true
                            lastUser:
                              type: object
                              properties:
                                uid:
                                  type: number
                                  description: A user identifier
                                isLocal:
                                  type: boolean
                                  description: Whether the user belongs to the local installation or not.
                                username:
                                  type: string
                                  description: A friendly name for a given user account
                                displayname:
                                  type: string
                                  description: This is either username or fullname depending on forum and user settings
                                userslug:
                                  type: string
                                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                picture:
                                  nullable: true
                                  type: string
                                status:
                                  type: string
                                lastonline:
                                  type: number
                                icon:text:
                                  type: string
                                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                icon:bgColor:
                                  type: string
                                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                  example: '#f44336'
                                lastonlineISO:
                                  type: string
                            usernames:
                              type: string
                            chatWithMessage:
                              type: string
                      privateRoomCount:
                        type: number
                      nextStart:
                        type: number
                      title:
                        type: string
                      uid:
                        type: number
                        description: A user identifier
                      userslug:
                        type: string
                        description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                      canViewInfo:
                        type: boolean
                      chatWithMessage:
                        type: string
                      bodyClasses:
                        type: array
                      composerActions:
                        type: array
                        description: A list of buttons that are added next to the send message button by plugins
                  - $ref: '#/components/schemas/CommonProps'
  /api/chats/{roomid}:
    get:
      tags:
        - shorthand
      summary: Access a chat room
      description: Redirects a request to the proper chat page URL
      parameters:
        - name: roomid
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: index
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: Chat identifier resolved
          content:
            text/plain:
              schema:
                type: string
                description: A relative path to the canonical URL for that chat page
  /api/chats/{roomid}/{index}:
    get:
      tags:
        - shorthand
      summary: Access a chat room
      description: Redirects a request to the proper chat page URL
      parameters:
        - name: roomid
          in: path
          required: true
          schema:
            type: string
          example: 1
        - name: index
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: Chat identifier resolved
          content:
            text/plain:
              schema:
                type: string
                description: A relative path to the canonical URL for that chat page
  /api/message/{mid}:
    get:
      tags:
        - shorthand
      summary: Access a specific chat message
      description: This route comes in handy when all you have is the `mid`, and you want to redirect users to the canonical URL for the chat message, with the appropriate user slug and room id
      parameters:
        - name: mid
          in: path
          required: true
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: Canonical URL of chat message
          content:
            text/plain:
              schema:
                type: string
  /api/groups:
    get:
      tags:
        - groups
      summary: Get user groups
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      groups:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            description:
                              type: string
                            hidden:
                              type: number
                            system:
                              type: number
                            userTitle:
                              type: string
                            userTitleEscaped:
                              type: string
                            icon:
                              type: string
                            labelColor:
                              type: string
                            createtime:
                              type: number
                            slug:
                              type: string
                            memberCount:
                              type: number
                            private:
                              type: number
                            userTitleEnabled:
                              type: number
                            disableJoinRequests:
                              type: number
                            disableLeave:
                              type: number
                            nameEncoded:
                              type: string
                            displayName:
                              type: string
                            textColor:
                              type: string
                            createtimeISO:
                              type: string
                            cover:thumb:url:
                              type: string
                            cover:url:
                              type: string
                            cover:position:
                              type: string
                            memberPostCids:
                              type: string
                            memberPostCidsArray:
                              type: array
                              items:
                                type: number
                                example:
                                  - 1
                                  - 2
                                  - 3
                            members:
                              type: array
                              items:
                                type: object
                                properties:
                                  uid:
                                    type: number
                                    description: A user identifier
                                  username:
                                    type: string
                                    description: A friendly name for a given user account
                                  picture:
                                    nullable: true
                                    type: string
                                  userslug:
                                    type: string
                                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                                  icon:text:
                                    type: string
                                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                                  icon:bgColor:
                                    type: string
                                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                                    example: '#f44336'
                            truncated:
                              type: boolean
                      allowGroupCreation:
                        type: boolean
                      sort:
                        type: string
                      title:
                        type: string
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/groups/{slug}:
    get:
      tags:
        - groups
      summary: Get user group details
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: administrators
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      group:
                        $ref: '#/components/schemas/GroupFullObject'
                      posts:
                        $ref: '#/components/schemas/PostsObject'
                      isAdmin:
                        type: boolean
                      isGlobalMod:
                        type: boolean
                      allowPrivateGroups:
                        type: number
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/groups/{slug}/members:
    get:
      tags:
        - groups
      summary: Get user group members
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: administrators
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      users:
                        type: array
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/world:
    get:
      tags:
        - topics
      summary: Get external topics
      description: Returns a list of external topics known to the local instance
      parameters:
        - name: filter
          in: path
          required: true
          schema:
            type: string
          example: all
      responses:
        '200':
          description: An array of topic objects sorted by timestamp.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CategoryObject'
                  - type: object
                    properties:
                      tagWhitelist:
                        type: array
                        items:
                          type: string
                      topicCount:
                        type: number
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TopicObject'
                      selectedTag:
                        type: object
                        properties:
                          label:
                            type: string
                        nullable: true
                      selectedTags:
                        type: array
                        items:
                          type: string
                      isWatched:
                        type: boolean
                      isTracked:
                        type: boolean
                      isNotWatched:
                        type: boolean
                      isIgnored:
                        type: boolean
                      hasFollowers:
                        type: boolean
                        nullable: true
                      feeds:disableRSS:
                        type: number
                      rssFeedUrl:
                        type: string
                      reputation:disabled:
                        type: number
                      title:
                        type: string
                      privileges:
                        type: object
                        properties:
                          topics:create:
                            type: boolean
                          topics:read:
                            type: boolean
                          topics:tag:
                            type: boolean
                          topics:schedule:
                            type: boolean
                          read:
                            type: boolean
                          posts:view_deleted:
                            type: boolean
                          cid:
                            type: string
                          uid:
                            type: number
                            description: A user identifier
                          editable:
                            type: boolean
                          view_deleted:
                            type: boolean
                          isAdminOrMod:
                            type: boolean
                      categories:
                        type: array
                        items:
                          $ref: '#/components/schemas/CategoryObject'
                  - $ref: '#/components/schemas/Pagination'
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
  /api/ap:
    get:
      tags:
        - activitypub
      summary: Fetch URL for in-app processing
      description: |
        This route accepts a URL in the `resource` query parameter, and runs some quick tests to
        determine whether that address points to an ActivityPub resource. If so, then it will try
        to process it locally and redirect the user to the local representation of it.

        If there is no local representation available, then the user is sent off-site as originally
        expected.
      parameters:
        - in: query
          name: resource
          schema:
            type: string
          description: A URL to query for potential ActivityPub resource
          example: https://example.org/ap
      responses:
        '200':
          description: Sent if the `/api` prefix is used. The `X-Redirect` header is sent with the redirection target.
          headers:
            X-Redirect:
              schema:
                type: string
        '307':
          description: Redirect the user to the local representation or original URL.
          headers:
            Location:
              schema:
                type: string
  /api/outgoing:
    get:
      tags:
        - other
      summary: Warn before navigating externally
      parameters:
        - in: query
          name: url
          schema:
            type: string
          description: URL of the page to warn the user about
          example: https://example.org
      description: This route presents a warning to a user notifying them that the page they are about to view is hosted externally. They then have the option of continuing onwards or going back to where they came from.
      responses:
        '200':
          description: Warning page presented
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      outgoing:
                        type: string
                        description: Escaped URL of the page to navigate to
                      title:
                        description: The page title
                        type: string
                  - $ref: '#/components/schemas/Breadcrumbs'
                  - $ref: '#/components/schemas/CommonProps'
components:
  schemas:
    CategoryObject:
      allOf:
        - type: object
          properties:
            cid:
              type: number
              description: A category identifier assigned upon category creation (this value cannot be changed)
            name:
              type: string
              description: The category's name/title
            handle:
              type: string
              description: |
                An URL-safe name/handle used to represent the category over federated networks (e.g. ActivityPub).

                This value is separate from the `slug`, which is used specifically in the URL as a human-readable representation.

                The handle is unique across-the-board between users/groups/categories.
            description:
              type: string
              description: A variable-length description of the category (usually displayed underneath the category name)
            descriptionParsed:
              type: string
              description: A variable-length description of the category (usually displayed underneath the category name). Unlike `description`, this value here will have been run through any parsers installed on the forum (e.g. Markdown)
            icon:
              type: string
              description: A FontAwesome icon string
              example: fa-comments-o
            bgColor:
              type: string
              description: Theme-related, a six-character hexadecimal string representing the background colour of the category
            color:
              type: string
              description: Theme-related, a six-character hexadecimal string representing the foreground/text colour of the category
            slug:
              type: string
              description: An URL-safe variant of the category title. This value is automatically generated.
              readOnly: true
            parentCid:
              type: number
              description: The category identifier for the category that is the immediate ancestor of the current category
            topic_count:
              type: number
              description: The number of topics in the category
            post_count:
              type: number
              description: The number of posts in the category
            disabled:
              type: number
              description: Whether or not this category is disabled.
            order:
              type: number
              description: A number representing the category's place in the hierarchy
            link:
              type: string
              description: If set, attempting to access the forum will go to this external link instead (theme-specific)
            numRecentReplies:
              type: number
              description: The number of posts to render in the API response (this is mostly used at the theme level)
            class:
              type: string
              description: Values that are appended to the `class` attribute of the category's parent/root element
            imageClass:
              type: string
              enum:
                - auto
                - cover
                - contain
              description: The `background-position` of the category background image, if one is set
            isSection:
              type: number
            minTags:
              type: number
              description: Minimum tags per topic in this category
            maxTags:
              type: number
              description: Maximum tags per topic in this category
            postQueue:
              type: number
            totalPostCount:
              type: number
              description: The number of posts in the category
            totalTopicCount:
              type: number
              description: The number of topics in the category
            subCategoriesPerPage:
              type: number
              description: The number of subcategories to display on the categories and category page
        - type: object
          description: Optional properties that may or may not be present (except for `cid`, which is always present, and is only here as a hack to pass validation)
          properties:
            cid:
              type: number
              description: A category identifier
            backgroundImage:
              type: string
              description: Relative URL to the category's background image
          required:
            - cid
    PaginationProps:
      allOf:
        - type: object
          description: Optional properties that may or may not be present (except for `page`, which is always present, and is only here as a hack to pass validation)
          properties:
            page:
              type: number
            qs:
              type: string
          required:
            - cid
    Pagination:
      type: object
      properties:
        pagination:
          allOf:
            - $ref: '#/components/schemas/PaginationProps'
            - type: object
              properties:
                prev:
                  type: object
                  properties:
                    page:
                      type: number
                    active:
                      type: boolean
                next:
                  type: object
                  properties:
                    page:
                      type: number
                    active:
                      type: boolean
                first:
                  type: object
                  properties:
                    page:
                      type: number
                    active:
                      type: boolean
                last:
                  type: object
                  properties:
                    page:
                      type: number
                    active:
                      type: boolean
                rel:
                  type: array
                  description: A collection of objects used to build the link tags pointing to adjacent pages, if any.
                  items:
                    type: object
                    properties:
                      rel:
                        type: string
                        enum:
                          - prev
                          - next
                      href:
                        type: string
                        description: A query string that points to the previous or next page
                pages:
                  type: array
                  items:
                    type: object
                    properties:
                      page:
                        type: number
                        description: The current page
                      active:
                        type: boolean
                        description: If the page noted in this array is the current page
                      qs:
                        type: string
                        description: A query string that points to the page noted in this array
                currentPage:
                  type: number
                pageCount:
                  type: number
    CommonProps:
      type: object
      properties:
        loggedIn:
          type: boolean
          description: True if user is logged in, false otherwise
        loggedInUser:
          type: object
          description: The logged in user object
        relative_path:
          type: string
          description: |
            If NodeBB is installed in a subfolder this becomes the path to the forum. For example if your forum url is
            `example.org/community` then relative_path will be `/community`. If your forum url is `example.com` then relative path will be an empty string.
        template:
          type: object
          properties:
            name:
              type: string
              description: The path to the template, which acts as a unique name
              example: admin/settings/general
          additionalProperties:
            description: There will be one additional property added to all routes here. It is a boolean value whose key is the path to the current template. It is used on the client-side to verify the current page inside of a conditional (e.g. `if (ajaxify.data.template.topic)` to ensure a script is run only on the topic page)
            type: boolean
            enum:
              - true
        url:
          type: string
          description: Base url of the current page, does not include query params
        bodyClass:
          type: string
          description: The css class string that is appended to the body element
        _header:
          type: object
          description: List of meta and link tags that are added to the head element
          properties:
            tags:
              type: object
              properties:
                meta:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      content:
                        type: string
                      noEscape:
                        type: boolean
                      property:
                        type: string
                    required:
                      - content
                link:
                  type: array
                  items:
                    type: object
                    properties:
                      rel:
                        type: string
                      type:
                        type: string
                      href:
                        type: string
                      title:
                        type: string
                      sizes:
                        type: string
                      as:
                        type: string
                      noEscape:
                        type: boolean
                      crossorigin:
                        type: string
                        enum:
                          - ''
                          - anonymous
                          - use-credentials
                        description: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin
                    required:
                      - rel
                      - href
        widgets:
          type: object
          description: Each widget area will have its own property in this object
          additionalProperties:
            type: array
            description: A collection of HTML snippets that are appended to each widget area
            items:
              type: object
              properties:
                html:
                  type: string
    UserObject:
      type: object
      properties:
        uid:
          type: number
          description: A user identifier
          example: 1
        isLocal:
          type: boolean
          description: Whether the user belongs to the local installation or not.
        username:
          type: string
          description: A friendly name for a given user account
          example: Dragon Fruit
        userslug:
          type: string
          description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
          example: dragon-fruit
        email:
          type: string
          description: Email address associated with the user account
          example: dragonfruit@example.org
        email:confirmed:
          type: number
          description: Whether the user has confirmed their email address or not
          example: 1
        joindate:
          type: number
          description: A UNIX timestamp representing the moment the user's account was created
          example: 1585337827953
        lastonline:
          type: number
          description: A UNIX timestamp representing the moment the user was last recorded online on this site
          example: 1585337827953
        picture:
          type: string
          description: A URL pointing to a picture to be used as the user's avatar
          example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
          nullable: true
        fullname:
          type: string
          example: Mr. Dragon Fruit Jr.
        displayname:
          type: string
          description: This is either username or fullname depending on forum and user settings
          example: Dragon Fruit
        birthday:
          type: string
          description: A birthdate given in an ISO format parseable by the Date object
          example: 03/27/2020
          nullable: true
        aboutme:
          type: string
          example: |
            This is a paragraph all about how my life got twist-turned upside-down
            and I'd like to take a minute and sit right here,
            to tell you all about how I became the administrator of NodeBB
          nullable: true
        signature:
          type: string
          example: |
            This is an example signature
            It can span multiple lines.
          nullable: true
        uploadedpicture:
          type: string
          example: /assets/profile/1-profileimg.png
          description: In almost all cases, defer to "picture" instead. Use this if you need to specifically reference the picture uploaded to the forum.
          nullable: true
        profileviews:
          type: number
          description: The number of times this user's profile has been viewed
          example: 1000
        reputation:
          type: number
          description: The user's reputation score on the forum. Out-of-the-box, users gain/lose reputation points based on upvotes/downvotes, though plugins can alter the logic and criterion for awarding reputation points
          example: 100
        postcount:
          type: number
          example: 1000
        topiccount:
          type: number
          example: 50
        lastposttime:
          type: number
          description: A UNIX timestamp representing the moment the user posted last
          example: 1585337827953
        banned:
          type: number
          description: A Boolean representing whether a user is banned or not
          example: 0
        banned:expire:
          type: number
          description: A UNIX timestamp representing the moment the ban will be lifted
          example: 1585337827953
        status:
          type: string
          enum:
            - online
            - offline
            - dnd
            - away
          example: online
        flags:
          type: number
          example: 0
          nullable: true
        followerCount:
          type: number
          example: 2
        followingCount:
          type: number
          example: 5
        cover:url:
          type: string
          example: /assets/profile/1-cover.png
          nullable: true
        cover:position:
          type: string
          example: 50.0301% 19.2464%
          nullable: true
        groupTitle:
          type: string
          example: '["administrators","Staff"]'
          nullable: true
        groupTitleArray:
          type: array
          example:
            - administrators
            - Staff
        muted:
          type: boolean
          description: Whether or not the user has been muted.
        mutedUntil:
          type: number
          description: A UNIX timestamp representing the moment a muted state will be lifted.
        mutedReason:
          type: string
          description: The admin-provided reason for being muted.
        icon:text:
          type: string
          description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
          example: D
        icon:bgColor:
          type: string
          description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
          example: '#9c27b0'
        joindateISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        lastonlineISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        banned_until:
          type: number
          description: A UNIX timestamp representing the moment a ban will be lifted
          example: 0
        banned_until_readable:
          type: string
          description: An ISO 8601 formatted date string representing the moment a ban will be lifted, or the words "Not Banned"
          example: Not Banned
      required:
        - uid
        - username
        - userslug
        - email:confirmed
        - joindate
        - lastonline
        - picture
        - birthday
        - aboutme
        - signature
        - uploadedpicture
        - profileviews
        - reputation
        - postcount
        - topiccount
        - lastposttime
        - banned
        - banned:expire
        - status
        - enum
        - flags
        - followerCount
        - followingCount
        - cover:url
        - cover:position
        - groupTitle
        - groupTitleArray
        - example
        - icon:text
        - icon:bgColor
        - joindateISO
        - lastonlineISO
        - banned_until
        - banned_until_readable
    Stats:
      type: object
      properties:
        stats:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  yesterday:
                    type: number
                  today:
                    type: number
                  lastweek:
                    type: number
                  thisweek:
                    type: number
                  lastmonth:
                    type: number
                  thismonth:
                    type: number
                  alltime:
                    type: number
                  dayIncrease:
                    type: string
                  dayTextClass:
                    type: string
                  weekIncrease:
                    type: string
                  weekTextClass:
                    type: string
                  monthIncrease:
                    type: string
                  monthTextClass:
                    type: string
                  name:
                    type: string
              - type: object
                description: Optional properties that may or may not be present (except for `cid`, which is always present, and is only here as a hack to pass validation)
                properties:
                  name:
                    type: string
                  href:
                    type: string
                    description: Relative path to dashboard analytics sub-page, if applicable.
                required:
                  - name
    UserObj:
      properties:
        uid:
          type: number
          example: 1
        username:
          type: string
          example: Dragon Fruit
        userslug:
          type: string
          example: dragon-fruit
        email:
          type: string
          example: dragonfruit@example.org
        email:confirmed:
          type: number
          example: 1
        joindate:
          type: number
          example: 1585337827953
        lastonline:
          type: number
          example: 1585337827953
        picture:
          type: string
          example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
        fullname:
          type: string
          example: Mr. Dragon Fruit Jr.
        displayname:
          type: string
          description: This is either username or fullname depending on forum and user settings
          example: Dragon Fruit
        location:
          type: string
          example: Toronto, Canada
        birthday:
          type: string
          description: A birthdate given in an ISO format parseable by the Date object
          example: 03/27/2020
        website:
          type: string
          example: https://example.org
        aboutme:
          type: string
          example: |
            This is a paragraph all about how my life got twist-turned upside-down
            and I'd like to take a minute and sit right here,
            to tell you all about how I because the administrator of NodeBB
        signature:
          type: string
          example: |
            This is an example signature
            It can span multiple lines.
        uploadedpicture:
          type: string
          example: /assets/profile/1-profileimg.png
          description: In almost all cases, defer to "picture" instead. Use this if you need to specifically reference the picture uploaded to the forum.
        profileviews:
          type: number
          example: 1000
        reputation:
          type: number
          example: 100
        postcount:
          type: number
          example: 1000
        topiccount:
          type: number
          example: 50
        lastposttime:
          type: number
          example: 1585337827953
        banned:
          type: number
          example: 0
        banned:expire:
          type: number
          example: 1585337827953
        status:
          type: string
          example: online
        flags:
          type: number
          example: 0
        followercount:
          type: number
          example: 2
        followingcount:
          type: number
          example: 5
        cover:url:
          type: string
          example: /assets/profile/1-cover.png
        cover:position:
          type: string
          example: 50.0301% 19.2464%
        groupTitle:
          type: string
          example: '["administrators","Staff"]'
        groupTitleArray:
          type: array
          example:
            - administrators
            - Staff
        icon:text:
          type: string
          example: D
        icon:bgColor:
          type: string
          example: '#9c27b0'
        joindateISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        lastonlineISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        banned_until:
          type: number
          example: 0
        banned_until_readable:
          type: string
          example: Not Banned
    TopicObjectSlim:
      description: The output of a call to `Topics.getTopicField`, these properties are always present no matter the fields passed in
      allOf:
        - type: object
          properties:
            tid:
              type: number
              description: A topic identifier
            uid:
              type: number
              description: A user identifier
            cid:
              type: number
              description: A category identifier
            title:
              type: string
            slug:
              type: string
            mainPid:
              type: number
              description: The post id of the first post in this topic (also called the "original post")
            postcount:
              type: number
            viewcount:
              type: number
            postercount:
              type: number
            followercount:
              type: number
            scheduled:
              type: number
            deleted:
              type: number
            deleterUid:
              type: number
            titleRaw:
              type: string
            locked:
              type: number
            pinned:
              type: number
              description: Whether or not this particular topic is pinned to the top of the category
            timestamp:
              type: number
            timestampISO:
              type: string
              description: An ISO 8601 formatted date string (complementing `timestamp`)
            lastposttime:
              type: number
            lastposttimeISO:
              type: string
              description: An ISO 8601 formatted date string (complementing `lastposttime`)
            pinExpiry:
              type: number
              description: A UNIX timestamp indicating when a pinned topic will no longer be pinned (i.e. the pin has expired)
            pinExpiryISO:
              type: string
              description: '`pinExpiry` rendered as an ISO 8601 format'
            upvotes:
              type: number
            downvotes:
              type: number
            votes:
              type: number
            teaserPid:
              oneOf:
                - type: number
                - type: string
              nullable: true
            thumbs:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    description: The topic id
                  name:
                    type: string
                    description: The topic thumbnail filename
                  path:
                    type: string
                    description: Path to topic thumbnail without upload_url prefix
                  url:
                    type: string
                    description: Relative path to the topic thumbnail
        - type: object
          description: Optional properties that may or may not be present (except for `tid`, which is always present, and is only here as a hack to pass validation)
          properties:
            tid:
              type: number
              description: A topic identifier
            numThumbs:
              type: number
              description: The number of thumbnails associated with this topic
          required:
            - tid
    TopicObject:
      allOf:
        - $ref: '#/components/schemas/TopicObjectSlim'
        - type: object
          properties:
            lastposttime:
              type: number
            category:
              type: object
              properties:
                cid:
                  type: number
                  description: A category identifier
                name:
                  type: string
                slug:
                  type: string
                icon:
                  type: string
                backgroundImage:
                  nullable: true
                  type: string
                imageClass:
                  nullable: true
                  type: string
                bgColor:
                  type: string
                color:
                  type: string
                disabled:
                  type: number
            user:
              type: object
              properties:
                uid:
                  type: number
                  description: A user identifier
                isLocal:
                  type: boolean
                  description: Whether the user belongs to the local installation or not.
                username:
                  type: string
                  description: A friendly name for a given user account
                displayname:
                  type: string
                  description: This is either username or fullname depending on forum and user settings
                fullname:
                  type: string
                userslug:
                  type: string
                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                reputation:
                  type: number
                postcount:
                  type: number
                picture:
                  type: string
                  nullable: true
                signature:
                  type: string
                  nullable: true
                banned:
                  type: number
                status:
                  type: string
                icon:text:
                  type: string
                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                icon:bgColor:
                  type: string
                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                  example: '#f44336'
                banned_until_readable:
                  type: string
              required:
                - uid
                - username
                - userslug
                - reputation
                - postcount
                - picture
                - signature
                - banned
                - status
                - icon:text
                - icon:bgColor
                - banned_until_readable
            teaser:
              type: object
              properties:
                pid:
                  type: number
                uid:
                  type: number
                  description: A user identifier
                timestamp:
                  type: number
                tid:
                  type: number
                  description: A topic identifier
                content:
                  type: string
                timestampISO:
                  type: string
                  description: An ISO 8601 formatted date string (complementing `timestamp`)
                user:
                  type: object
                  properties:
                    uid:
                      type: number
                      description: A user identifier
                    username:
                      type: string
                      description: A friendly name for a given user account
                    userslug:
                      type: string
                      description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                    picture:
                      nullable: true
                      type: string
                    icon:text:
                      type: string
                      description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                    icon:bgColor:
                      type: string
                      description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                      example: '#f44336'
                index:
                  type: number
              nullable: true
            tags:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: string
                  valueEscaped:
                    type: string
                  color:
                    type: string
                  bgColor:
                    type: string
                  score:
                    type: number
            isOwner:
              type: boolean
            ignored:
              type: boolean
            followed:
              type: boolean
            unread:
              type: boolean
            bookmark:
              nullable: true
              type: number
            unreplied:
              type: boolean
            icons:
              type: array
              items:
                type: string
                description: HTML injected into the theme
        - type: object
          description: Optional properties that may or may not be present (except for `tid`, which is always present, and is only here as a hack to pass validation)
          properties:
            tid:
              type: number
              description: A topic identifier
            thumb:
              type: string
            pinExpiry:
              type: number
              description: A UNIX timestamp indicating when a pinned topic will no longer be pinned (i.e. the pin has expired)
            pinExpiryISO:
              type: string
              description: '`pinExpiry` rendered as an ISO 8601 format'
            index:
              type: number
          required:
            - tid
    GroupDataObject:
      type: object
      description: The response from an internal call to `Groups.getGroupsFields(<groupname>, [])` with **explicitly** no fields passed in
      properties:
        name:
          type: string
          description: The group name
        slug:
          type: string
          description: URL-safe slug of the group name
        createtime:
          type: number
          description: UNIX timestamp of the group's creation
        userTitle:
          type: number
          description: Label text for the user badge
        userTitleEscaped:
          type: number
          description: Same as userTitle but with translation tokens escaped, used to display raw userTitle in group management
        userTitleEnabled:
          type: number
        description:
          type: string
          description: The group description
        memberCount:
          type: number
        hidden:
          type: number
        system:
          type: number
        private:
          type: number
        disableJoinRequests:
          type: number
        disableLeave:
          type: number
        cover:url:
          type: string
        cover:thumb:url:
          type: string
        nameEncoded:
          type: string
        displayName:
          type: string
          description: A custom override of the group's name, a friendly name
        labelColor:
          type: string
          description: A six-character hexadecimal colour code
        textColor:
          type: string
          description: A six-character hexadecimal colour code
        icon:
          type: string
          description: A FontAwesome icon string
        createtimeISO:
          type: string
          description: '`createtime` rendered as an ISO 8601 format'
        cover:position:
          type: string
        memberPostCids:
          type: string
        memberPostCidsArray:
          type: array
          items:
            type: number
            example:
              - 1
              - 2
              - 3
    TokenObject:
      type: object
      properties:
        uid:
          type: number
          description: A valid user id
        description:
          type: string
          description: Optional descriptor to differentiate tokens.
        token:
          type: string
          description: An API token that can be called against this API via Bearer Authentication.
        timestamp:
          type: number
        timestampISO:
          type: string
          description: An ISO 8601 formatted date string (complementing `timestamp`)
        lastSeen:
          type: number
          nullable: true
        lastSeenISO:
          type: string
          description: An ISO 8601 formatted date string (complementing `lastSeen`)
          nullable: true
    TagObject:
      type: object
      properties:
        value:
          type: string
          description: The tag name
        score:
          type: number
          description: The number of topics containing this tag
        class:
          type: string
          description: Class name that is applied to the to the tag html element
        valueEscaped:
          type: string
          description: value escaped with validator.escape
        valueEncoded:
          type: string
          description: value url encoded
    UserObjectACP:
      type: object
      required:
        - uid
        - username
      properties:
        uid:
          type: number
          description: A user identifier
          example: 1
        isLocal:
          type: boolean
          description: Whether the user belongs to the local installation or not.
        username:
          type: string
          description: A friendly name for a given user account
          example: Dragon Fruit
        displayname:
          type: string
          description: This is either username or fullname depending on forum and user settings
          example: Dragon Fruit
        userslug:
          type: string
          description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
          example: dragon-fruit
        email:
          type: string
          description: Email address associated with the user account
          example: dragonfruit@example.org
        emailToConfirm:
          type: string
          description: Email address user used during signup, this email is not associated with the user until it is confirmed by clicking the link in the confirmation email.
        postcount:
          type: number
          example: 1000
        joindate:
          type: number
          description: A UNIX timestamp representing the moment the user's account was created
          example: 1585337827953
        banned:
          type: number
          description: A Boolean representing whether a user is banned or not
          example: 0
        reputation:
          type: number
          description: The user's reputation score on the forum. Out-of-the-box, users gain/lose reputation points based on upvotes/downvotes, though plugins can alter the logic and criterion for awarding reputation points
          example: 100
        picture:
          type: string
          description: A URL pointing to a picture to be used as the user's avatar
          example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
          nullable: true
        flags:
          type: number
          example: 0
          nullable: true
        lastonline:
          type: number
          description: A UNIX timestamp representing the moment the user was last recorded online on this site
          example: 1585337827953
        email:confirmed:
          type: number
          description: Whether the user has confirmed their email address or not
          example: 1
        email:expired:
          type: boolean
          description: True if confirmation email expired
        email:pending:
          type: boolean
          description: True if confirmation email is still pending
        icon:text:
          type: string
          description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
          example: D
        icon:bgColor:
          type: string
          description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
          example: '#9c27b0'
        joindateISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        lastonlineISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        banned_until_readable:
          type: string
          description: An ISO 8601 formatted date string representing the moment a ban will be lifted, or the words "Not Banned"
          example: Not Banned
        administrator:
          type: boolean
        ip:
          type: string
          nullable: true
        ips:
          type: array
    UserObjectSlim:
      type: object
      properties:
        uid:
          type: number
          description: A user identifier
          example: 1
        isLocal:
          type: boolean
          description: Whether the user belongs to the local installation or not.
        username:
          type: string
          description: A friendly name for a given user account
          example: Dragon Fruit
        displayname:
          type: string
          description: This is either username or fullname depending on forum and user settings
          example: Dragon Fruit
        userslug:
          type: string
          description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
          example: dragon-fruit
        picture:
          type: string
          description: A URL pointing to a picture to be used as the user's avatar
          example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
          nullable: true
        status:
          type: string
          enum:
            - online
            - offline
            - dnd
            - away
          example: online
        postcount:
          type: number
          example: 1000
        reputation:
          type: number
          description: The user's reputation score on the forum. Out-of-the-box, users gain/lose reputation points based on upvotes/downvotes, though plugins can alter the logic and criterion for awarding reputation points
          example: 100
        email:confirmed:
          type: number
          description: Whether the user has confirmed their email address or not
          example: 1
        lastonline:
          type: number
          description: A UNIX timestamp representing the moment the user was last recorded online on this site
          example: 1585337827953
        flags:
          type: number
          example: 0
          nullable: true
        banned:
          type: number
          description: A Boolean representing whether a user is banned or not
          example: 0
        banned:expire:
          type: number
          description: A UNIX timestamp representing the moment the ban will be lifted
          example: 1585337827953
        joindate:
          type: number
          description: A UNIX timestamp representing the moment the user's account was created
          example: 1585337827953
        icon:text:
          type: string
          description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
          example: D
        icon:bgColor:
          type: string
          description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
          example: '#9c27b0'
        joindateISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        lastonlineISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        banned_until:
          type: number
          description: A UNIX timestamp representing the moment a ban will be lifted
          example: 0
        banned_until_readable:
          type: string
          description: An ISO 8601 formatted date string representing the moment a ban will be lifted, or the words "Not Banned"
          example: Not Banned
    GroupFullObject:
      type: object
      description: The response from an internal call to `Groups.get(<groupname>)`
      properties:
        name:
          type: string
          description: The group name
        slug:
          type: string
          description: URL-safe slug of the group name
        createtime:
          type: number
          description: UNIX timestamp of the group's creation
        userTitle:
          type: number
          description: Label text for the user badge
        userTitleEscaped:
          type: number
          description: Same as userTitle but with translation tokens escaped, used to display raw userTitle in group management
        userTitleEnabled:
          type: number
        description:
          type: string
          description: The group description
        memberCount:
          type: number
        hidden:
          type: number
        system:
          type: number
        private:
          type: number
        disableJoinRequests:
          type: number
        disableLeave:
          type: number
        nameEncoded:
          type: string
        displayName:
          type: string
          description: A custom override of the group's name, a friendly name
        labelColor:
          type: string
          description: A six-character hexadecimal colour code
        textColor:
          type: string
          description: A six-character hexadecimal colour code
        memberPostCids:
          type: string
        memberPostCidsArray:
          type: array
          items:
            type: number
            example:
              - 1
              - 2
              - 3
        icon:
          type: string
          description: A FontAwesome icon string
        createtimeISO:
          type: string
          description: '`createtime` rendered as an ISO 8601 format'
        cover:thumb:url:
          type: string
        cover:url:
          type: string
        cover:position:
          type: string
        descriptionParsed:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/UserObjectSlim'
        membersNextStart:
          type: number
        pending:
          type: array
          items:
            type: object
            properties:
              uid:
                type: number
                description: A user identifier
                example: 1
              username:
                type: string
                description: A friendly name for a given user account
                example: Dragon Fruit
              userslug:
                type: string
                description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                example: dragon-fruit
              picture:
                type: string
                description: A URL pointing to a picture to be used as the user's avatar
                example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
                nullable: true
              displayname:
                type: string
                description: This is either username or fullname depending on forum and user settings
                example: Dragon Fruit
              icon:text:
                type: string
                description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                example: D
              icon:bgColor:
                type: string
                description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                example: '#9c27b0'
        invited:
          type: array
          items:
            type: object
            properties:
              uid:
                type: number
                description: A user identifier
                example: 1
              username:
                type: string
                description: A friendly name for a given user account
                example: Dragon Fruit
              userslug:
                type: string
                description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                example: dragon-fruit
              picture:
                type: string
                description: A URL pointing to a picture to be used as the user's avatar
                example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
                nullable: true
              displayname:
                type: string
                description: This is either username or fullname depending on forum and user settings
                example: Dragon Fruit
              icon:text:
                type: string
                description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                example: D
              icon:bgColor:
                type: string
                description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                example: '#9c27b0'
        isMember:
          type: boolean
        isPending:
          type: boolean
        isInvited:
          type: boolean
        isOwner:
          type: boolean
      nullable: true
    Breadcrumbs:
      type: object
      properties:
        breadcrumbs:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
              url:
                type: string
              cid:
                type: number
            required:
              - text
    PostDataObject:
      description: The output as returned from `Posts.getPostsData`
      allOf:
        - type: object
          properties:
            pid:
              type: number
            uid:
              type: number
              description: A user identifier
            tid:
              type: number
              description: A topic identifier
            content:
              type: string
            timestamp:
              type: number
            votes:
              type: number
            deleted:
              type: number
            upvotes:
              type: number
            downvotes:
              type: number
            bookmarks:
              type: number
            deleterUid:
              type: number
            edited:
              type: number
            timestampISO:
              type: string
              description: An ISO 8601 formatted date string (complementing `timestamp`)
            editedISO:
              type: string
            index:
              type: number
            user:
              type: object
              properties:
                uid:
                  type: number
                  description: A user identifier
                isLocal:
                  type: boolean
                  description: Whether the user belongs to the local installation or not.
                username:
                  type: string
                  description: A friendly name for a given user account
                displayname:
                  type: string
                  description: This is either username or fullname depending on forum and user settings
                userslug:
                  type: string
                  description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                reputation:
                  type: number
                postcount:
                  type: number
                topiccount:
                  type: number
                picture:
                  type: string
                  nullable: true
                signature:
                  type: string
                banned:
                  type: number
                banned:expire:
                  type: number
                status:
                  type: string
                lastonline:
                  type: number
                groupTitle:
                  nullable: true
                  type: string
                groupTitleArray:
                  type: array
                  items:
                    type: string
                muted:
                  type: boolean
                  description: Whether or not the user has been muted.
                mutedUntil:
                  type: number
                  description: A UNIX timestamp representing the moment a muted state will be lifted.
                  nullable: true
                icon:text:
                  type: string
                  description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                icon:bgColor:
                  type: string
                  description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                  example: '#f44336'
                lastonlineISO:
                  type: string
                banned_until:
                  type: number
                banned_until_readable:
                  type: string
                selectedGroups:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      slug:
                        type: string
                      labelColor:
                        type: string
                      textColor:
                        type: string
                      icon:
                        type: string
                      userTitle:
                        type: string
                custom_profile_info:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                        description: HTML that is injected into `topic.tpl` of themes that support custom profile info
            editor:
              nullable: true
            bookmarked:
              type: boolean
            upvoted:
              type: boolean
            downvoted:
              type: boolean
            attachments:
              type: array
            replies:
              type: object
              properties:
                hasMore:
                  type: boolean
                users:
                  type: array
                  items:
                    type: object
                    properties:
                      username:
                        type: string
                        description: A friendly name for a given user account
                      userslug:
                        type: string
                        description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                      picture:
                        type: string
                      uid:
                        type: number
                        description: A user identifier
                      icon:text:
                        type: string
                        description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                      icon:bgColor:
                        type: string
                        description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                        example: '#f44336'
                      administrator:
                        type: boolean
                text:
                  type: string
                count:
                  type: number
                hasSingleImmediateReply:
                  type: boolean
            selfPost:
              type: boolean
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  id:
                    type: number
                  timestamp:
                    type: number
                  timestampISO:
                    type: string
            topicOwnerPost:
              type: boolean
            display_edit_tools:
              type: boolean
            display_delete_tools:
              type: boolean
            display_moderator_tools:
              type: boolean
            display_move_tools:
              type: boolean
            display_post_menu:
              type: boolean
            flagId:
              type: number
              description: The flag identifier, if this particular post has been flagged before
        - type: object
          description: Optional properties that may or may not be present (except for `pid`, which is always present, and is only here as a hack to pass validation)
          properties:
            pid:
              type: number
              description: A post identifier
            sourceContent:
              type: string
              description: The markdown equivalent of a remote post content, as received (or fetched) from the remote site.
          required:
            - pid
    PostObject:
      description: A single post in the array returned from `Posts.getPostSummaryByPids`
      type: object
      properties:
        pid:
          type: number
        tid:
          type: number
          description: A topic identifier
        toPid:
          type: number
          description: The post that this post is in reply to
          nullable: true
        url:
          type: string
          description: |
            A permalink to the post content.
            For posts received via ActivityPub, it is the url of the original piece of content.
        content:
          type: string
        sourceContent:
          type: string
          nullable: true
        uid:
          type: number
          description: A user identifier
        timestamp:
          type: number
        deleted:
          type: boolean
        upvotes:
          type: number
        downvotes:
          type: number
        votes:
          type: number
        timestampISO:
          type: string
          description: An ISO 8601 formatted date string (complementing `timestamp`)
        user:
          type: object
          properties:
            uid:
              type: number
              description: A user identifier
            isLocal:
              type: boolean
              description: Whether the user belongs to the local installation or not.
            username:
              type: string
              description: A friendly name for a given user account
            displayname:
              type: string
              description: This is either username or fullname depending on forum and user settings
            userslug:
              type: string
              description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
            picture:
              type: string
              nullable: true
            status:
              type: string
            icon:text:
              type: string
              description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
            icon:bgColor:
              type: string
              description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
              example: '#f44336'
        topic:
          type: object
          properties:
            uid:
              type: number
              description: A user identifier
            tid:
              type: number
              description: A topic identifier
            title:
              type: string
            cid:
              type: number
              description: A category identifier
            slug:
              type: string
            deleted:
              type: number
            scheduled:
              type: number
            timestamp:
              type: number
            timestampISO:
              type: string
              description: An ISO 8601 formatted date string (complementing `timestamp`)
            postcount:
              type: number
            mainPid:
              type: number
              description: The post id of the first post in this topic (also called the "original post")
            teaserPid:
              type: number
              description: The post id of the teaser (the most recent post, depending on settings)
              nullable: true
            titleRaw:
              type: string
            oldTitle:
              type: string
            isMainPost:
              type: boolean
            renamed:
              type: boolean
            tags:
              type: array
              items:
                $ref: '#/components/schemas/TagObject'
          required:
            - uid
            - tid
            - cid
            - title
            - slug
        category:
          type: object
          properties:
            cid:
              type: number
              description: A category identifier
            name:
              type: string
            icon:
              type: string
            slug:
              type: string
            parentCid:
              type: number
              description: The category identifier for the category that is the immediate ancestor of the current category
            bgColor:
              type: string
            color:
              type: string
            backgroundImage:
              nullable: true
            imageClass:
              nullable: true
              type: string
        isMainPost:
          type: boolean
        replies:
          type: number
    PostsObject:
      description: One of the objects in the array returned from `Posts.getPostSummaryByPids`
      type: array
      items:
        $ref: '#/components/schemas/PostObject'
    Status:
      type: object
      properties:
        code:
          type: string
          example: ok
        message:
          type: string
          example: OK
    FlagHistoryObject:
      type: object
      properties:
        history:
          type: array
          nullable: true
          items:
            type: object
            properties:
              uid:
                type: number
                description: A user identifier
              fields:
                type: object
                additionalProperties: {}
              meta:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                    labelClass:
                      type: string
                      enum:
                        - default
                        - primary
                        - success
                        - info
                        - danger
                  required:
                    - key
              datetime:
                type: number
              datetimeISO:
                type: string
              user:
                type: object
                properties:
                  username:
                    type: string
                    description: A friendly name for a given user account
                  displayname:
                    type: string
                    description: This is either username or fullname depending on forum and user settings
                  userslug:
                    type: string
                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                  picture:
                    nullable: true
                  uid:
                    type: number
                    description: A user identifier
                  isLocal:
                    type: boolean
                    description: Whether the user belongs to the local installation or not.
                  icon:text:
                    type: string
                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                  icon:bgColor:
                    type: string
                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                    example: '#f44336'
            required:
              - uid
              - datetime
              - datetimeISO
              - user
    FlagNotesObject:
      type: object
      properties:
        notes:
          type: array
          items:
            type: object
            properties:
              uid:
                type: number
              content:
                type: string
              datetime:
                type: number
              datetimeISO:
                type: string
              user:
                type: object
                properties:
                  username:
                    type: string
                    description: A friendly name for a given user account
                  userslug:
                    type: string
                    description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                  displayname:
                    type: string
                    description: This is either username or fullname depending on forum and user settings
                    example: Dragon Fruit
                  picture:
                    type: string
                    nullable: true
                  uid:
                    type: number
                    description: A user identifier
                  isLocal:
                    type: boolean
                    description: Whether the user belongs to the local installation or not.
                  icon:text:
                    type: string
                    description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                  icon:bgColor:
                    type: string
                    description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                    example: '#f44336'
    FlagObject:
      description: The resulting object of a call to `Flags.get()`
      allOf:
        - type: object
          properties:
            state:
              type: string
            flagId:
              type: number
            type:
              type: string
            targetId:
              type: number
            targetUid:
              type: number
            datetime:
              type: number
            datetimeISO:
              type: string
            target_readable:
              type: string
            target:
              type: object
              properties: {}
              additionalProperties:
                description: Properties change depending on the target type (user, post, etc.)
            assignee:
              type: number
              nullable: true
            reports:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: string
                  timestamp:
                    type: number
                  timestampISO:
                    type: string
                  reporter:
                    type: object
                    properties:
                      username:
                        type: string
                        description: A friendly name for a given user account
                      displayname:
                        type: string
                        description: This is either username or fullname depending on forum and user settings
                      userslug:
                        type: string
                        description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
                      picture:
                        nullable: true
                      reputation:
                        type: number
                      uid:
                        type: number
                        description: A user identifier
                      isLocal:
                        type: boolean
                        description: Whether the user belongs to the local installation or not.
                      icon:text:
                        type: string
                        description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
                      icon:bgColor:
                        type: string
                        description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                        example: '#f44336'
        - $ref: '#/components/schemas/FlagHistoryObject'
        - $ref: '#/components/schemas/FlagNotesObject'
    UserObjectFull:
      type: object
      properties:
        uid:
          type: number
          description: A user identifier
          example: 1
        isLocal:
          type: boolean
          description: Whether the user belongs to the local installation or not.
        username:
          type: string
          description: A friendly name for a given user account
          example: Dragon Fruit
        userslug:
          type: string
          description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
          example: dragon-fruit
        email:
          type: string
          description: Email address associated with the user account
          example: dragonfruit@example.org
        email:confirmed:
          type: number
          description: Whether the user has confirmed their email address or not
          example: 1
        joindate:
          type: number
          description: A UNIX timestamp representing the moment the user's account was created
          example: 1585337827953
        lastonline:
          type: number
          description: A UNIX timestamp representing the moment the user was last recorded online on this site
          example: 1585337827953
        picture:
          type: string
          description: A URL pointing to a picture to be used as the user's avatar
          example: https://images.unsplash.com/photo-1560070094-e1f2ddec4337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=256&h=256&q=80
          nullable: true
        fullname:
          type: string
          example: Mr. Dragon Fruit Jr.
        displayname:
          type: string
          description: This is either username or fullname depending on forum and user settings
          example: Dragon Fruit
        birthday:
          type: string
          description: A birthdate given in an ISO format parseable by the Date object
          example: 03/27/2020
        aboutme:
          type: string
          example: |
            This is a paragraph all about how my life got twist-turned upside-down
            and I'd like to take a minute and sit right here,
            to tell you all about how I became the administrator of NodeBB
        signature:
          type: string
          example: |
            This is an example signature
            It can span multiple lines.
        uploadedpicture:
          type: string
          example: /assets/profile/1-profileimg.png
          description: In almost all cases, defer to "picture" instead. Use this if you need to specifically reference the picture uploaded to the forum.
          nullable: true
        profileviews:
          type: number
          description: The number of times this user's profile has been viewed
          example: 1000
        reputation:
          type: number
          description: The user's reputation score on the forum. Out-of-the-box, users gain/lose reputation points based on upvotes/downvotes, though plugins can alter the logic and criterion for awarding reputation points
          example: 100
        postcount:
          type: number
          example: 1000
        topiccount:
          type: number
          example: 50
        lastposttime:
          type: number
          description: A UNIX timestamp representing the moment the user posted last
          example: 1585337827953
        banned:
          type: number
          description: A Boolean representing whether a user is banned or not
          example: 0
        banned:expire:
          type: number
          description: A UNIX timestamp representing the moment the ban will be lifted
          example: 1585337827953
        status:
          type: string
          enum:
            - online
            - offline
            - dnd
            - away
          example: online
        flags:
          type: number
          example: 0
          nullable: true
        followerCount:
          type: number
          example: 2
        followingCount:
          type: number
          example: 5
        cover:url:
          type: string
          example: /assets/profile/1-cover.png
          nullable: true
        cover:position:
          type: string
          example: 50.0301% 19.2464%
          nullable: true
        groupTitle:
          type: string
          example: '["administrators","Staff"]'
        groupTitleArray:
          type: array
          example:
            - administrators
            - Staff
        iconBackgrounds:
          type: array
          items:
            type: string
            description: A valid CSS colour code
            example: '#fff'
        muted:
          type: boolean
          description: Whether or not the user has been muted.
        mutedUntil:
          type: number
          description: A UNIX timestamp representing the moment a muted state will be lifted.
          nullable: true
        mutedReason:
          type: string
          description: The admin-provided reason for being muted.
          nullable: true
        icon:text:
          type: string
          description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
          example: D
        icon:bgColor:
          type: string
          description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
          example: '#9c27b0'
        joindateISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        lastonlineISO:
          type: string
          example: '2020-03-27T20:30:36.590Z'
        banned_until:
          type: number
          description: A UNIX timestamp representing the moment a ban will be lifted
          example: 0
        banned_until_readable:
          type: string
          description: An ISO 8601 formatted date string representing the moment a ban will be lifted, or the words "Not Banned"
          example: Not Banned
        aboutmeParsed:
          type: string
        age:
          type: number
        emailHidden:
          type: boolean
        emailClass:
          type: string
        ips:
          type: array
          items:
            type: string
        moderationNote:
          type: string
        counts:
          type: object
          properties:
            blocks:
              type: number
            categoriesWatched:
              type: number
            tagsWatched:
              type: number
            followers:
              type: number
            following:
              type: number
            groups:
              type: number
            posts:
              type: number
            topics:
              type: number
            uploaded:
              type: number
            shares:
              type: number
        isBlocked:
          type: boolean
        blocksCount:
          type: number
        yourid:
          type: number
        theirid:
          type: number
        isTargetAdmin:
          type: boolean
        isAdmin:
          type: boolean
        isGlobalModerator:
          type: boolean
        isModerator:
          type: boolean
        isAdminOrGlobalModerator:
          type: boolean
        isAdminOrGlobalModeratorOrModerator:
          type: boolean
        isSelfOrAdminOrGlobalModerator:
          type: boolean
        canEdit:
          type: boolean
        canBan:
          type: boolean
        canMute:
          type: boolean
        canFlag:
          type: boolean
        flagId:
          type: number
          nullable: true
        canChangePassword:
          type: boolean
        isSelf:
          type: boolean
        isFollowing:
          type: boolean
        isFollowPending:
          type: boolean
        canChat:
          type: boolean
        hasPrivateChat:
          type: number
        showHidden:
          type: boolean
        allowProfilePicture:
          type: boolean
        allowCoverPicture:
          type: boolean
        allowProfileImageUploads:
          type: number
        allowedProfileImageExtensions:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupFullObject'
        selectedGroup:
          type: array
          items:
            $ref: '#/components/schemas/GroupFullObject'
        disableSignatures:
          type: boolean
        reputation:disabled:
          type: boolean
        downvote:disabled:
          type: boolean
        profile_links:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              route:
                type: string
              url:
                type: string
                description: The relative path to the profile link route from the root of the forum
              name:
                type: string
              visibility:
                type: object
                properties:
                  self:
                    type: boolean
                  other:
                    type: boolean
                  moderator:
                    type: boolean
                  globalMod:
                    type: boolean
                  admin:
                    type: boolean
                  canViewInfo:
                    type: boolean
              public:
                type: boolean
              icon:
                type: string
            required:
              - id
              - route
              - name
              - visibility
              - public
        username:disableEdit:
          type: number
        email:disableEdit:
          type: number
    BanMuteArray:
      type: array
      items:
        type: object
        properties:
          uid:
            type: number
          timestamp:
            type: number
          expire:
            type: number
          fromUid:
            type: number
          user:
            type: object
            properties:
              username:
                type: string
                description: A friendly name for a given user account
              userslug:
                type: string
                description: An URL-safe variant of the username (i.e. lower-cased, spaces removed, etc.)
              picture:
                type: string
              uid:
                type: number
                description: A user identifier
              icon:text:
                type: string
                description: A single-letter representation of a username. This is used in the auto-generated icon given to users without an avatar
              icon:bgColor:
                type: string
                description: A six-character hexadecimal colour code assigned to the user. This value is used in conjunction with `icon:text` for the user's auto-generated icon
                example: '#f44336'
          until:
            type: number
          untilISO:
            type: string
          timestampISO:
            type: string
          reason:
            type: string
    Settings:
      type: object
      properties:
        showemail:
          type: boolean
          description: Show user email in profile page
        usePagination:
          type: boolean
          description: Toggles between pagination (when enabled), or infinite scrolling (when disabled)
        topicsPerPage:
          type: number
          description: Number of topics displayed on a category page
        postsPerPage:
          type: number
          description: Number of posts displayed on a topic page
        topicPostSort:
          type: string
          description: Default sorting strategy of the posts in of a topic
        openOutgoingLinksInNewTab:
          type: boolean
          description: Whether to automatically open all external links in a new tab
        dailyDigestFreq:
          type: string
          description: How often to receive the scheduled digest from this forum
        showfullname:
          type: boolean
          description: Show user full name in profile page
        followTopicsOnCreate:
          type: boolean
          description: Automatically be notified of new posts in a topic, when you create a topic
        followTopicsOnReply:
          type: boolean
          description: Automatically be notified of new posts in a topic, when you reply to that topic
        disableIncomingChats:
          type: boolean
          description: Do not allow other users to start chats with you (or add you to other chat rooms)
        chatAllowList:
          type: array
          items:
            type: string
          description: List of uids that can start chats with you
        chatDenyList:
          type: array
          items:
            type: string
          description: List of uids that are not allowed to start chats with you
        chatAllowListUsers:
          type: array
          description: List of users that can start chats with you
        chatDenyListUsers:
          type: array
          description: List of users that are not allowed to start chats with you
        topicSearchEnabled:
          type: boolean
          description: Enable keyword searching within topics
        updateUrlWithPostIndex:
          type: boolean
          description: Update url with post index while browsing topics
        categoryTopicSort:
          type: string
          description: Default sorting strategy of the topics in a category
        userLang:
          type: string
          description: Override the system localised language in favour of the language defined here
        bootswatchSkin:
          type: string
          description: Set a custom bootswatch skin
        homePageRoute:
          type: string
          description: Override the behaviour of the home page route (`/`) to go to a specific page
        scrollToMyPost:
          type: boolean
          description: Automatically center the viewport to you new post after posting
        notificationType_new-chat:
          type: string
          description: Notification type for new chat messages
        notificationType_new-group-chat:
          type: string
          description: Notification type for new group chat messages
        notificationType_new-public-chat:
          type: string
          description: Notification type for new public group chat messages
        notificationType_new-reply:
          type: string
          description: Notification type for new topic replies
        notificationType_post-edit:
          type: string
          description: Notification type for post edits
        sendChatNotifications:
          nullable: true
        sendPostNotifications:
          nullable: true
        notificationType_upvote:
          type: string
          description: Notification type for upvotes
        notificationType_new-topic:
          type: string
          description: Notification type for new topics
        notificationType_new-topic-with-tag:
          type: string
          description: Notification type for new topics with followed tag
        notificationType_new-topic-in-category:
          type: string
          description: Notification type for new topics in watched category
        notificationType_follow:
          type: string
          description: Notification type for another user following you
        notificationType_group-invite:
          type: string
          description: Notification type for group invitations
        notificationType_group-leave:
          type: string
          description: Notification type for when users leave your group
        upvoteNotifFreq:
          type: string
          description: How often to notify you when your posts are upvoted
        notificationType_mention:
          type: string
          description: Notification type for mentions in a post
        notificationType_new-reward:
          type: string
          description: Notification type for when you earn a reward
        acpLang:
          type: string
          description: Language localisation for the admin control panel
        notificationType_new-register:
          type: string
          description: Notification type for new registration in queue
        notificationType_post-queue:
          type: string
          description: Notification type for new post in post queue
        notificationType_new-post-flag:
          type: string
          description: Notification type for post flagged
        notificationType_new-user-flag:
          type: string
          description: Notification type for user flagged
        categoryWatchState:
          type: string
          description: Default watch state for categories
        notificationType_group-request-membership:
          type: string
          description: Notification type for group membership requests
        uid:
          type: number
          description: A user identifier
      required:
        - showemail
        - usePagination
        - topicsPerPage
        - postsPerPage
        - topicPostSort
        - openOutgoingLinksInNewTab
        - dailyDigestFreq
        - showfullname
        - followTopicsOnCreate
        - followTopicsOnReply
        - restrictChat
        - topicSearchEnabled
        - categoryTopicSort
        - userLang
        - bootswatchSkin
        - homePageRoute
        - scrollToMyPost
        - notificationType_new-chat
        - notificationType_new-reply
        - notificationType_upvote
        - notificationType_new-topic
        - notificationType_follow
        - notificationType_group-invite
        - notificationType_group-leave
        - upvoteNotifFreq
        - acpLang
        - notificationType_new-register
        - notificationType_post-queue
        - notificationType_new-post-flag
        - notificationType_new-user-flag
        - categoryWatchState
        - notificationType_group-request-membership
        - uid
    FiltersObject:
      type: object
      properties:
        name:
          type: string
        filter:
          type: string
        selected:
          type: boolean
        count:
          type: number
      required:
        - name
        - filter
    FiltersArray:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/FiltersObject'
          - type: object
            properties:
              separator:
                type: boolean
